//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Apsoil.ApsoilWeb {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceSoap", Namespace="http://apsimdev.apsim.info/")]
    public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SoilNamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback AllSoilNamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAllSoilsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateSoilOperationCompleted;
        
        private System.Threading.SendOrPostCallback SoilXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSoilInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSoilAnalysisInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback SoilTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback PAWOperationCompleted;
        
        private System.Threading.SendOrPostCallback PAWCOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConvertSoilSampleXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback SoilChartPNGOperationCompleted;
        
        private System.Threading.SendOrPostCallback SoilChartWithSamplePNGOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchSoilsReturnInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClosestMatchingSoilsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SoilAsJsonOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUserSoilOperationCompleted;
        
        private System.Threading.SendOrPostCallback PAWCJsonOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchSoilsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AllAustralianSoilsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SoilChartPNGFromXMLOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service() {
            this.Url = global::Apsoil.Properties.Settings.Default.Apsoil_ApsoilWeb_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SoilNamesCompletedEventHandler SoilNamesCompleted;
        
        /// <remarks/>
        public event AllSoilNamesCompletedEventHandler AllSoilNamesCompleted;
        
        /// <remarks/>
        public event UpdateAllSoilsCompletedEventHandler UpdateAllSoilsCompleted;
        
        /// <remarks/>
        public event UpdateSoilCompletedEventHandler UpdateSoilCompleted;
        
        /// <remarks/>
        public event SoilXMLCompletedEventHandler SoilXMLCompleted;
        
        /// <remarks/>
        public event DeleteCompletedEventHandler DeleteCompleted;
        
        /// <remarks/>
        public event GetSoilInfoCompletedEventHandler GetSoilInfoCompleted;
        
        /// <remarks/>
        public event GetSoilAnalysisInfoCompletedEventHandler GetSoilAnalysisInfoCompleted;
        
        /// <remarks/>
        public event SoilTypesCompletedEventHandler SoilTypesCompleted;
        
        /// <remarks/>
        public event PAWCompletedEventHandler PAWCompleted;
        
        /// <remarks/>
        public event PAWCCompletedEventHandler PAWCCompleted;
        
        /// <remarks/>
        public event ConvertSoilSampleXMLCompletedEventHandler ConvertSoilSampleXMLCompleted;
        
        /// <remarks/>
        public event SoilChartPNGCompletedEventHandler SoilChartPNGCompleted;
        
        /// <remarks/>
        public event SoilChartWithSamplePNGCompletedEventHandler SoilChartWithSamplePNGCompleted;
        
        /// <remarks/>
        public event SearchSoilsReturnInfoCompletedEventHandler SearchSoilsReturnInfoCompleted;
        
        /// <remarks/>
        public event ClosestMatchingSoilsCompletedEventHandler ClosestMatchingSoilsCompleted;
        
        /// <remarks/>
        public event SoilAsJsonCompletedEventHandler SoilAsJsonCompleted;
        
        /// <remarks/>
        public event UpdateUserSoilCompletedEventHandler UpdateUserSoilCompleted;
        
        /// <remarks/>
        public event PAWCJsonCompletedEventHandler PAWCJsonCompleted;
        
        /// <remarks/>
        public event SearchSoilsCompletedEventHandler SearchSoilsCompleted;
        
        /// <remarks/>
        public event AllAustralianSoilsCompletedEventHandler AllAustralianSoilsCompleted;
        
        /// <remarks/>
        public event SoilChartPNGFromXMLCompletedEventHandler SoilChartPNGFromXMLCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://apsimdev.apsim.info/SoilNames", RequestNamespace="http://apsimdev.apsim.info/", ResponseNamespace="http://apsimdev.apsim.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] SoilNames() {
            object[] results = this.Invoke("SoilNames", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void SoilNamesAsync() {
            this.SoilNamesAsync(null);
        }
        
        /// <remarks/>
        public void SoilNamesAsync(object userState) {
            if ((this.SoilNamesOperationCompleted == null)) {
                this.SoilNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSoilNamesOperationCompleted);
            }
            this.InvokeAsync("SoilNames", new object[0], this.SoilNamesOperationCompleted, userState);
        }
        
        private void OnSoilNamesOperationCompleted(object arg) {
            if ((this.SoilNamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SoilNamesCompleted(this, new SoilNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://apsimdev.apsim.info/AllSoilNames", RequestNamespace="http://apsimdev.apsim.info/", ResponseNamespace="http://apsimdev.apsim.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] AllSoilNames(bool IncludeUserSoils) {
            object[] results = this.Invoke("AllSoilNames", new object[] {
                        IncludeUserSoils});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void AllSoilNamesAsync(bool IncludeUserSoils) {
            this.AllSoilNamesAsync(IncludeUserSoils, null);
        }
        
        /// <remarks/>
        public void AllSoilNamesAsync(bool IncludeUserSoils, object userState) {
            if ((this.AllSoilNamesOperationCompleted == null)) {
                this.AllSoilNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAllSoilNamesOperationCompleted);
            }
            this.InvokeAsync("AllSoilNames", new object[] {
                        IncludeUserSoils}, this.AllSoilNamesOperationCompleted, userState);
        }
        
        private void OnAllSoilNamesOperationCompleted(object arg) {
            if ((this.AllSoilNamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AllSoilNamesCompleted(this, new AllSoilNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://apsimdev.apsim.info/UpdateAllSoils", RequestNamespace="http://apsimdev.apsim.info/", ResponseNamespace="http://apsimdev.apsim.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateAllSoils(string Contents) {
            this.Invoke("UpdateAllSoils", new object[] {
                        Contents});
        }
        
        /// <remarks/>
        public void UpdateAllSoilsAsync(string Contents) {
            this.UpdateAllSoilsAsync(Contents, null);
        }
        
        /// <remarks/>
        public void UpdateAllSoilsAsync(string Contents, object userState) {
            if ((this.UpdateAllSoilsOperationCompleted == null)) {
                this.UpdateAllSoilsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAllSoilsOperationCompleted);
            }
            this.InvokeAsync("UpdateAllSoils", new object[] {
                        Contents}, this.UpdateAllSoilsOperationCompleted, userState);
        }
        
        private void OnUpdateAllSoilsOperationCompleted(object arg) {
            if ((this.UpdateAllSoilsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAllSoilsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://apsimdev.apsim.info/UpdateSoil", RequestNamespace="http://apsimdev.apsim.info/", ResponseNamespace="http://apsimdev.apsim.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateSoil(string soilPath, string contents) {
            this.Invoke("UpdateSoil", new object[] {
                        soilPath,
                        contents});
        }
        
        /// <remarks/>
        public void UpdateSoilAsync(string soilPath, string contents) {
            this.UpdateSoilAsync(soilPath, contents, null);
        }
        
        /// <remarks/>
        public void UpdateSoilAsync(string soilPath, string contents, object userState) {
            if ((this.UpdateSoilOperationCompleted == null)) {
                this.UpdateSoilOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSoilOperationCompleted);
            }
            this.InvokeAsync("UpdateSoil", new object[] {
                        soilPath,
                        contents}, this.UpdateSoilOperationCompleted, userState);
        }
        
        private void OnUpdateSoilOperationCompleted(object arg) {
            if ((this.UpdateSoilCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSoilCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://apsimdev.apsim.info/SoilXML", RequestNamespace="http://apsimdev.apsim.info/", ResponseNamespace="http://apsimdev.apsim.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SoilXML(string Name) {
            object[] results = this.Invoke("SoilXML", new object[] {
                        Name});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SoilXMLAsync(string Name) {
            this.SoilXMLAsync(Name, null);
        }
        
        /// <remarks/>
        public void SoilXMLAsync(string Name, object userState) {
            if ((this.SoilXMLOperationCompleted == null)) {
                this.SoilXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSoilXMLOperationCompleted);
            }
            this.InvokeAsync("SoilXML", new object[] {
                        Name}, this.SoilXMLOperationCompleted, userState);
        }
        
        private void OnSoilXMLOperationCompleted(object arg) {
            if ((this.SoilXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SoilXMLCompleted(this, new SoilXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://apsimdev.apsim.info/Delete", RequestNamespace="http://apsimdev.apsim.info/", ResponseNamespace="http://apsimdev.apsim.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Delete(string Name) {
            this.Invoke("Delete", new object[] {
                        Name});
        }
        
        /// <remarks/>
        public void DeleteAsync(string Name) {
            this.DeleteAsync(Name, null);
        }
        
        /// <remarks/>
        public void DeleteAsync(string Name, object userState) {
            if ((this.DeleteOperationCompleted == null)) {
                this.DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteOperationCompleted);
            }
            this.InvokeAsync("Delete", new object[] {
                        Name}, this.DeleteOperationCompleted, userState);
        }
        
        private void OnDeleteOperationCompleted(object arg) {
            if ((this.DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://apsimdev.apsim.info/GetSoilInfo", RequestNamespace="http://apsimdev.apsim.info/", ResponseNamespace="http://apsimdev.apsim.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SoilInfo GetSoilInfo(string SoilName) {
            object[] results = this.Invoke("GetSoilInfo", new object[] {
                        SoilName});
            return ((SoilInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetSoilInfoAsync(string SoilName) {
            this.GetSoilInfoAsync(SoilName, null);
        }
        
        /// <remarks/>
        public void GetSoilInfoAsync(string SoilName, object userState) {
            if ((this.GetSoilInfoOperationCompleted == null)) {
                this.GetSoilInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSoilInfoOperationCompleted);
            }
            this.InvokeAsync("GetSoilInfo", new object[] {
                        SoilName}, this.GetSoilInfoOperationCompleted, userState);
        }
        
        private void OnGetSoilInfoOperationCompleted(object arg) {
            if ((this.GetSoilInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSoilInfoCompleted(this, new GetSoilInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://apsimdev.apsim.info/GetSoilAnalysisInfo", RequestNamespace="http://apsimdev.apsim.info/", ResponseNamespace="http://apsimdev.apsim.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SoilAnalysisInfo GetSoilAnalysisInfo(string SoilName) {
            object[] results = this.Invoke("GetSoilAnalysisInfo", new object[] {
                        SoilName});
            return ((SoilAnalysisInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetSoilAnalysisInfoAsync(string SoilName) {
            this.GetSoilAnalysisInfoAsync(SoilName, null);
        }
        
        /// <remarks/>
        public void GetSoilAnalysisInfoAsync(string SoilName, object userState) {
            if ((this.GetSoilAnalysisInfoOperationCompleted == null)) {
                this.GetSoilAnalysisInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSoilAnalysisInfoOperationCompleted);
            }
            this.InvokeAsync("GetSoilAnalysisInfo", new object[] {
                        SoilName}, this.GetSoilAnalysisInfoOperationCompleted, userState);
        }
        
        private void OnGetSoilAnalysisInfoOperationCompleted(object arg) {
            if ((this.GetSoilAnalysisInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSoilAnalysisInfoCompleted(this, new GetSoilAnalysisInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://apsimdev.apsim.info/SoilTypes", RequestNamespace="http://apsimdev.apsim.info/", ResponseNamespace="http://apsimdev.apsim.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] SoilTypes() {
            object[] results = this.Invoke("SoilTypes", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void SoilTypesAsync() {
            this.SoilTypesAsync(null);
        }
        
        /// <remarks/>
        public void SoilTypesAsync(object userState) {
            if ((this.SoilTypesOperationCompleted == null)) {
                this.SoilTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSoilTypesOperationCompleted);
            }
            this.InvokeAsync("SoilTypes", new object[0], this.SoilTypesOperationCompleted, userState);
        }
        
        private void OnSoilTypesOperationCompleted(object arg) {
            if ((this.SoilTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SoilTypesCompleted(this, new SoilTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://apsimdev.apsim.info/PAW", RequestNamespace="http://apsimdev.apsim.info/", ResponseNamespace="http://apsimdev.apsim.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public double PAW(string SoilName, double[] Thickness, double[] SW, bool IsGravimetric, string CropName) {
            object[] results = this.Invoke("PAW", new object[] {
                        SoilName,
                        Thickness,
                        SW,
                        IsGravimetric,
                        CropName});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void PAWAsync(string SoilName, double[] Thickness, double[] SW, bool IsGravimetric, string CropName) {
            this.PAWAsync(SoilName, Thickness, SW, IsGravimetric, CropName, null);
        }
        
        /// <remarks/>
        public void PAWAsync(string SoilName, double[] Thickness, double[] SW, bool IsGravimetric, string CropName, object userState) {
            if ((this.PAWOperationCompleted == null)) {
                this.PAWOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPAWOperationCompleted);
            }
            this.InvokeAsync("PAW", new object[] {
                        SoilName,
                        Thickness,
                        SW,
                        IsGravimetric,
                        CropName}, this.PAWOperationCompleted, userState);
        }
        
        private void OnPAWOperationCompleted(object arg) {
            if ((this.PAWCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PAWCompleted(this, new PAWCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://apsimdev.apsim.info/PAWC", RequestNamespace="http://apsimdev.apsim.info/", ResponseNamespace="http://apsimdev.apsim.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public double PAWC(string SoilName, string CropName) {
            object[] results = this.Invoke("PAWC", new object[] {
                        SoilName,
                        CropName});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void PAWCAsync(string SoilName, string CropName) {
            this.PAWCAsync(SoilName, CropName, null);
        }
        
        /// <remarks/>
        public void PAWCAsync(string SoilName, string CropName, object userState) {
            if ((this.PAWCOperationCompleted == null)) {
                this.PAWCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPAWCOperationCompleted);
            }
            this.InvokeAsync("PAWC", new object[] {
                        SoilName,
                        CropName}, this.PAWCOperationCompleted, userState);
        }
        
        private void OnPAWCOperationCompleted(object arg) {
            if ((this.PAWCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PAWCCompleted(this, new PAWCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://apsimdev.apsim.info/ConvertSoilSampleXML", RequestNamespace="http://apsimdev.apsim.info/", ResponseNamespace="http://apsimdev.apsim.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ConvertSoilSampleXML(string SoilSampleXML) {
            object[] results = this.Invoke("ConvertSoilSampleXML", new object[] {
                        SoilSampleXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ConvertSoilSampleXMLAsync(string SoilSampleXML) {
            this.ConvertSoilSampleXMLAsync(SoilSampleXML, null);
        }
        
        /// <remarks/>
        public void ConvertSoilSampleXMLAsync(string SoilSampleXML, object userState) {
            if ((this.ConvertSoilSampleXMLOperationCompleted == null)) {
                this.ConvertSoilSampleXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConvertSoilSampleXMLOperationCompleted);
            }
            this.InvokeAsync("ConvertSoilSampleXML", new object[] {
                        SoilSampleXML}, this.ConvertSoilSampleXMLOperationCompleted, userState);
        }
        
        private void OnConvertSoilSampleXMLOperationCompleted(object arg) {
            if ((this.ConvertSoilSampleXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConvertSoilSampleXMLCompleted(this, new ConvertSoilSampleXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://apsimdev.apsim.info/SoilChartPNG", RequestNamespace="http://apsimdev.apsim.info/", ResponseNamespace="http://apsimdev.apsim.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] SoilChartPNG(string SoilName) {
            object[] results = this.Invoke("SoilChartPNG", new object[] {
                        SoilName});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void SoilChartPNGAsync(string SoilName) {
            this.SoilChartPNGAsync(SoilName, null);
        }
        
        /// <remarks/>
        public void SoilChartPNGAsync(string SoilName, object userState) {
            if ((this.SoilChartPNGOperationCompleted == null)) {
                this.SoilChartPNGOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSoilChartPNGOperationCompleted);
            }
            this.InvokeAsync("SoilChartPNG", new object[] {
                        SoilName}, this.SoilChartPNGOperationCompleted, userState);
        }
        
        private void OnSoilChartPNGOperationCompleted(object arg) {
            if ((this.SoilChartPNGCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SoilChartPNGCompleted(this, new SoilChartPNGCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://apsimdev.apsim.info/SoilChartWithSamplePNG", RequestNamespace="http://apsimdev.apsim.info/", ResponseNamespace="http://apsimdev.apsim.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] SoilChartWithSamplePNG(string SoilName, double[] Thickness, double[] SW, bool IsGravimetric) {
            object[] results = this.Invoke("SoilChartWithSamplePNG", new object[] {
                        SoilName,
                        Thickness,
                        SW,
                        IsGravimetric});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void SoilChartWithSamplePNGAsync(string SoilName, double[] Thickness, double[] SW, bool IsGravimetric) {
            this.SoilChartWithSamplePNGAsync(SoilName, Thickness, SW, IsGravimetric, null);
        }
        
        /// <remarks/>
        public void SoilChartWithSamplePNGAsync(string SoilName, double[] Thickness, double[] SW, bool IsGravimetric, object userState) {
            if ((this.SoilChartWithSamplePNGOperationCompleted == null)) {
                this.SoilChartWithSamplePNGOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSoilChartWithSamplePNGOperationCompleted);
            }
            this.InvokeAsync("SoilChartWithSamplePNG", new object[] {
                        SoilName,
                        Thickness,
                        SW,
                        IsGravimetric}, this.SoilChartWithSamplePNGOperationCompleted, userState);
        }
        
        private void OnSoilChartWithSamplePNGOperationCompleted(object arg) {
            if ((this.SoilChartWithSamplePNGCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SoilChartWithSamplePNGCompleted(this, new SoilChartWithSamplePNGCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://apsimdev.apsim.info/SearchSoilsReturnInfo", RequestNamespace="http://apsimdev.apsim.info/", ResponseNamespace="http://apsimdev.apsim.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SoilInfo[] SearchSoilsReturnInfo(double Latitude, double Longitude, double Radius, string SoilType) {
            object[] results = this.Invoke("SearchSoilsReturnInfo", new object[] {
                        Latitude,
                        Longitude,
                        Radius,
                        SoilType});
            return ((SoilInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void SearchSoilsReturnInfoAsync(double Latitude, double Longitude, double Radius, string SoilType) {
            this.SearchSoilsReturnInfoAsync(Latitude, Longitude, Radius, SoilType, null);
        }
        
        /// <remarks/>
        public void SearchSoilsReturnInfoAsync(double Latitude, double Longitude, double Radius, string SoilType, object userState) {
            if ((this.SearchSoilsReturnInfoOperationCompleted == null)) {
                this.SearchSoilsReturnInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchSoilsReturnInfoOperationCompleted);
            }
            this.InvokeAsync("SearchSoilsReturnInfo", new object[] {
                        Latitude,
                        Longitude,
                        Radius,
                        SoilType}, this.SearchSoilsReturnInfoOperationCompleted, userState);
        }
        
        private void OnSearchSoilsReturnInfoOperationCompleted(object arg) {
            if ((this.SearchSoilsReturnInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchSoilsReturnInfoCompleted(this, new SearchSoilsReturnInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://apsimdev.apsim.info/ClosestMatchingSoils", RequestNamespace="http://apsimdev.apsim.info/", ResponseNamespace="http://apsimdev.apsim.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] ClosestMatchingSoils(double[] thickness, double[] pawc, double[] sw, string cropName, int numSoilsToReturn, bool swAtCLL, bool swIsGrav) {
            object[] results = this.Invoke("ClosestMatchingSoils", new object[] {
                        thickness,
                        pawc,
                        sw,
                        cropName,
                        numSoilsToReturn,
                        swAtCLL,
                        swIsGrav});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void ClosestMatchingSoilsAsync(double[] thickness, double[] pawc, double[] sw, string cropName, int numSoilsToReturn, bool swAtCLL, bool swIsGrav) {
            this.ClosestMatchingSoilsAsync(thickness, pawc, sw, cropName, numSoilsToReturn, swAtCLL, swIsGrav, null);
        }
        
        /// <remarks/>
        public void ClosestMatchingSoilsAsync(double[] thickness, double[] pawc, double[] sw, string cropName, int numSoilsToReturn, bool swAtCLL, bool swIsGrav, object userState) {
            if ((this.ClosestMatchingSoilsOperationCompleted == null)) {
                this.ClosestMatchingSoilsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClosestMatchingSoilsOperationCompleted);
            }
            this.InvokeAsync("ClosestMatchingSoils", new object[] {
                        thickness,
                        pawc,
                        sw,
                        cropName,
                        numSoilsToReturn,
                        swAtCLL,
                        swIsGrav}, this.ClosestMatchingSoilsOperationCompleted, userState);
        }
        
        private void OnClosestMatchingSoilsOperationCompleted(object arg) {
            if ((this.ClosestMatchingSoilsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClosestMatchingSoilsCompleted(this, new ClosestMatchingSoilsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://apsimdev.apsim.info/SoilAsJson", RequestNamespace="http://apsimdev.apsim.info/", ResponseNamespace="http://apsimdev.apsim.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SoilAsJson(string Name) {
            object[] results = this.Invoke("SoilAsJson", new object[] {
                        Name});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SoilAsJsonAsync(string Name) {
            this.SoilAsJsonAsync(Name, null);
        }
        
        /// <remarks/>
        public void SoilAsJsonAsync(string Name, object userState) {
            if ((this.SoilAsJsonOperationCompleted == null)) {
                this.SoilAsJsonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSoilAsJsonOperationCompleted);
            }
            this.InvokeAsync("SoilAsJson", new object[] {
                        Name}, this.SoilAsJsonOperationCompleted, userState);
        }
        
        private void OnSoilAsJsonOperationCompleted(object arg) {
            if ((this.SoilAsJsonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SoilAsJsonCompleted(this, new SoilAsJsonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://apsimdev.apsim.info/UpdateUserSoil", RequestNamespace="http://apsimdev.apsim.info/", ResponseNamespace="http://apsimdev.apsim.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateUserSoil(JsonSoilParam Params) {
            object[] results = this.Invoke("UpdateUserSoil", new object[] {
                        Params});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateUserSoilAsync(JsonSoilParam Params) {
            this.UpdateUserSoilAsync(Params, null);
        }
        
        /// <remarks/>
        public void UpdateUserSoilAsync(JsonSoilParam Params, object userState) {
            if ((this.UpdateUserSoilOperationCompleted == null)) {
                this.UpdateUserSoilOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserSoilOperationCompleted);
            }
            this.InvokeAsync("UpdateUserSoil", new object[] {
                        Params}, this.UpdateUserSoilOperationCompleted, userState);
        }
        
        private void OnUpdateUserSoilOperationCompleted(object arg) {
            if ((this.UpdateUserSoilCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserSoilCompleted(this, new UpdateUserSoilCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://apsimdev.apsim.info/PAWCJson", RequestNamespace="http://apsimdev.apsim.info/", ResponseNamespace="http://apsimdev.apsim.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PAWCByCrop[] PAWCJson(PAWCJsonParams Params) {
            object[] results = this.Invoke("PAWCJson", new object[] {
                        Params});
            return ((PAWCByCrop[])(results[0]));
        }
        
        /// <remarks/>
        public void PAWCJsonAsync(PAWCJsonParams Params) {
            this.PAWCJsonAsync(Params, null);
        }
        
        /// <remarks/>
        public void PAWCJsonAsync(PAWCJsonParams Params, object userState) {
            if ((this.PAWCJsonOperationCompleted == null)) {
                this.PAWCJsonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPAWCJsonOperationCompleted);
            }
            this.InvokeAsync("PAWCJson", new object[] {
                        Params}, this.PAWCJsonOperationCompleted, userState);
        }
        
        private void OnPAWCJsonOperationCompleted(object arg) {
            if ((this.PAWCJsonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PAWCJsonCompleted(this, new PAWCJsonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://apsimdev.apsim.info/SearchSoils", RequestNamespace="http://apsimdev.apsim.info/", ResponseNamespace="http://apsimdev.apsim.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SoilInfo[] SearchSoils(SearchSoilsParams Params) {
            object[] results = this.Invoke("SearchSoils", new object[] {
                        Params});
            return ((SoilInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void SearchSoilsAsync(SearchSoilsParams Params) {
            this.SearchSoilsAsync(Params, null);
        }
        
        /// <remarks/>
        public void SearchSoilsAsync(SearchSoilsParams Params, object userState) {
            if ((this.SearchSoilsOperationCompleted == null)) {
                this.SearchSoilsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchSoilsOperationCompleted);
            }
            this.InvokeAsync("SearchSoils", new object[] {
                        Params}, this.SearchSoilsOperationCompleted, userState);
        }
        
        private void OnSearchSoilsOperationCompleted(object arg) {
            if ((this.SearchSoilsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchSoilsCompleted(this, new SearchSoilsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://apsimdev.apsim.info/AllAustralianSoils", RequestNamespace="http://apsimdev.apsim.info/", ResponseNamespace="http://apsimdev.apsim.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SoilBasicInfo[] AllAustralianSoils(SearchSoilsParams Params) {
            object[] results = this.Invoke("AllAustralianSoils", new object[] {
                        Params});
            return ((SoilBasicInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void AllAustralianSoilsAsync(SearchSoilsParams Params) {
            this.AllAustralianSoilsAsync(Params, null);
        }
        
        /// <remarks/>
        public void AllAustralianSoilsAsync(SearchSoilsParams Params, object userState) {
            if ((this.AllAustralianSoilsOperationCompleted == null)) {
                this.AllAustralianSoilsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAllAustralianSoilsOperationCompleted);
            }
            this.InvokeAsync("AllAustralianSoils", new object[] {
                        Params}, this.AllAustralianSoilsOperationCompleted, userState);
        }
        
        private void OnAllAustralianSoilsOperationCompleted(object arg) {
            if ((this.AllAustralianSoilsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AllAustralianSoilsCompleted(this, new AllAustralianSoilsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://apsimdev.apsim.info/SoilChartPNGFromXML", RequestNamespace="http://apsimdev.apsim.info/", ResponseNamespace="http://apsimdev.apsim.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] SoilChartPNGFromXML(string XML) {
            object[] results = this.Invoke("SoilChartPNGFromXML", new object[] {
                        XML});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void SoilChartPNGFromXMLAsync(string XML) {
            this.SoilChartPNGFromXMLAsync(XML, null);
        }
        
        /// <remarks/>
        public void SoilChartPNGFromXMLAsync(string XML, object userState) {
            if ((this.SoilChartPNGFromXMLOperationCompleted == null)) {
                this.SoilChartPNGFromXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSoilChartPNGFromXMLOperationCompleted);
            }
            this.InvokeAsync("SoilChartPNGFromXML", new object[] {
                        XML}, this.SoilChartPNGFromXMLOperationCompleted, userState);
        }
        
        private void OnSoilChartPNGFromXMLOperationCompleted(object arg) {
            if ((this.SoilChartPNGFromXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SoilChartPNGFromXMLCompleted(this, new SoilChartPNGFromXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://apsimdev.apsim.info/")]
    public partial class SoilInfo {
        
        private string nameField;
        
        private string descriptionField;
        
        private string soilTypeField;
        
        private double latitudeField;
        
        private double longitudeField;
        
        private double distanceField;
        
        private string aSCOrderField;
        
        private string aSCSubOrderField;
        
        private string siteField;
        
        private string regionField;
        
        private string nearestTownField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string SoilType {
            get {
                return this.soilTypeField;
            }
            set {
                this.soilTypeField = value;
            }
        }
        
        /// <remarks/>
        public double Latitude {
            get {
                return this.latitudeField;
            }
            set {
                this.latitudeField = value;
            }
        }
        
        /// <remarks/>
        public double Longitude {
            get {
                return this.longitudeField;
            }
            set {
                this.longitudeField = value;
            }
        }
        
        /// <remarks/>
        public double Distance {
            get {
                return this.distanceField;
            }
            set {
                this.distanceField = value;
            }
        }
        
        /// <remarks/>
        public string ASCOrder {
            get {
                return this.aSCOrderField;
            }
            set {
                this.aSCOrderField = value;
            }
        }
        
        /// <remarks/>
        public string ASCSubOrder {
            get {
                return this.aSCSubOrderField;
            }
            set {
                this.aSCSubOrderField = value;
            }
        }
        
        /// <remarks/>
        public string Site {
            get {
                return this.siteField;
            }
            set {
                this.siteField = value;
            }
        }
        
        /// <remarks/>
        public string Region {
            get {
                return this.regionField;
            }
            set {
                this.regionField = value;
            }
        }
        
        /// <remarks/>
        public string NearestTown {
            get {
                return this.nearestTownField;
            }
            set {
                this.nearestTownField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://apsimdev.apsim.info/")]
    public partial class SoilBasicInfo {
        
        private string nameField;
        
        private double latitudeField;
        
        private double longitudeField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public double Latitude {
            get {
                return this.latitudeField;
            }
            set {
                this.latitudeField = value;
            }
        }
        
        /// <remarks/>
        public double Longitude {
            get {
                return this.longitudeField;
            }
            set {
                this.longitudeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://apsimdev.apsim.info/")]
    public partial class SearchSoilsParams {
        
        private double latitudeField;
        
        private double longitudeField;
        
        private double radiusField;
        
        private string aSCOrderField;
        
        private string aSCSubOrderField;
        
        /// <remarks/>
        public double Latitude {
            get {
                return this.latitudeField;
            }
            set {
                this.latitudeField = value;
            }
        }
        
        /// <remarks/>
        public double Longitude {
            get {
                return this.longitudeField;
            }
            set {
                this.longitudeField = value;
            }
        }
        
        /// <remarks/>
        public double Radius {
            get {
                return this.radiusField;
            }
            set {
                this.radiusField = value;
            }
        }
        
        /// <remarks/>
        public string ASCOrder {
            get {
                return this.aSCOrderField;
            }
            set {
                this.aSCOrderField = value;
            }
        }
        
        /// <remarks/>
        public string ASCSubOrder {
            get {
                return this.aSCSubOrderField;
            }
            set {
                this.aSCSubOrderField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://apsimdev.apsim.info/")]
    public partial class PAWCByCrop {
        
        private string cropNameField;
        
        private double[] pAWCField;
        
        private double pAWCTotalField;
        
        /// <remarks/>
        public string CropName {
            get {
                return this.cropNameField;
            }
            set {
                this.cropNameField = value;
            }
        }
        
        /// <remarks/>
        public double[] PAWC {
            get {
                return this.pAWCField;
            }
            set {
                this.pAWCField = value;
            }
        }
        
        /// <remarks/>
        public double PAWCTotal {
            get {
                return this.pAWCTotalField;
            }
            set {
                this.pAWCTotalField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://apsimdev.apsim.info/")]
    public partial class PAWCJsonParams {
        
        private string jSonSoilField;
        
        /// <remarks/>
        public string JSonSoil {
            get {
                return this.jSonSoilField;
            }
            set {
                this.jSonSoilField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://apsimdev.apsim.info/")]
    public partial class JsonSoilParam {
        
        private string jSonSoilField;
        
        /// <remarks/>
        public string JSonSoil {
            get {
                return this.jSonSoilField;
            }
            set {
                this.jSonSoilField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://apsimdev.apsim.info/")]
    public partial class SoilCropInfo {
        
        private string nameField;
        
        private double[] llField;
        
        private double[] klField;
        
        private double[] xfField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public double[] LL {
            get {
                return this.llField;
            }
            set {
                this.llField = value;
            }
        }
        
        /// <remarks/>
        public double[] KL {
            get {
                return this.klField;
            }
            set {
                this.klField = value;
            }
        }
        
        /// <remarks/>
        public double[] XF {
            get {
                return this.xfField;
            }
            set {
                this.xfField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://apsimdev.apsim.info/")]
    public partial class SoilAnalysisInfo {
        
        private string nameField;
        
        private double[] thicknessField;
        
        private string[] textureField;
        
        private double[] ecField;
        
        private double[] phField;
        
        private double[] clField;
        
        private double[] boronField;
        
        private double[] eSPField;
        
        private double[] alField;
        
        private double[] lL15Field;
        
        private double[] dULField;
        
        private SoilCropInfo[] cropsField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public double[] Thickness {
            get {
                return this.thicknessField;
            }
            set {
                this.thicknessField = value;
            }
        }
        
        /// <remarks/>
        public string[] Texture {
            get {
                return this.textureField;
            }
            set {
                this.textureField = value;
            }
        }
        
        /// <remarks/>
        public double[] EC {
            get {
                return this.ecField;
            }
            set {
                this.ecField = value;
            }
        }
        
        /// <remarks/>
        public double[] PH {
            get {
                return this.phField;
            }
            set {
                this.phField = value;
            }
        }
        
        /// <remarks/>
        public double[] CL {
            get {
                return this.clField;
            }
            set {
                this.clField = value;
            }
        }
        
        /// <remarks/>
        public double[] Boron {
            get {
                return this.boronField;
            }
            set {
                this.boronField = value;
            }
        }
        
        /// <remarks/>
        public double[] ESP {
            get {
                return this.eSPField;
            }
            set {
                this.eSPField = value;
            }
        }
        
        /// <remarks/>
        public double[] AL {
            get {
                return this.alField;
            }
            set {
                this.alField = value;
            }
        }
        
        /// <remarks/>
        public double[] LL15 {
            get {
                return this.lL15Field;
            }
            set {
                this.lL15Field = value;
            }
        }
        
        /// <remarks/>
        public double[] DUL {
            get {
                return this.dULField;
            }
            set {
                this.dULField = value;
            }
        }
        
        /// <remarks/>
        public SoilCropInfo[] Crops {
            get {
                return this.cropsField;
            }
            set {
                this.cropsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SoilNamesCompletedEventHandler(object sender, SoilNamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SoilNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SoilNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void AllSoilNamesCompletedEventHandler(object sender, AllSoilNamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AllSoilNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AllSoilNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateAllSoilsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateSoilCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SoilXMLCompletedEventHandler(object sender, SoilXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SoilXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SoilXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetSoilInfoCompletedEventHandler(object sender, GetSoilInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSoilInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSoilInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SoilInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SoilInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetSoilAnalysisInfoCompletedEventHandler(object sender, GetSoilAnalysisInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSoilAnalysisInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSoilAnalysisInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SoilAnalysisInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SoilAnalysisInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SoilTypesCompletedEventHandler(object sender, SoilTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SoilTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SoilTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void PAWCompletedEventHandler(object sender, PAWCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PAWCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PAWCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void PAWCCompletedEventHandler(object sender, PAWCCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PAWCCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PAWCCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void ConvertSoilSampleXMLCompletedEventHandler(object sender, ConvertSoilSampleXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConvertSoilSampleXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConvertSoilSampleXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SoilChartPNGCompletedEventHandler(object sender, SoilChartPNGCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SoilChartPNGCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SoilChartPNGCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SoilChartWithSamplePNGCompletedEventHandler(object sender, SoilChartWithSamplePNGCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SoilChartWithSamplePNGCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SoilChartWithSamplePNGCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SearchSoilsReturnInfoCompletedEventHandler(object sender, SearchSoilsReturnInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchSoilsReturnInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchSoilsReturnInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SoilInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SoilInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void ClosestMatchingSoilsCompletedEventHandler(object sender, ClosestMatchingSoilsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClosestMatchingSoilsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ClosestMatchingSoilsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SoilAsJsonCompletedEventHandler(object sender, SoilAsJsonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SoilAsJsonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SoilAsJsonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateUserSoilCompletedEventHandler(object sender, UpdateUserSoilCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateUserSoilCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateUserSoilCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void PAWCJsonCompletedEventHandler(object sender, PAWCJsonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PAWCJsonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PAWCJsonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PAWCByCrop[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PAWCByCrop[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SearchSoilsCompletedEventHandler(object sender, SearchSoilsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchSoilsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchSoilsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SoilInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SoilInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void AllAustralianSoilsCompletedEventHandler(object sender, AllAustralianSoilsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AllAustralianSoilsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AllAustralianSoilsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SoilBasicInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SoilBasicInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SoilChartPNGFromXMLCompletedEventHandler(object sender, SoilChartPNGFromXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SoilChartPNGFromXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SoilChartPNGFromXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591