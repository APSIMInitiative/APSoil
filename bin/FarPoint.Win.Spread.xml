<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FarPoint.Win.Spread</name>
    </assembly>
    <members>
        <member name="T:FarPoint.Win.Spread.CellLayout">
            <summary>
            Class represents the size and location of a cell span.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellLayout.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a CellLayout object.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellLayout.ContainsCell(System.Int32,System.Int32)">
            <summary>
            Checks whether or not this cell span covers the specified
            cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellLayout.ContainsPoint(System.Int32,System.Int32)">
            <summary>
            Checks whether of not this cell span covers the specified
            point.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellLayout.Row">
            <summary>
            Gets the row coordinate of the upper-left corner of the
            cell span.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellLayout.Column">
            <summary>
            Gets the column coordinate of the upper-left corner of the
            cell span.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellLayout.RowCount">
            <summary>
            Gets the number of rows in the cell span.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellLayout.ColumnCount">
            <summary>
            Gets the number of columns in the cell span.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellLayout.X">
            <summary>
            Gets the x coordinate of the upper-left corner in the
            cell span.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellLayout.Y">
            <summary>
            Gets the y coordinate of the upper-left corner in the
            cell span.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellLayout.Width">
            <summary>
            Gets the width of the cell span.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellLayout.Height">
            <summary>
            Gets the height of the cell span.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.Model.CellRange">
            <summary>
            Represents a selected range of cells for a sheet. 
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.CellRange.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a range of cells.
            </summary>
            <param name="row">Row index of first cell in the range</param>
            <param name="column">Column index of first cell in the range</param>
            <param name="rowCount">Number of rows in the range</param>
            <param name="columnCount">Number of columns in the range</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.CellRange.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new range of cells from serialization.
            </summary>
            <param name="info">SerializationInfo</param>
            <param name="c">StreamingContext</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.CellRange.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates the SerializationInfo class with information about 
            the settings of the range of cells.
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contextual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.CellRange.Contains(System.Int32,System.Int32)">
            <summary>
            Determines whether the range of cells contains the cell at the specified row and column.
            </summary>
            <param name="row">Row index of the cell</param>
            <param name="column">Column index of the cell</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.CellRange.Contains(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Determines whether the range of cells contains another specified range of cells. 
            </summary>
            <param name="row">Row index of the first cell in the range</param>
            <param name="column">Column index of the first cell in the range</param>
            <param name="rowCount">Number of rows in the range</param>
            <param name="columnCount">Number of columns in the range</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.CellRange.Contains(FarPoint.Win.Spread.Model.CellRange)">
            <summary>
            Determines whether the range of cells contains another specified range of cells. 
            </summary>
            <param name="range">CellRange object that contains the other range of cells</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.CellRange.IntersectRow(System.Int32)">
            <summary>
            Determines whether the range of cells intersects the specified row.
            </summary>
            <param name="row">Row index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.CellRange.IntersectColumn(System.Int32)">
            <summary>
            Determines whether the range of cells intersects the specified column.
            </summary>
            <param name="column">Column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.CellRange.Intersects(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Determines whether the range of cells intersects the specified range.
            </summary>
            <param name="row">Row index at beginning of range</param>
            <param name="column">Column index at beginning of range</param>
            <param name="rowCount">Number of rows</param>
            <param name="columnCount">Number of columns</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.CellRange.Equals(System.Object)">
            <summary>
            Determines whether the range of cells is the same as another specified range of cells.
            </summary>
            <param name="item">Object containing range of cells to compare</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.CellRange.Equals(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Determines whether the range of cells is the same as another specified range of cells. 
            </summary>
            <param name="row">Row index of first cell in the range</param>
            <param name="column">Column index of first cell in the range</param>
            <param name="rowCount">Number of rows in the range</param>
            <param name="columnCount">Number of columns in the range</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.CellRange.GetHashCode">
            <summary>
            Gets the hash code of this object.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.CellRange.Parse(System.String)">
            <summary>
            Converts a string to a cell range.
            </summary>
            <param name="s">String to be parsed</param>
            <exception cref="T:System.ArgumentNullException">s is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.FormatException">s does not represent a cell range.</exception>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.CellRange.TryParse(System.String,FarPoint.Win.Spread.Model.CellRange@)">
            <summary>
            Converts a string to a cell range.
            </summary>
            <param name="s">String to be parsed</param>
            <param name="result">Cell range represented by the string.  If the return value is false then result is set to null.</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.CellRange.TryParseCell(System.String,FarPoint.Win.Spread.Model.CellRange@)">
            <summary>
            Converts a string to a cell range that consists of a single cell.
            </summary>
            <param name="s">String to be parsed</param>
            <param name="result">Cell represented by the string</param>
            <returns>True if the string is converted successfully; false otherwise</returns>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.CellRange.Row">
            <summary>
            Gets the row index of the first cell in the range.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.CellRange.Column">
            <summary>
            Gets the column index of the first cell in the range. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.CellRange.RowCount">
            <summary>
            Gets the number of rows in the range. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.CellRange.ColumnCount">
            <summary>
            Gets the number of columns in the range.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.FlowCellModel.SpanEnumerator.#ctor(FarPoint.Win.Spread.FlowCellModel,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Represents the enumerators for a span of cells.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.FlowCellModel.SpanEnumerator.MoveNext">
            <summary>
            Whether or not to move to the next item.
            </summary>
            <returns>True if current is less than the count of model items; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.FlowCellModel.SpanEnumerator.Reset">
            <summary>
            Reset the index of model items counted.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FlowCellModel.SpanEnumerator.Current">
            <summary>
            Current index of model items
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.Model.SelectionPolicy">
            <summary>
            Specifies how users can select items in the control. 
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.Model.SelectionPolicy.Single">
            <summary>
            [0] Allows the users to select only single items
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.Model.SelectionPolicy.Range">
            <summary>
            [1] Allows the users to select single items and ranges of items, but not multiple ranges
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.Model.SelectionPolicy.MultiRange">
            <summary>
            [2] Allows users to select single items and ranges of items, including multiple ranges
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.Model.SelectionUnit">
            <summary>
            Specifies the smallest unit users or the application can select.  
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.Model.SelectionUnit.Cell">
            <summary>
            [0] Indicates that the smallest unit that can be selected is a cell
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.Model.SelectionUnit.Row">
            <summary>
            [1] Indicates that the smallest unit that can be selected is a row
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.Model.SelectionUnit.Column">
            <summary>
            [2] Indicates that the smallest unit that can be selected is a column
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.Model.SheetSelectionModelEventArgs">
            <summary>
            Represents the event data for the Changed event of the selection model for the sheet. 
            </summary>  
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SheetSelectionModelEventArgs.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a new Changed event arguments object for the selection model for the sheet.
            </summary>
            <param name="row">Row index of the start of the selection</param>
            <param name="column">Column index of the start of the selection</param>
            <param name="rowCount">Number of rows in the selection</param>
            <param name="columnCount">Number of columns in the selection</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SheetSelectionModelEventArgs.ToString">
            <summary>
            Returns a string that represents the current 
            SheetSelectionModelEventArgs object. 
            </summary>   
        </member>
        <member name="P:FarPoint.Win.Spread.Model.SheetSelectionModelEventArgs.Row">
            <summary>
            Gets the row index of the selection.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.SheetSelectionModelEventArgs.Column">
            <summary>
            Gets the column index of the selection.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.SheetSelectionModelEventArgs.RowCount">
            <summary>
            Gets the number of rows in the selection. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.SheetSelectionModelEventArgs.ColumnCount">
            <summary>
            Gets the number of columns in the selection. 
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.Model.SheetSelectionModelEventHandler">
            <summary>
            Handles the Changed event in the selection model of the sheet.
            </summary>
            <param name="sender">Object that raised the event</param>
            <param name="e">Event data (SheetSelectionModelEventArgs class)</param>
        </member>
        <member name="T:FarPoint.Win.Spread.Model.ISheetSelectionModel">
            <summary>
            Interface that supports creating a model that represents cell selection. 
            </summary>  
        </member>
        <member name="M:FarPoint.Win.Spread.Model.ISheetSelectionModel.SetAnchor(System.Int32,System.Int32)">
            <summary>
            Specifies the anchor (or first cell) in the selection of cells.
            </summary>
            <param name="row">Row index of the first cell in the selection</param>
            <param name="column">Column index of the first cell in the selection</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.ISheetSelectionModel.ClearSelection">
            <summary>
            Removes the selection.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.ISheetSelectionModel.AddSelection(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds a cell or cells to the selection. 
            </summary>    
            <param name="row">Row index of the first cell to add</param>
            <param name="column">Column index of the first cell to add</param>
            <param name="rowCount">Number of rows to add</param>
            <param name="columnCount">Number of columns to add</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.ISheetSelectionModel.RemoveSelection(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Removes the specified selection range from the selection list, if one exists.
            </summary>
            <param name="row">Row index of the cell at which to start</param>
            <param name="column">Column index of the cell at which to start</param>
            <param name="rowCount">Number of rows to deselect</param>
            <param name="columnCount">Number of columns to deselect</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.ISheetSelectionModel.SetSelection(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Selects the specified cells.
            </summary>
            <param name="row">Row index of the first cell</param>
            <param name="column">Column index of the first cell</param>
            <param name="rowCount">Number of rows to add to the first cell to define the selection</param>
            <param name="columnCount">Number of columns to add to the first cell to define the selection</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.ISheetSelectionModel.ExtendSelection(System.Int32,System.Int32)">
            <summary>
            Specifies the extent (or farthest cell) in the selection of cells. 
            </summary>  
            <param name="row">Row index of farthest cell in the selection</param>
            <param name="column">Column index of farthest cell in the selection</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.ISheetSelectionModel.IsSelected(System.Int32,System.Int32)">
            <summary>
            Returns whether the specified cell is in the selection.
            </summary>
            <param name="row">Row index of the cell</param>
            <param name="column">Column index of the cell</param>
            <returns>True if cell is in selection; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.ISheetSelectionModel.IsAnyCellInRowSelected(System.Int32)">
            <summary>
            Returns whether any cell in a specified row is in the selection.
            </summary>
            <param name="row">Index of row to check</param>
            <returns>True if any cell in specified row is selected; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.ISheetSelectionModel.IsAnyCellInColumnSelected(System.Int32)">
            <summary>
            Returns whether any cell in a specified column is in the selection.
            </summary>
            <param name="column">Index of column to check</param>
            <returns>True if any cell in specified column is selected; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.ISheetSelectionModel.IsEmpty">
            <summary>
            Returns whether the model has no selections.
            </summary>
            <returns>True if the model contains no selections; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.ISheetSelectionModel.GetEnumerator">
            <summary>
            Gets an enumerator that can iterate through the selections. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.ISheetSelectionModel.Item(System.Int32)">
            <summary>
            Gets an item in the model.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.ISheetSelectionModel.Count">
            <summary>
            Gets the number of selection of cells.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.ISheetSelectionModel.AnchorRow">
            <summary>
            Gets the row index of the first cell in the selection of cells. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.ISheetSelectionModel.AnchorColumn">
            <summary>
            Gets the column index of the first cell in the selection of cells. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.ISheetSelectionModel.LeadRow">
            <summary>
            Gets the row index of the farthest cell in the selection of cells. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.ISheetSelectionModel.LeadColumn">
            <summary>
            Gets the column index of the farthest cell in the selection of cells. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.ISheetSelectionModel.SelectionPolicy">
            <summary>
            Gets or sets whether users can select ranges of items.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.ISheetSelectionModel.SelectionUnit">
            <summary>
             Gets or sets whether users can select cells, rows, or columns.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.Model.ISheetSelectionModel.Changed">
            <summary>
            Occurs when the selection model has changed.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.Model.IDisjointSelections">
            <summary>
            Interface that supports an ordered array of cell ranges, from largest to smallest, 
            containing the selected cells with the minimal overlap between the ranges.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.IDisjointSelections.GetSelections(System.Int32,System.Int32)">
            <summary>
            Gets an ordered array of cell ranges, from largest to smallest, 
            containing the selected cells with minimal overlap between the ranges.
            </summary>
            <param name="rowCount">Number of rows in the sheet</param>
            <param name="columnCount">Number of columns in the sheet</param>
        </member>
        <member name="T:FarPoint.Win.Spread.Model.IQuerySelection">
            <summary>
            Interface that supports querying an extended selection in the selection model for the sheet. 
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.IQuerySelection.GetExtendedSelection(System.Int32,System.Int32)">
            <summary>
            Gets the cell range that would be selected if you extended 
            the current selection to the specified row and column indexes.
            </summary>
            <param name="row">Row index to which to extend the selection</param>
            <param name="column">Column index to which to extend the selection</param>
        </member>
        <member name="T:FarPoint.Win.Spread.Model.BaseSheetSelectionModel">
            <summary>
            Represents the partial (abstract) implementation of the ISheetSelectionModel interface 
            for a selection model for a sheet.  
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.BaseSheetSelectionModel.SetAnchor(System.Int32,System.Int32)">
            <summary>
            Specifies the anchor (or first cell) in the selection of cells.
            </summary>
            <param name="row">Row index of the first cell in the selection</param>
            <param name="column">Column index of the first cell in the selection</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.BaseSheetSelectionModel.ClearSelection">
            <summary>
            Clears the selection so that cells are no longer selected.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.BaseSheetSelectionModel.AddSelection(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds a cell or cells to the selection.
            </summary>
            <param name="row">Row index of first cell to add</param>
            <param name="column">Column index of the first cell to add</param>
            <param name="rowCount">Number of rows to add</param>
            <param name="columnCount">Number of columns to add</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.BaseSheetSelectionModel.RemoveSelection(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Removes the specified selection range from the selection list, if one exists. 
            </summary>
            <param name="row">Row index of the cell at which to start</param>
            <param name="column">Column index of the cell at which to start</param>
            <param name="rowCount">Number of rows to deselect</param>
            <param name="columnCount">Number of columns to deselect</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.BaseSheetSelectionModel.SetSelection(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Selects the specified cells.
            </summary>
            <param name="row">Row index of the first cell</param>
            <param name="column">Column index of the first cell</param>
            <param name="rowCount">Number of rows to add to the first cell to define the selection</param>
            <param name="columnCount">Number of columns to add to the first cell to define the selection</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.BaseSheetSelectionModel.ExtendSelection(System.Int32,System.Int32)">
            <summary>
            Specifies the extent (or farthest cell) in the selection of cells. 
            </summary>  
            <param name="row">Row index of farthest cell in the selection</param>
            <param name="column">Column index of farthest cell in the selection</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.BaseSheetSelectionModel.IsSelected(System.Int32,System.Int32)">
            <summary>
            Determines whether the specified cell is in the selection. 
            </summary>
            <param name="row">Row index</param>
            <param name="column">Column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.BaseSheetSelectionModel.IsAnyCellInRowSelected(System.Int32)">
            <summary>
            Returns whether any cell in a specified row is in the selection. 
            </summary>
            <param name="row">Row to check</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.BaseSheetSelectionModel.IsAnyCellInColumnSelected(System.Int32)">
            <summary>
            Determines whether any cell in a specified column is in the selection. 
            </summary>
            <param name="column">Column to check</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.BaseSheetSelectionModel.IsEmpty">
            <summary>
            Determines whether the model has no selections.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.BaseSheetSelectionModel.FireChanged(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Raises the selection changed event.
            </summary>
            <param name="row">Row index of start of selection</param>
            <param name="column">Column index of start of selection</param>
            <param name="rowCount">Number of rows in selection</param>
            <param name="columnCount">Number of columns in selection</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.BaseSheetSelectionModel.GetEnumerator">
            <summary>
            Gets an enumerator that can iterate through the selections. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.BaseSheetSelectionModel.Item(System.Int32)">
            <summary>
            Gets an item in the model.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.BaseSheetSelectionModel.Count">
            <summary>
            Gets the number selections. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.BaseSheetSelectionModel.AnchorRow">
            <summary>
            Gets the row index of the first cell selected in the range.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.BaseSheetSelectionModel.AnchorColumn">
            <summary>
            Gets the column index of the first cell in the selection of cells.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.BaseSheetSelectionModel.LeadRow">
            <summary>
            Gets the row index of the farthest cell in the selection of cells.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.BaseSheetSelectionModel.LeadColumn">
            <summary>
            Gets the column index of the farthest cell in the selection of cells.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.BaseSheetSelectionModel.SelectionPolicy">
            <summary>
            Gets or sets whether users can select ranges of items.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.BaseSheetSelectionModel.SelectionUnit">
            <summary>
            Gets or sets whether users can select cells, rows, or columns. 
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.Model.BaseSheetSelectionModel.Changed">
            <summary>
            Occurs when the user makes a change to the model 
            that affects the selection of cells of the sheet.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.Model.DefaultSheetSelectionModel">
            <summary>
            Represents the full (concrete) implementation of the ISheetSelectionModel interface for a selection model for a sheet, 
            which represents cell selections. 
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSelectionModel.#ctor">
            <summary>
            Creates a default selection model.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSelectionModel.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a default selection model with data from the specified serialization and stream objects.
            </summary>
            <param name="info">Data needed to serialize or deserialize an object</param>
            <param name="context">Source and destination of a given serialized stream</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSelectionModel.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Saves the default selection model to the SerializationInfo object.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSelectionModel.SetAnchor(System.Int32,System.Int32)">
            <summary>
            Specifies the anchor (or first cell) in the selection of cells.
            </summary>
            <param name="row">Row index of the first cell in the selection</param>
            <param name="column">Column index of the first cell in the selection</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSelectionModel.AddSelection(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds a cell or cells to the selection. 
            </summary>    
            <param name="row">Row index of the first cell to add</param>
            <param name="column">Column index of the first cell to add</param>
            <param name="rowCount">Number of rows to add</param>
            <param name="columnCount">Number of columns to add</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSelectionModel.RemoveSelection(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Removes the specified selection range from the selection list, if one exists.
            </summary>
            <param name="row">Row index of the cell at which to start</param>
            <param name="column">Column index of the cell at which to start</param>
            <param name="rowCount">Number of rows to deselect</param>
            <param name="columnCount">Number of columns to deselect</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSelectionModel.ClearSelection">
            <summary>
            Removes the selection.
            </summary>    
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSelectionModel.SetSelection(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Selects the cells in the specified range.
            </summary>
            <param name="row">Row index of the first cell</param>
            <param name="column">Column index of the first cell</param>
            <param name="rowCount">Number of rows to add to the first cell to define the selection</param>
            <param name="columnCount">Number of columns to add to the first cell to define the selection</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSelectionModel.ExtendSelection(System.Int32,System.Int32)">
            <summary>
            Specifies the extent (or farthest cell) in the selection of cells.  
            </summary>    
            <param name="extendRow">Row index of the farthest cell in the selection</param>
            <param name="extendColumn">Column index of the farthest cell in the selection</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSelectionModel.IsSelected(System.Int32,System.Int32)">
            <summary>
            Returns whether the specified cell is in the selection. 
            </summary>
            <param name="row">Row index of the cell</param>
            <param name="column">Column index of the cell</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSelectionModel.IsAnyCellInRowSelected(System.Int32)">
            <summary>
            Determines whether any cell in a specified row is in the selection.
            </summary>
            <param name="row">Row to check</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSelectionModel.IsAnyCellInColumnSelected(System.Int32)">
            <summary>
            Determines whether any cell in a specified column is in the selection.
            </summary>
            <param name="column">Column to check</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSelectionModel.IsEmpty">
            <summary>
            Determines whether the model has no selections.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSelectionModel.GetEnumerator">
            <summary>
            Gets an enumerator that can iterate through the selections. 
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSelectionModel.Serialize(System.Xml.XmlTextWriter)">
            <summary>
            Saves a selection to XML.
            </summary>
            <param name="w">XmlTextWriter object to which to save the selection</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSelectionModel.Deserialize(System.Xml.XmlNodeReader)">
            <summary>
            Loads the selection from XML.
            </summary>
            <param name="r">XmlNodeReader object from which to load the selection</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSelectionModel.GetExtendedSelection(System.Int32,System.Int32)">
            <summary>
            Gets the cell range that would be selected if you extended 
            the current selection to the specified row and column indexes.
            </summary>
            <param name="extendrow">Row index to which to extend the selection</param>
            <param name="extendcolumn">Column index to which to extend the selection</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSelectionModel.GetSelections(System.Int32,System.Int32)">
            <summary>
            Returns an ordered array of CellRange objects, from largest to smallest, containing the selected cells
            with minimal overlap between the ranges.
            </summary>
            <param name="rowCount">Specifies the number of rows in the sheet in which to look</param>
            <param name="columnCount">Specifies the number of columns in the sheet in which to look</param>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.DefaultSheetSelectionModel.AnchorRow">
            <summary>
            Gets the row index of the first cell in the selection of cells. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.DefaultSheetSelectionModel.AnchorColumn">
            <summary>
            Gets the column index of the first cell in the selection of cells.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.DefaultSheetSelectionModel.LeadRow">
            <summary>
            Gets the row index of the farthest cell of the selection. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.DefaultSheetSelectionModel.LeadColumn">
            <summary>
            Gets the column index of the farthest cell of the selection. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.DefaultSheetSelectionModel.SelectionPolicy">
            <summary>
            Gets or sets whether users can select ranges of items. 
            </summary>    
        </member>
        <member name="P:FarPoint.Win.Spread.Model.DefaultSheetSelectionModel.SelectionUnit">
            <summary>
            Gets or sets whether users can select cells, rows, or columns. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.DefaultSheetSelectionModel.Count">
            <summary>
            Gets the number of selections. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.DefaultSheetSelectionModel.Item(System.Int32)">
            <summary>
            Gets an item in the model.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.DrawingSpace.TextAndFont">
            <summary>
            Represents the text and font of the presentation space.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.DrawingSpace.TextAndFont.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.TextAndFont.#ctor">
            <summary>
            Creates a new text and font for the presentation space.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.TextAndFont.#ctor(System.Boolean)">
            <summary>
            Creates a new text and font for the presentation space.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.TextAndFont.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.TextAndFont.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.TextAndFont.FontName">
            <summary>
            Gets or sets the name of the font of the text.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.TextAndFont.SelectedFont">
            <summary>
            Gets or sets the font for selected text.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.TextAndFont.TextString">
            <summary>
            Gets or sets the text string.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.DrawingSpace.FontPicker">
            <summary>
            Represents the FarPoint presentation space font picker
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.FontPicker.#ctor">
            <summary>
            Creates a new font picker.
            </summary>                    
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.FontPicker.#ctor(System.Boolean)">
            <summary>
            Creates a new font picker.
            </summary>                    
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.FontPicker.Dispose(System.Boolean)">
            <summary> 
            Internal use only. Clean up any resources being used.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.FontPicker.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.FontPicker.FontName">
            <summary>
            Gets or sets the name of the font.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.FontPicker.SelectedFont">
            <summary>
            Gets or sets the font for selected text.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.FontPicker.TextString">
            <summary>
            Gets or sets the text.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.FontPicker.FontSize">
            <summary>
            Gets or sets the text.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.GridLineType">
            <summary>
            Specifies the type of grid lines.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.GridLineType.None">
            <summary>
            Displays no grid lines on the sheet
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.GridLineType.Flat">
            <summary>
            Displays grid lines on the sheet as flat, no contour
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.GridLineType.Lowered">
            <summary>
            Displays grid lines on the sheet to appear as lowered contour
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.GridLineType.Raised">
            <summary>
            Displays grid lines on the sheet to appear as raised contour
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.GridLine">
            <summary>
            Represents the grid lines.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.GridLine.#ctor">
            <summary>
            Creates a new grid line.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.GridLine.#ctor(FarPoint.Win.Spread.GridLineType)">
            <summary>
            Creates a new grid line of the specified line type.
            </summary>
            <param name="type">Type of grid line</param>
        </member>
        <member name="M:FarPoint.Win.Spread.GridLine.#ctor(FarPoint.Win.Spread.GridLineType,System.Drawing.Color)">
            <summary>
            Creates a new grid line of the specified line type and color.
            </summary>
            <param name="type">Type of grid line</param>
            <param name="color">Color of grid line</param>
        </member>
        <member name="M:FarPoint.Win.Spread.GridLine.#ctor(FarPoint.Win.Spread.GridLineType,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Creates a new grid line of the specified line type and colors.
            </summary>
            <param name="type">Type of grid line</param>
            <param name="color">Color of grid line</param>
            <param name="highlightColor">Highlight color for the grid line</param>
            <param name="shadowColor">Shadow color for the grid line</param>
        </member>
        <member name="M:FarPoint.Win.Spread.GridLine.#ctor(FarPoint.Win.Spread.GridLineType,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Int32)">
            <summary>
            Creates a new grid line of the specified line type, colors, and width.
            </summary>
            <param name="type">Type of grid line</param>
            <param name="color">Color of grid line</param>
            <param name="highlightColor">Highlight color for the grid line</param>
            <param name="shadowColor">Shadow color for the grid line</param>
            <param name="width">Width of grid line</param>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The type is not one of the BorderStyle values.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The width is less that -1.
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.GridLine.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Represents the grid lines.
            </summary>
            <param name="info">SerializationInfo object that holds the serialized object data</param>
            <param name="context">StreamingContext object with contexual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.GridLine.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates the SerializationInfo class with information about 
            the <see cref="T:FarPoint.Win.Spread.GridLine"/> object.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.GridLine.Serialize(System.Xml.XmlTextWriter)">
            <summary>
            Saves the grid line to XML.
            </summary>
            <param name="w">XmlTextWriter object to which to save the grid line object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.GridLine.Deserialize(System.Xml.XmlNodeReader)">
            <summary>
            Loads the grid line from XML.
            </summary>
            <param name="r">XmlNodeReader object from which to read the grid line object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.GridLine.GetDisplayedWidth">
            <summary>
            Gets the displayed width of the grid line.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.GridLine.ShouldSerializeWidth">
            <summary>
            Gets whether the Width property should be serialized.
            </summary>
            <returns>True if Width should be serialized, false otherwise.</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.GridLine.GetInsetLeft">
            <summary>
            Gets the inset from the left.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.GridLine.GetInsetTop">
            <summary>
            Gets the inset from the top.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.GridLine.GetInsetRight">
            <summary>
            Gets the inset from the right.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.GridLine.GetInsetBottom">
            <summary>
            Gets the inset from the bottom.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.GridLine.Type">
            <summary>
            Gets whether to display the grid lines and the type of grid lines to display.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.GridLine.Color">
            <summary>
            Gets the color of the grid lines.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.GridLine.HighlightColor">
            <summary>
            Gets the highlight color for the grid lines.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.GridLine.ShadowColor">
            <summary>
            Gets the shadow color for the grid lines.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.GridLine.Width">
            <summary>
            Gets the width of the grid lines.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.CellsEditorForm">
            <summary>
            Summary description for CellsEditorForm.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellsEditorForm.OnApplying(System.EventArgs)">
            <summary>
            Fires the Applying event.
            </summary>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellsEditorForm.OnApplied(System.EventArgs)">
            <summary>
            Fires the Applied event.
            </summary>
            <param name="e">EventArgs</param>
        </member>
        <member name="F:FarPoint.Win.Spread.CellsEditorForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellsEditorForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellsEditorForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.CellsEditorForm.Applying">
            <summary>
            Raised when the editor is about to begin applying changes.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.CellsEditorForm.Applied">
            <summary>
            Raised when the editor has finished applying changes.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.Model.IRangeSupport">
            <summary>
            Interface that supports operations on ranges of cells 
            in the data model.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.IRangeSupport.AddRows(System.Int32,System.Int32)">
            <summary>
            Adds rows of cells after the specified row.
            </summary>
            <param name="row">Row index of row after which to add rows</param>
            <param name="rowCount">Number of rows to add</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.IRangeSupport.AddColumns(System.Int32,System.Int32)">
            <summary>
            Adds columns of cells after the specified column.
            </summary>
            <param name="column">Column index of column after which to add columns</param>
            <param name="columnCount">Number of columns to add</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.IRangeSupport.RemoveRows(System.Int32,System.Int32)">
            <summary>
            Removes rows from the specified starting position.
            </summary>
            <param name="row">Row index at which to start removing rows</param>
            <param name="rowCount">Number of rows to remove</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.IRangeSupport.RemoveColumns(System.Int32,System.Int32)">
            <summary>
            Removes columns from the specified starting position. 
            </summary>
            <param name="column">Column index at which to start removing columns</param>
            <param name="columnCount">Number of columns to remove</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.IRangeSupport.Clear(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Clears the contents from the cells in the specified range of cells. 
            </summary>
            <param name="row">Row index of first row in selected range</param>
            <param name="column">Column index of first column in selected range</param>
            <param name="rowCount">Number of rows in selected range</param>
            <param name="columnCount">Number of columns in selected range</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.IRangeSupport.Copy(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Copies a range of cells and pastes it into a range of cells at the specified location. 
            </summary>
            <param name="fromRow">Row index from which to begin copying</param>
            <param name="fromColumn">Column index from which to begin copying</param>
            <param name="toRow">Row index at which to paste the cell range</param>
            <param name="toColumn">Column index at which to paste the cell range</param>
            <param name="rowCount">Number of rows to copy</param>
            <param name="columnCount">Number of columns to copy</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.IRangeSupport.Move(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Moves a range of cells and pastes it into a range of cells at the specified location. 
            </summary>
            <param name="fromRow">Row index from which to begin the move</param>
            <param name="fromColumn">Column index from which to begin the move</param>
            <param name="toRow">Row index at which to paste the cell range</param>
            <param name="toColumn">Column index at which to paste the cell range</param>
            <param name="rowCount">Number of rows to move</param>
            <param name="columnCount">Number of columns to move</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.IRangeSupport.Swap(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Swaps a range of cells from one specified location to another.  
            </summary>
            <param name="fromRow">Row index from which to begin swap</param>
            <param name="fromColumn">Column index from which to begin swap</param>
            <param name="toRow">Row index of the destination range</param>
            <param name="toColumn">Column index of the destination range</param>
            <param name="rowCount">Number of rows to swap</param>
            <param name="columnCount">Number of columns to swap</param>
        </member>
        <member name="M:FarPoint.Win.Spread.ReferencesArray.Find(System.Int32,System.Int32)">
            <summary>
            Searches the References objects in the array for one which
            contains a reference to the specified row and column.
            </summary>
            <param name="row">
            Row index for which to search
            </param>
            <param name="column">
            Column index for which to search
            </param>
            <returns>
            Index of the reference found, or -1 if no reference is found
            </returns>
        </member>
        <member name="T:FarPoint.Win.Spread.NamedStyle">
            <summary>
            Represents a custom style, an object that can be used to set 
            style information for other objects.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.StyleInfo">
            <summary>
            Represents the set of cell-level style settings for objects.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleInfo.#ctor">
            <summary>
            Creates a set of cell-level style settings (StyleInfo object).
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleInfo.#ctor(System.String)">
            <summary>
            Creates a set of cell-level style settings (StyleInfo object) with the specified parent style.
            </summary>
            <param name="parentName">
            Name of the parent <see cref="T:FarPoint.Win.Spread.NamedStyle"/> object
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleInfo.#ctor(FarPoint.Win.Spread.StyleInfo)">
            <summary>
            Creates a set of cell-level style settings (StyleInfo object) equivalent to 
            the specified set of style settings.
            </summary>
            <param name="info">
            StyleInfo object from which to copy style settings
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleInfo.#ctor(System.String,FarPoint.Win.Spread.StyleInfo)">
            <summary>
            Creates a set of cell-level style settings (StyleInfo object) with the specified parent style 
            and specified set of style settings.
            </summary>
            <param name="parentName">Name of the parent</param>
            <param name="style">StyleInfo object to copy</param>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a set of cell-level style settings (StyleInfo object) from serialization.
            </summary>
            <param name="info">SerializationInfo</param>
            <param name="context">StreamingContext</param>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets information about the style settings from serialization.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleInfo.Serialize(System.Xml.XmlTextWriter)">
            <summary>
            Saves the style information to XML.
            </summary>
            <param name="w">
            XmlTextWriter object to which to save the object
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleInfo.Deserialize(System.Xml.XmlNodeReader)">
            <summary>
            Loads the style information from XML.
            </summary>
            <param name="r">XmlNodeReader from which to load the object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleInfo.Clone">
            <summary>
            Creates a new object that is a copy of the current instance (with the same style settings). 
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleInfo.Reset">
            <summary>
            Resets all the style settings in the <see cref="T:FarPoint.Win.Spread.StyleInfo"/> object 
            to the default settings.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleInfo.ResetParent">
            <summary>
            Resets the <see cref="P:FarPoint.Win.Spread.StyleInfo.Parent"/> property to its default value.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleInfo.ResetBackColor">
            <summary>
            Resets the <see cref="P:FarPoint.Win.Spread.StyleInfo.BackColor"/> property to its default value.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleInfo.ResetForeColor">
            <summary>
            Resets the <see cref="P:FarPoint.Win.Spread.StyleInfo.ForeColor"/> property to its default value.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleInfo.ResetFont">
            <summary>
            Resets the <see cref="P:FarPoint.Win.Spread.StyleInfo.Font"/> property to its default value.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleInfo.ResetHorizontalAlignment">
            <summary>
            Resets the <see cref="P:FarPoint.Win.Spread.StyleInfo.HorizontalAlignment"/> property to its default value.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleInfo.ResetVerticalAlignment">
            <summary>
            Resets the <see cref="P:FarPoint.Win.Spread.StyleInfo.VerticalAlignment"/> property to its default value.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleInfo.ResetBorder">
            <summary>
            Resets the <see cref="P:FarPoint.Win.Spread.StyleInfo.Border"/> property to its default value.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleInfo.ResetCellType">
            <summary>
            Resets the <see cref="P:FarPoint.Win.Spread.StyleInfo.CellType"/> property to its default value.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleInfo.ResetEditor">
            <summary>
            Resets the <see cref="P:FarPoint.Win.Spread.StyleInfo.Editor"/> property to its default value.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleInfo.ResetRenderer">
            <summary>
            Resets the <see cref="P:FarPoint.Win.Spread.StyleInfo.Renderer"/> property to its default value.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleInfo.ResetFormatter">
            <summary>
            Resets the <see cref="P:FarPoint.Win.Spread.StyleInfo.Formatter"/> property to its default value.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleInfo.ResetLocked">
            <summary>
            Resets the <see cref="P:FarPoint.Win.Spread.StyleInfo.Locked"/> property to its default value.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleInfo.ResetNoteStyle">
            <summary>
            Resets the <see cref="P:FarPoint.Win.Spread.StyleInfo.NoteStyle"/> property to its default value.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleInfo.ResetCanFocus">
            <summary>
            Resets the <see cref="P:FarPoint.Win.Spread.StyleInfo.CanFocus"/> property to its default value.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleInfo.ResetTabStop">
            <summary>
            Resets the <see cref="P:FarPoint.Win.Spread.StyleInfo.TabStop"/> property to its default value.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleInfo.ResetNoteIndicatorColor">
            <summary>
            Resets the <see cref="P:FarPoint.Win.Spread.StyleInfo.NoteIndicatorColor"/> property to its default value.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleInfo.ResetProperty(FarPoint.Win.Spread.SheetStyleProperty)">
            <summary>
            Resets a style setting (property) to its default setting.
            </summary>
            <param name="styleProperty"><see cref="T:FarPoint.Win.Spread.SheetStyleProperty"/> object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleInfo.IsPropertySet(FarPoint.Win.Spread.SheetStyleProperty)">
            <summary>
            Gets whether the specified cell style setting (property) is set.
            </summary>
            <param name="styleProperty"><see cref="T:FarPoint.Win.Spread.SheetStyleProperty"/> object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleInfo.IsParentSet">
            <summary>
            Gets whether the parent of the cell (Parent property) is set.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleInfo.IsBackColorSet">
            <summary>
            Gets whether the background color of the cell (BackColor property) is set.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleInfo.IsForeColorSet">
            <summary>
            Gets whether the text color of the cell (ForeColor property) is set.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleInfo.IsFontSet">
            <summary>
            Gets whether the font of the cell (Font property) is set.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleInfo.IsHorizontalAlignmentSet">
            <summary>
            Gets whether the horizontal alignment of the cell contents (HorizontalAlignment property) is set.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleInfo.IsVerticalAlignmentSet">
            <summary>
            Gets whether the vertical alignment of the cell contents (VerticalAlignment property) is set.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleInfo.IsBorderSet">
            <summary>
            Gets whether the cell border (Border property) is set.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleInfo.IsCellTypeSet">
            <summary>
            Gets whether the type of cell (CellType property) is set.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleInfo.IsEditorSet">
            <summary>
            Gets whether the editor for the cell (Editor property) is set.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleInfo.IsRendererSet">
            <summary>
            Gets whether the renderer for the cell (Renderer property) is set.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleInfo.IsFormatterSet">
            <summary>
            Gets whether the formatter for the cell (Formatter property) is set.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleInfo.IsLockedSet">
            <summary>
            Gets whether the locked setting of the cell (Locked property) is set.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleInfo.IsNoteStyleSet">
            <summary>
            Gets whether the note style setting of the cell (NoteStyle property) is set.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleInfo.IsCanFocusSet">
            <summary>
            Gets whether the focusable setting of the cell (CanFocus property) is set.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleInfo.IsTabStopSet">
            <summary>
            Gets whether the tab stop setting of the cell (TabStop property) is set.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleInfo.IsNoteIndicatorColorSet">
            <summary>
            Gets whether the cell note indicator color of the cell is set.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleInfo.Compose(FarPoint.Win.Spread.StyleInfo)">
            <summary>
            Composes style settings using the current style settings and those of 
            a specified object.
            </summary>
            <param name="source">Source object from which to get style settings</param>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleInfo.Compose(FarPoint.Win.Spread.StyleInfo,System.Boolean)">
            <summary>
            Composes style settings using the current style settings and those of 
            a specified object with an option to overwrite the current style settings.
            </summary>
            <param name="source">Source object from which to get style settings</param>
            <param name="merge">Whether to overwrite the current settings with the settings from the source object </param>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleInfo.Merge(FarPoint.Win.Spread.StyleInfo)">
            <summary>
            Merges the style settings with the current object.
            </summary>
            <param name="source">Object whose style settings are merged with the current object </param>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleInfo.Merge(FarPoint.Win.Spread.StyleInfo,System.Boolean)">
            <summary>
            Merges the style settings with the current object with the option to 
            overwrite settings in the current object.
            </summary>
            <param name="source">
            Object whose style settings are merged with the current object 
            </param>
            <param name="force">
            Whether to overwrite the current settings with the settings from the merge object
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleInfo.CopyFrom(System.Object)">
            <summary>
            Copies the specified style settings of the specified object to the current object.
            </summary>
            <param name="o">Object from which to copy style settings</param>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleInfo.GetAppearance(FarPoint.Win.Spread.Appearance)">
            <summary>
            Gets the appearance settings for the specified object.
            </summary>
            <param name="appearance"><see cref="T:FarPoint.Win.Spread.Appearance"/> object to receive the appearance settings, 
            or null to create and return a new Appearance object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleInfo.SetAppearance(FarPoint.Win.Spread.Appearance)">
            <summary>
            Sets the appearance settings of an <see cref="T:FarPoint.Win.Spread.Appearance"/> object into 
            this object.
            </summary>
            <param name="appearance">
            <see cref="T:FarPoint.Win.Spread.Appearance"/> object from which to set appearance settings
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleInfo.Equals(System.Object)">
            <summary>
            Determines whether the style settings of this object are equivalent to the object specified.
            </summary>
            <param name="o">Object with which to compare the style settings of the current object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleInfo.GetHashCode">
            <summary>
            Gets the hash code of this object.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.StyleInfo.CanSerializeXml">
            <summary>
            Gets whether the object in its entirety can be rendered with XML without losing any information. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.StyleInfo.Parent">
            <summary>
            Gets or sets the name of the parent (<see cref="T:FarPoint.Win.Spread.NamedStyle"/> object) of the style.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.StyleInfo.BackColor">
            <summary>
            Gets or sets the background color of the cell for the style.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.StyleInfo.ForeColor">
            <summary>
            Gets or sets the text color of the cell for the style.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.StyleInfo.Font">
            <summary>
            Gets or sets the font settings of the cell for the style.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.StyleInfo.NoteStyle">
            <summary>
            Gets or sets the note style of the cell for the style.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.StyleInfo.NoteIndicatorColor">
            <summary>
            Gets or sets the color of the cell note indicator.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.StyleInfo.HorizontalAlignment">
            <summary>
            Gets or sets the horizontal alignment of the contents of the cell for the style.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.StyleInfo.VerticalAlignment">
            <summary>
            Gets or sets the vertical alignment of contents of the cell for the style.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.StyleInfo.Border">
            <summary>
            Gets or sets the border of the cell for the style.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.StyleInfo.CellType">
            <summary>
            Gets or sets the type of cell for the style.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.StyleInfo.Editor">
            <summary>
            Gets or sets the editor of the cell for the style.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.StyleInfo.Renderer">
            <summary>
            Gets or sets the renderer of the cell for the style.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.StyleInfo.Formatter">
            <summary>
            Gets or sets the formatter of the cell for the style.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.StyleInfo.Locked">
            <summary>
            Gets or sets the whether the style marks cells as locked.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.StyleInfo.CanFocus">
            <summary>
            Gets or sets whether the user can set focus to the cell using the keyboard or mouse.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.StyleInfo.TabStop">
            <summary>
            Gets or sets whether the user can set focus to the cell using the Tab key.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.StyleInfo.IsEmpty">
            <summary>
            Gets whether there are no style settings set.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.NamedStyle.#ctor">
            <summary>
            Creates a custom style (NamedStyle object) with no name and no parent.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.NamedStyle.#ctor(System.String)">
            <summary>
            Creates a custom style (NamedStyle object) with the specified name.
            </summary>
            <param name="name">
            Name of the new NamedStyle object
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.NamedStyle.#ctor(System.String,System.String)">
            <summary>
            Creates a custom style (NamedStyle object) with the specified name
            and parent.
            </summary>
            <param name="name">
            Name of the new NamedStyle object
            </param>
            <param name="parentName">
            Parent of the new NamedStyle object
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.NamedStyle.#ctor(System.String,System.String,FarPoint.Win.Spread.StyleInfo)">
            <summary>
            Creates a custom style (NamedStyle object) using the specified StyleInfo object,
            name, and parent name.
            </summary>
            <param name="style">
            StyleInfo object
            </param>
            <param name="name">
            Name of the new style (NamedStyle object)
            </param>
            <param name="parentName">
            Parent of the new style (NamedStyle object)
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.NamedStyle.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a custom style (NamedStyle object) for sharing settings across models.
            </summary>
            <param name="info">SerializationInfo</param>
            <param name="context">StreamingContext</param>
        </member>
        <member name="M:FarPoint.Win.Spread.NamedStyle.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates the SerializationInfo class with information 
            about the style settings.
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contextual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.NamedStyle.Serialize(System.Xml.XmlTextWriter)">
            <summary>
            Saves the style object to XML.
            </summary>
            <param name="w">XmlTextWriter object to which to save the style</param>
        </member>
        <member name="M:FarPoint.Win.Spread.NamedStyle.Deserialize(System.Xml.XmlNodeReader)">
            <summary>
            Loads the style object from XML.
            </summary>
            <param name="r">XmlNodeReader from which to load the object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.NamedStyle.ToString">
            <summary>
            Gets the value of the Name property.
            </summary>
            <returns>Value of the Name property</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.NamedStyle.Equals(System.Object)">
            <summary>
            Determines whether another object is a reference to this object.
            </summary>
            <param name="o">Object to compare</param>
            <returns>
            True if the specified object is a reference to this object; false otherwise
            </returns>
        </member>
        <member name="M:FarPoint.Win.Spread.NamedStyle.GetHashCode">
            <summary>
            Gets the hash code of this object.
            </summary>
            <returns>The hash code</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.NamedStyle.op_Equality(FarPoint.Win.Spread.NamedStyle,System.Object)">
            <summary>
            Determines whether two styles (a specified object and a NamedStyle object) are equal.
            </summary>
            <param name="style">
            NamedStyle object (one side of the inequality operator)
            </param>
            <param name="o">
            Object with which to compare the NamedStyle object (other side of the inequality operator)
            </param>
            <returns>
            True if the specified object is equivalent to the NamedStyle object; false otherwise
            </returns>
        </member>
        <member name="M:FarPoint.Win.Spread.NamedStyle.op_Inequality(FarPoint.Win.Spread.NamedStyle,System.Object)">
            <summary>
            Determines whether two styles (a specified object and a NamedStyle object) are not equal.
            </summary>
            <param name="style">
            NamedStyle object (one side of the inequality operator)
            </param>
            <param name="o">
            Object with which to compare the NamedStyle object (other side of the inequality operator)
            </param>
            <returns>
            True if the specified object is not equivalent to the NamedStyle object; false otherwise
            </returns>
        </member>
        <member name="M:FarPoint.Win.Spread.NamedStyle.Clone">
            <summary>
            Creates and returns a copy of this object.
            </summary>
            <returns>Copy of this object</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.NamedStyle.OnChanged(System.EventArgs)">
            <summary>
            Raises the Changed event.
            </summary>
            <param name="e">
            Event arguments to pass to event handlers
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.NamedStyle.Reset">
            <summary>
            Resets all the named style properties to their default values.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.NamedStyle.ResetBackColor">
            <summary>
            Resets the background color for the style to the default setting (not set).
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.NamedStyle.ResetForeColor">
            <summary>
            Resets the text color for the style to the default setting (not set).
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.NamedStyle.ResetFont">
            <summary>
            Resets the font for the style to the default setting (not set).
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.NamedStyle.ResetHorizontalAlignment">
            <summary>
            Resets the horizontal alignment for the style to the default setting (not set).
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.NamedStyle.ResetVerticalAlignment">
            <summary>
            Resets the vertical alignment for the style to the default setting (not set).
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.NamedStyle.ResetBorder">
            <summary>
            Resets the border for the style to the default setting (not set).
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.NamedStyle.ResetCellType">
            <summary>
            Resets the cell type for the style to the default setting (not set).
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.NamedStyle.ResetEditor">
            <summary>
            Resets the editor for the style to the default setting (not set).
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.NamedStyle.ResetRenderer">
            <summary>
            Resets the renderer for the style to the default setting (not set).
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.NamedStyle.ResetFormatter">
            <summary>
            Resets the formatter for the style to the default setting (not set).
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.NamedStyle.ResetLocked">
            <summary>
            Resets to the default setting for the style whether this style permits a cell to be edited 
            when the sheet is protected (not set).
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.NamedStyle.ResetNoteStyle">
            <summary>
            Resets to the default setting the style of cell notes (not set).
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.NamedStyle.ResetNoteIndicatorColor">
            <summary>
            Resets to its default value the color of the note indicator for the style.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.NamedStyle.ResetCanFocus">
            <summary>
            Resets to its default value whether the user can set focus to the cell using the keyboard or mouse.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.NamedStyle.ResetTabStop">
            <summary>
            Resets to its default value whether the user can set focus to the cell using the Tab key.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.NamedStyle.ResetProperty(FarPoint.Win.Spread.SheetStyleProperty)">
            <summary>
            Resets the specified property to the default setting (not set).
            </summary>
            <param name="styleProperty">Style property to reset</param>
        </member>
        <member name="M:FarPoint.Win.Spread.NamedStyle.ResetName">
            <summary>
            Resets to the default the name of the style (String.Empty).
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.NamedStyle.CopyFrom(System.Object)">
            <summary>
            Copies the properties of the specified object to the current object.
            </summary>
            <param name="obj">Object from which to copy style settings</param>
        </member>
        <member name="P:FarPoint.Win.Spread.NamedStyle.Name">
            <summary>
            Gets or sets the name of the style.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.NamedStyle.Changed">
            <summary>
            Occurs when the named style has changed.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.NamedStyle.BackColor">
            <summary>
            Gets or sets the background color for the style.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.NamedStyle.ForeColor">
            <summary>
            Gets or sets the text color for the style.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.NamedStyle.Font">
            <summary>
            Gets or sets the font for the style.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.NamedStyle.HorizontalAlignment">
            <summary>
            Gets or sets the horizontal alignment for the named style.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.NamedStyle.VerticalAlignment">
            <summary>
            Gets or sets the vertical alignment for the style.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.NamedStyle.Border">
            <summary>
            Gets or sets the border for the style.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.NamedStyle.Formatter">
            <summary>
            Gets or sets the formatter for the style.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.NamedStyle.CellType">
            <summary>
            Gets or sets the cell type for the style.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.NamedStyle.Editor">
            <summary>
            Gets or sets the editor for the style.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.NamedStyle.Renderer">
            <summary>
            Gets or sets the renderer for the style.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.NamedStyle.Locked">
            <summary>
            Gets or sets whether this style permits a cell to be edited when the sheet is protected.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.NamedStyle.NoteStyle">
            <summary>
            Gets or sets the style of cell notes for the style of the cell.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.NamedStyle.NoteIndicatorColor">
            <summary>
            Gets or sets the color of the cell note indicator.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.NamedStyle.CanFocus">
            <summary>
            Gets or sets whether the user can set focus to the cell using the keyboard or mouse.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.NamedStyle.TabStop">
            <summary>
            Gets or sets whether the user can set focus to the cell using the Tab key.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.NamedStyle.Parent">
            <summary>
            Gets or sets the name of the parent (<see cref="T:FarPoint.Win.Spread.NamedStyle"/> object) for the style.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.NamedStyleCollectionEventType">
            <summary>
            Specifies the type of change event that has occurred for the style in the collection.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.NamedStyleCollectionEventType.ItemAdded">
            <summary>
            Indicates that a style has been added to the collection
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.NamedStyleCollectionEventType.ItemRemoved">
            <summary>
            Indicates that a style has been removed from the collection
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.NamedStyleCollectionEventType.ItemChanged">
            <summary>
            Indicates that a style in the collection has been replaced
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.NamedStyleCollectionEventArgs">
            <summary>
            Represents the event data for the NamedStyleCollection object's Changed event.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.NamedStyleCollectionEventArgs.#ctor(FarPoint.Win.Spread.NamedStyleCollectionEventType,FarPoint.Win.Spread.NamedStyle,FarPoint.Win.Spread.NamedStyle)">
            <summary>
            Initializes a new NamedStyleCollectionEventArgs object with the specified type and styles.
            </summary>
            <param name="type">
            Type of event to occur
            </param>
            <param name="oldstyle">
            Old style, or null if not applicable
            </param>
            <param name="newstyle">
            New style, or null if not applicable
            </param>
        </member>
        <member name="P:FarPoint.Win.Spread.NamedStyleCollectionEventArgs.Type">
            <summary>
            Gets the type of event that occurred.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.NamedStyleCollectionEventArgs.OldStyle">
            <summary>
            Gets the old style that was removed or changed, 
            or null if no style was removed or changed.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.NamedStyleCollectionEventArgs.NewStyle">
            <summary>
            Gets the new style that was added, or null if no style was added.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.NamedStyleCollectionEventHandler">
            <summary>
            Represents a defined method that handles the NamedStyleCollection object's Changed event.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.NamedStyleCollection">
            <summary>
            Represents a collection of custom styles (NamedStyle objects).
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.NamedStyleCollection.DefaultStyles">
            <summary>
            Represents the read-only collection of default styles.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.NamedStyleCollection.#ctor">
            <summary>
            Creates a custom style collection (NamedStyleCollection object).
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.NamedStyleCollection.Serialize(System.Xml.XmlTextWriter)">
            <summary>
            Saves the collection of styles to XML.
            </summary>
            <param name="w">
            XmlTextWriter object to which to save the collection object
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.NamedStyleCollection.Deserialize(System.Xml.XmlNodeReader)">
            <summary>
            Loads the collection of styles from XML.
            </summary>
            <param name="r">
            XmlNodeReader from which to load the collection object
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.NamedStyleCollection.Compose(System.Object,FarPoint.Win.Spread.StyleInfo)">
            <summary>
            Composes a style, using the current style and 
            a specified NamedStyle object. 
            </summary>
            <param name="o">
            Style (NamedStyle object)
            </param>
            <param name="destInfo">
            Destination for the composed StyleInfo object or
            creates a new StyleInfo object if Null 
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.NamedStyleCollection.Find(System.String)">
            <summary>
            Finds a style (NamedStyle object) in the collection with the specified name.
            </summary>
            <param name="name">
            Name of the style to find
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.NamedStyleCollection.CopyTo(FarPoint.Win.Spread.NamedStyle[],System.Int32)">
            <summary>
            Copies the styles in the collection to a specified array at a specified position. 
            </summary>
            <param name="namedStyles">
            One-dimensional array into which are copied the elements from ICollection
            (The array must have zero-based indexing.)
            </param>
            <param name="index">
            Zero-based index in array at which to paste styles.
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.NamedStyleCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the styles in the collection to a specified array at a specified position. 
            </summary>
            <param name="array">
             One-dimensional array into which are copied the elements from ICollection
             (The array must have zero-based indexing.)
            </param>
            <param name="index">
            Zero-based index in array at which to paste styles
            </param>
            <exception cref="T:System.ArgumentNullException">No array specified, or specified array is null (Nothing)</exception>
            <exception cref="T:System.ArgumentException">Specified array is not valid; must have a rank of one</exception>
            <exception cref="T:System.ArgumentException">Specified array is not valid; must have sufficient length</exception>
            <exception cref="T:System.IndexOutOfRangeException">Specified index is out of range; must be greater than zero</exception>
        </member>
        <member name="M:FarPoint.Win.Spread.NamedStyleCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds a NamedStyle object to the collection.
            </summary>
            <param name="value">
            Specifies the NamedStyle object to add.
            </param>
            <returns>
            Returns the index of the element in the collection.
            </returns>
        </member>
        <member name="M:FarPoint.Win.Spread.NamedStyleCollection.AddRange(System.Collections.ICollection)">
            <summary>
            Adds an array of styles (NamedStyle objects) to the collection. 
            </summary>
            <param name="c">NamedStyleCollection or array of NamedStyle objects to add to the collection</param>
        </member>
        <member name="M:FarPoint.Win.Spread.NamedStyleCollection.AddRange(FarPoint.Win.Spread.NamedStyle[])">
            <summary>
            Adds an array of NamedStyle objects to the collection. 
            </summary>
            <param name="array">Array of styles (NamedStyle objects) to add to the collection</param>
        </member>
        <member name="M:FarPoint.Win.Spread.NamedStyleCollection.Add(FarPoint.Win.Spread.NamedStyle)">
            <summary>
            Adds a style (NamedStyle object) to the collection. 
            </summary>
            <param name="style">Name of the style to add</param>
            <exception cref="T:System.ArgumentNullException">
            No style specified or specified style is null
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.NamedStyleCollection.Add(System.String,System.String)">
            <summary>
            Adds a style (NamedStyle object) to the collection as a child 
            to the specified parent.
            </summary>
            <param name="name">Name of the style to add</param>
            <param name="parentName">Parent style of the style to add</param>
        </member>
        <member name="M:FarPoint.Win.Spread.NamedStyleCollection.Clear">
            <summary>
            Removes all named styles from the collection. 
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.NamedStyleCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether the collection contains the specified NamedStyle object.
            </summary>
            <param name="value">
            NamedStyle object to check for in the collection.
            </param>
            <returns>
            True if the object is found in the collection; false otherwise.
            </returns>
        </member>
        <member name="M:FarPoint.Win.Spread.NamedStyleCollection.Contains(FarPoint.Win.Spread.NamedStyle)">
            <summary>
            Determines whether the collection contains the specified style (NamedStyle object).
            </summary>
            <param name="style">
            Style (NamedStyle object) for which to check in the collection
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.NamedStyleCollection.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Returns the index of the specified NamedStyle object. 
            </summary>
            <param name="value">
            NamedStyle object for which to search.
            </param>
            <returns>
            Index of the object in the collection, or -1 if the object was not found. 
            </returns>
        </member>
        <member name="M:FarPoint.Win.Spread.NamedStyleCollection.IndexOf(FarPoint.Win.Spread.NamedStyle)">
            <summary>
            Returns the index of the specified style in the collection. 
            </summary>
            <param name="style">
            Style (NamedStyle object) for which to search
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.NamedStyleCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts a style into the collection at the specified index.
            </summary>
            <param name="index">
            Zero-based index at which to insert style.
            </param>
            <param name="value">
            Style to insert into the collection.
            </param>
            <exception cref="T:System.ArgumentException">Specified object is not valid</exception>
        </member>
        <member name="M:FarPoint.Win.Spread.NamedStyleCollection.Insert(System.Int32,FarPoint.Win.Spread.NamedStyle)">
            <summary>
            Inserts a style into the collection at the specified index.
            </summary>
            <param name="index">
            Zero-based index at which to insert the named style
            </param>
            <param name="style">
            Style to insert into the collection
            </param>
            <exception cref="T:System.IndexOutOfRangeException">
            Specified index is out of range; must be between 0 and the total number in the collection
            </exception>
            <exception cref="T:System.ArgumentNullException">
            No style specified or specified style is null
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.NamedStyleCollection.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes the specified NamedStyle object from the collection. 
            </summary>
            <param name="value">
            Object to remove.
            </param>
            <exception cref="T:System.ArgumentException">Specified object is not valid</exception>
        </member>
        <member name="M:FarPoint.Win.Spread.NamedStyleCollection.Remove(FarPoint.Win.Spread.NamedStyle)">
            <summary>
            Removes the specified named style from the collection.
            </summary>
            <param name="style">
            Style (NamedStyle object) to remove
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.NamedStyleCollection.RemoveAt(System.Int32)">
            <summary>
            Removes a named style (NamedStyle object) from the collection at the specified index. 
            </summary>
            <param name="index">
            Zero-based index of the style to be removed
            </param>
            <exception cref="T:System.IndexOutOfRangeException">
            Specified index is out of range; must be between 0 and the total number in the collection
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.NamedStyleCollection.GetEnumerator">
            <summary>
            Gets an IEnumerator object for enumerating through the NamedStyle objects
            in the collection.
            </summary>
            <returns>
            IEnumerator object for enumerating the NamedStyle objects in the collection
            </returns>
        </member>
        <member name="M:FarPoint.Win.Spread.NamedStyleCollection.FireItemChanged(FarPoint.Win.Spread.NamedStyle,FarPoint.Win.Spread.NamedStyle)">
            <summary>
            Calls OnChanged to raise an ItemChanged event with the specified arguments.
            </summary>
            <param name="oldstyle">
            Old NamedStyle object
            </param>
            <param name="newstyle">
            New NamedStyle object
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.NamedStyleCollection.FireItemAdded(FarPoint.Win.Spread.NamedStyle)">
            <summary>
            Calls OnChanged to raise an ItemAdded event for the specified NamedStyle object.
            </summary>
            <param name="style">
            New NamedStyle object
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.NamedStyleCollection.FireItemRemoved(FarPoint.Win.Spread.NamedStyle)">
            <summary>
            Calls OnChanged to raise an ItemRemoved event for the specified NamedStyle object.
            </summary>
            <param name="style">
            Old NamedStyle object
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.NamedStyleCollection.OnChanged(FarPoint.Win.Spread.NamedStyleCollectionEventArgs)">
            <summary>
            Raises the Changed event.
            </summary>
            <param name="e">
            NamedStyleCollectionEventArgs object that contains the event data
            </param>
        </member>
        <member name="P:FarPoint.Win.Spread.NamedStyleCollection.CanSerializeXml">
            <summary>
            Gets whether the object in its entirety can be rendered with XML without losing any information. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.NamedStyleCollection.Count">
            <summary>
            Gets the number of styles (NamedStyle objects) in the collection.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.NamedStyleCollection.IsSynchronized">
            <summary>
            Gets whether access to the collection is synchronized.
            (This implementation always returns false.)
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.NamedStyleCollection.System#Collections#ICollection#SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the collection.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.NamedStyleCollection.SyncRoot">
            <summary>
            Gets a collection (NamedStyleCollection object) that can be used to 
            synchronize access. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.NamedStyleCollection.IsFixedSize">
            <summary>
            Gets whether the collection has a fixed size. 
            (This implementation always returns false.)
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.NamedStyleCollection.IsReadOnly">
            <summary>
            Gets whether the collection is read-only.
            (This implementation always returns false.)
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.NamedStyleCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the style (NamedStyle object) at the specified index. 
            </summary>
            <exception cref="T:System.ArgumentException">Specified object type is not valid; must be NamedStyle</exception>
        </member>
        <member name="P:FarPoint.Win.Spread.NamedStyleCollection.Item(System.Int32)">
            <summary>
            Gets or sets the style (NamedStyle object) at the specified index in the collection.
            </summary>
            <exception cref="T:System.IndexOutOfRangeException">Specified index is not valid</exception>
            <exception cref="T:System.ArgumentNullException">No value specified; cannot set a member to null</exception>
        </member>
        <member name="E:FarPoint.Win.Spread.NamedStyleCollection.Changed">
            <summary>
            Occurs when a style is added, removed, or changed in the collection.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.NamedStyleConverter">
            <summary>
            Converts NamedStyle objects from one data type to another.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.NamedStyleConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns a value indicating whether a named style object can be converted to the specified type.
            </summary>
            <param name="context">ITypeDescriptorContext</param>
            <param name="destinationType">Type</param>
            <returns>True if a named style object can be converted to the specified type, and false otherwise.</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.NamedStyleConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the NamedStyle object to a string.
            </summary>
            <param name="context">ITypeDescriptorContext</param>
            <param name="culture">CultureInfo</param>
            <param name="value">object</param>
            <param name="destinationType">Type</param>
            <returns>String representation of a NamedStyle object.</returns>
        </member>
        <member name="T:FarPoint.Win.Spread.DefaultStyleCollection">
            <summary>
            Represents the read-only collection of default NamedStyle objects.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.HeaderDefault">
            <summary>
            Represents the default style for header cells.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.DataAreaDefault">
            <summary>
            Represents the default style for data area cells.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.Styles">
            <summary>
            Represents the array of NamedStyle objects containing the default styles.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DefaultStyleCollection.Compose(System.Object,FarPoint.Win.Spread.StyleInfo)">
            <summary>
            Composes a style using the default styles and 
            a specified StyleInfo object. 
            </summary>
            <param name="o">
            Style (NamedStyle object, StyleInfo object, or string name)
            </param>
            <param name="destInfo">
            Destination for the composed StyleInfo object, or  
            creates a new StyleInfo object if null 
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.DefaultStyleCollection.Find(System.String)">
            <summary>
            Finds a style with the specified name in the collection.
            </summary>
            <param name="name">
            Style (NamedStyle object) to find
            </param>
            <returns>
            Style (NamedStyle object) in the collection with the specified name, or
            null if no NamedStyle is found
            </returns>
        </member>
        <member name="M:FarPoint.Win.Spread.DefaultStyleCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the styles in the collection to a specified array at a specified location. 
            </summary>
            <param name="array">
            One-dimensional array into which are copied the elements from ICollection;
            the array indexing must be zero-based. 
            </param>
            <param name="index">
            Zero-based index in the array at which to paste the styles
            </param>
            <exception cref="T:System.ArgumentNullException">No array specified, or specified array is null (Nothing)</exception>
            <exception cref="T:System.ArgumentException">Specified array is invalid; must have a rank of one</exception>
            <exception cref="T:System.ArgumentException">Specified array is invalid; must have sufficient length</exception>
            <exception cref="T:System.IndexOutOfRangeException">Specified index is out of range; must be greater than zero</exception>
        </member>
        <member name="M:FarPoint.Win.Spread.DefaultStyleCollection.CopyTo(FarPoint.Win.Spread.NamedStyle[],System.Int32)">
            <summary>
            Copies the styles in the collection to a specified array at a specified location. 
            </summary>
            <param name="array">
            One-dimensional array into which are copied the elements from ICollection; 
            the array indexing must be zero-based. 
            </param>
            <param name="index">
            Zero-based index in the array at which to paste the styles
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.DefaultStyleCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            Not supported; calling this method throws an exception because the collection is read-only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DefaultStyleCollection.Add(FarPoint.Win.Spread.NamedStyle)">
            <summary>
            Not supported; calling this method throws an exception because the collection is read-only.
            </summary>
            <param name="value">Style (NamedStyle object) to add to the collection</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DefaultStyleCollection.System#Collections#IList#Clear">
            <summary>
            Not supported; calling this method throws an exception because the collection is read-only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DefaultStyleCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether the collection contains the specified NamedStyle object.
            </summary>
            <param name="value">
            NamedStyle object to check for in the collection.
            </param>
            <returns>
            True if the object is found in the collection; false otherwise.
            </returns>
        </member>
        <member name="M:FarPoint.Win.Spread.DefaultStyleCollection.Contains(FarPoint.Win.Spread.NamedStyle)">
            <summary>
            Determines whether the collection contains the specified style.
            </summary>
            <param name="style">
            Style (NamedStyle object) for which to check in the collection
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.DefaultStyleCollection.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Returns the index of the specified style. 
            </summary>
            <param name="value">
            Style (NamedStyle object) for which to search.
            </param>
            <returns>
            Index of the object in the collection, or -1 if the object was not found. 
            </returns>
        </member>
        <member name="M:FarPoint.Win.Spread.DefaultStyleCollection.IndexOf(FarPoint.Win.Spread.NamedStyle)">
            <summary>
            Returns the index of the specified NamedStyle object. 
            </summary>
            <param name="style">
            Style (NamedStyle object) for which to search
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.DefaultStyleCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Not supported; calling this method throws an exception because the collection is read-only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DefaultStyleCollection.System#Collections#IList#Remove(System.Object)">
            <summary>
            Not supported; calling this method throws an exception because the collection is read-only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DefaultStyleCollection.System#Collections#IList#RemoveAt(System.Int32)">
            <summary>
            Not supported; calling this method throws an exception because the collection is read-only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DefaultStyleCollection.Insert(System.Int32,FarPoint.Win.Spread.NamedStyle)">
            <summary>
            Not supported; calling this method throws an exception because the collection is read-only.
            </summary>
            <param name="index">Index at which to insert the style</param>
            <param name="style">Style (NamedStyle object) to insert in the collection</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DefaultStyleCollection.Remove(FarPoint.Win.Spread.NamedStyle)">
            <summary>
            Not supported; calling this method throws an exception because the collection is read-only.
            </summary>
            <param name="style">Style (NamedStyle object) to remove from the collection</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DefaultStyleCollection.GetEnumerator">
            <summary>
            Gets an IEnumerator object for enumerating through the NamedStyle objects
            in the collection.
            </summary>
            <returns>
            IEnumerator object for enumerating the styles in the collection
            </returns>
        </member>
        <member name="P:FarPoint.Win.Spread.DefaultStyleCollection.Count">
            <summary>
            Gets the number of NamedStyle objects in the collection.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DefaultStyleCollection.IsSynchronized">
            <summary>
            Gets whether access to the collection is synchronized.
            <para>(This implementation always returns false.)</para>
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DefaultStyleCollection.System#Collections#ICollection#SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the collection.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DefaultStyleCollection.SyncRoot">
            <summary>
            Gets a NamedStyleCollection object that can be used to 
            synchronize access to the collection. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DefaultStyleCollection.IsFixedSize">
            <summary>
            Gets whether the collection has a fixed size. 
            <para>(This implementation always returns false.)</para>
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DefaultStyleCollection.IsReadOnly">
            <summary>
            Gets whether the collection is read-only.
            <para>(This implementation always returns true.)</para>
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DefaultStyleCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the NamedStyle object at the specified index. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DefaultStyleCollection.Item(System.Int32)">
            <summary>
            Gets or sets the NamedStyle object at the specified index. 
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.StyleCollection">
            <summary>
            Collection of StyleInfo objects.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleCollection.#ctor">
            <summary>
            Constructs a new NamedStyleCollection object.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleCollection.Serialize(System.Xml.XmlTextWriter)">
            <summary>
            Saves the object to XML.
            </summary>
            <param name="w">
            XmlTextWriter object to save the object to.
            </param>
            <returns>True if successful; false otherwise.</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleCollection.Deserialize(System.Xml.XmlNodeReader)">
            <summary>
            Loads the object from XML.
            </summary>
            <param name="r">
            XmlNodeReader to load the object from.
            </param>
            <returns>True if successful; false otherwise.</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of the collection to an Array, starting 
            at a particular Array index.
            </summary>
            <param name="array">
            One-dimensional Array that is the destination of the 
            elements copied from ICollection. The Array must have 
            zero-based indexing.
            </param>
            <param name="index">
            Zero-based index in array at which copying begins.
            </param>
            <exception cref="T:System.ArgumentNullException">No array specified, or specified array is null (Nothing)</exception>
            <exception cref="T:System.ArgumentException">Specified array is invalid; must have a rank of one</exception>
            <exception cref="T:System.ArgumentException">Specified array is invalid; must have sufficient length</exception>
            <exception cref="T:System.IndexOutOfRangeException">Specified index is out of range; must be greater than zero</exception>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds a style (StyleInfo object) to the collection.
            </summary>
            <param name="value">
            StyleInfo object to add
            </param>
            <returns>
            Index of the element in the collection
            </returns>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleCollection.AddRange(FarPoint.Win.Spread.StyleInfo[])">
            <summary>
            Adds styles (an array of StyleInfo objects) to the collection.
            </summary>
            <param name="styles">Array of style objects to add</param>
            <exception cref="T:System.ArgumentNullException">
            No style specified or specified style is null
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleCollection.Add(FarPoint.Win.Spread.StyleInfo)">
            <summary>
            Adds a style (StyleInfo object) to the collection.
            </summary>
            <param name="style">StyleInfo object to add</param>
            <returns>Index of the element in the collection</returns>
            <exception cref="T:System.ArgumentNullException">
            No style specified or specified style is null
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleCollection.Clear">
            <summary>
            Removes all styles from the collection.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether the collection contains the specified object.
            </summary>
            <param name="value">
            Object for which to search
            </param>
            <returns>
            True if the object is found in the collection; false otherwise
            </returns>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleCollection.Contains(FarPoint.Win.Spread.StyleInfo)">
            <summary>
            Determines whether the collection contains the specified object.
            </summary>
            <param name="style">
            StyleInfo object for which to search
            </param>
            <returns>
            True if the object is found in the collection; false otherwise
            </returns>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleCollection.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Determines the index of the specified object in the collection.
            </summary>
            <param name="value">
            Object for which to search
            </param>
            <returns>
            Index of the object in the collection if found, or -1 if the object is not found
            </returns>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleCollection.IndexOf(FarPoint.Win.Spread.StyleInfo)">
            <summary>
            Determines the index of the specified StyleInfo object in the collection.
            </summary>
            <param name="style">
            StyleInfo object for which to search
            </param>
            <returns>
            Index of the object in the collection if found, or -1 if the object is not found
            </returns>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts an object into the collection at the specified index.
            </summary>
            <param name="index">
            Zero-based index at which value should be inserted
            </param>
            <param name="value">
            Object to insert into the collection
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleCollection.Insert(System.Int32,FarPoint.Win.Spread.StyleInfo)">
            <summary>
            Inserts a StyleInfo object into the collection at the specified index.
            </summary>
            <param name="index">
            Zero-based index at which value should be inserted
            </param>
            <param name="style">
            NamedStyle object to insert into the collection
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleCollection.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes the specified object from the collection.
            </summary>
            <param name="value">
            Object to remove
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleCollection.Remove(FarPoint.Win.Spread.StyleInfo)">
            <summary>
            Removes the specified NamedStyle object from the collection.
            </summary>
            <param name="style">
            NamedStyle object to remove
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleCollection.RemoveAt(System.Int32)">
            <summary>
            Removes an object from the collection at the specified index.
            </summary>
            <param name="index">
            Zero-based index of the item to be removed
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleCollection.GetEnumerator">
            <summary>
            Gets an IEnumerator object for enumerating the NamedStyle objects
            in the collection.
            </summary>
            <returns>
            Returns an IEnumerator object for enumerating the NamedStyle objects
            in the collection.
            </returns>
        </member>
        <member name="P:FarPoint.Win.Spread.StyleCollection.CanSerializeXml">
            <summary>
            Returns a value indicating whether any of the styles in the collection cannot
            be persisted in XML.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.StyleCollection.Count">
            <summary>
            Gets the number of StyleInfo objects in the collection.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.StyleCollection.IsSynchronized">
            <summary>
            Returns a value indicating whether access to the collection
            is synchronized (always returns false).
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.StyleCollection.System#Collections#ICollection#SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the collection.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.StyleCollection.SyncRoot">
            <summary>
            Gets a StyleCollection object that can be used to synchronize access to the collection.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.StyleCollection.IsFixedSize">
            <summary>
            Gets a value indicating whether the collection has a fixed size
            (always returns false).
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.StyleCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read-only
            (always returns false).
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.StyleCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the style (StyleInfo object) at the specified index. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.StyleCollection.Item(System.Int32)">
            <summary>
            Gets or sets the style (StyleInfo object) at the specified index. 
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.RowLayout">
            <summary>
            Class describes the location and height of a row.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.RowLayout.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.RowLayout.ContainsY(System.Int32)">
            <summary>
            Checks whether or not this row contains the specified
            point.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.RowLayout.Intersects(System.Drawing.Rectangle)">
            <summary>
            Checks whether or not this row interects with the
            specified rectangle.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.RowLayout.Row">
            <summary>
            Gets the row index.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.RowLayout.Y">
            <summary>
            Gets the y coordinate of the top of this row.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.RowLayout.Height">
            <summary>
            Gets the height of this row.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.Model.SheetSpanModelEventType">
            <summary>
            Specifies the type of Change event that has occurred for a span model for the sheet. 
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.Model.SheetSpanModelEventType.SpanAdded">
            <summary>
            Indicates that an individual span has been added
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.Model.SheetSpanModelEventType.SpanRemoved">
            <summary>
            Indicates that an individual span has been removed
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.Model.SheetSpanModelEventType.SpanUpdated">
            <summary>
            Indicates that an individual span has changed
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.Model.SheetSpanModelEventType.ModelUpdated">
            <summary>
            Indicates that the entire model has changed
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.Model.SheetSpanModelEventArgs">
            <summary>
            Represents the event data for the Changed event of the span model for the sheet. 
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SheetSpanModelEventArgs.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.Model.SheetSpanModelEventType)">
            <summary>
            Creates a new Changed event arguments object for the span model for the sheet.
            </summary>
            <param name="row">Row index</param>
            <param name="column">Column index</param>
            <param name="rowCount">Number of rows in the span</param>
            <param name="columnCount">Number of columns in the span</param>
            <param name="type">Type of change that occurred in the span model</param>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.SheetSpanModelEventArgs.Row">
            <summary>
            Gets the row index where the event occurred.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.SheetSpanModelEventArgs.Column">
            <summary>
            Gets the column index where the event occurred.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.SheetSpanModelEventArgs.RowCount">
            <summary>
            Gets the number of rows affected.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.SheetSpanModelEventArgs.ColumnCount">
            <summary>
            Gets the number of columns affected.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.SheetSpanModelEventArgs.Type">
            <summary>
            Gets the type of event that occurred.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.Model.SheetSpanModelEventHandler">
            <summary>
            Handles the Changed event in the span model of the sheet.
            </summary>
            <param name="sender">Object that raised the event</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="T:FarPoint.Win.Spread.Model.ISheetSpanModel">
            <summary>
            Interface that supports creating a model that represents cell spans. 
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.ISheetSpanModel.IsEmpty">
            <summary>
            Determines whether the model is empty of cell spans. 
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.ISheetSpanModel.GetEnumerator(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets an enumerator for iterating to the next cell span in the collection after the specified span. 
            </summary>
            <param name="row">Row index</param>
            <param name="column">Column index</param>
            <param name="rowCount">Number of rows in cell span</param>
            <param name="columnCount">Number of columns in cell span</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.ISheetSpanModel.Add(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds a cell span to the collection. 
            </summary>
            <param name="row">Row index at which to start span</param>
            <param name="column">Column index at which to start span</param>
            <param name="rowCount">Number of rows in span</param>
            <param name="columnCount">Number of columns in span</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.ISheetSpanModel.Remove(System.Int32,System.Int32)">
            <summary>
            Removes the cell span with the specified anchor cell from the collection. 
            </summary>
            <param name="row">Row index of anchor cell for span (at which spanned cells started) </param>
            <param name="column">Column index of anchor cell for span (at which spanned cells started) </param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.ISheetSpanModel.Find(System.Int32,System.Int32)">
            <summary>
            Finds the cell span with the specified anchor cell in the collection. 
            </summary>
            <param name="row">Row index of anchor cell for span (at which spanned cells started)</param>
            <param name="column">Column index of anchor cell for span (at which spanned cells started)</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.ISheetSpanModel.Clear">
            <summary>
            Removes all cell spans from the collection.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.Model.ISheetSpanModel.Changed">
            <summary>
            Occurs when the span model has changed.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.Model.BaseSheetSpanModel">
            <summary>
            Represents the partial (abstract) implementation of the ISheetSpanModel interface 
            for a span model for a sheet. 
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.BaseSheetSpanModel.IsEmpty">
            <summary>
            Determines whether the model is empty of cell spans. 
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.BaseSheetSpanModel.GetEnumerator(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the next cell span in the collection. 
            </summary>
            <param name="row">Row index</param>
            <param name="column">Column index</param>
            <param name="rowCount">Number of rows in cell span</param>
            <param name="columnCount">Number of columns in cell span</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.BaseSheetSpanModel.Add(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds a cell span to the collection. 
            </summary>
            <param name="row">Row index at which to start span</param>
            <param name="column">Column index at which to start span</param>
            <param name="rowCount">Number of rows in span</param>
            <param name="columnCount">Number of columns in span</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.BaseSheetSpanModel.Remove(System.Int32,System.Int32)">
            <summary>
            Removes all cell spans in the collection that cover the cell
            at the specified row and column. 
            </summary>
            <param name="row">Row index of cell</param>
            <param name="column">Column index of cell</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.BaseSheetSpanModel.Find(System.Int32,System.Int32)">
            <summary>
            Finds the cell span in the collection that includes the cell
            at the specified row and column. 
            </summary>
            <param name="row">Row index of cell</param>
            <param name="column">Column index of cell</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.BaseSheetSpanModel.Clear">
            <summary>
            Removes all cell spans from the collection.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.BaseSheetSpanModel.OnChanged(FarPoint.Win.Spread.Model.SheetSpanModelEventArgs)">
            <summary>
            Returns information about the event that was raised. 
            </summary>
            <param name="e">SheetSpanModelEventArgs object that contains event data</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.BaseSheetSpanModel.FireChanged(System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.Model.SheetSpanModelEventType)">
            <summary>
            Returns information about cell span that has changed. 
            </summary>
            <param name="row">Row index</param>
            <param name="column">Column index</param>
            <param name="rowCount">Number of rows in span</param>
            <param name="columnCount">Number of columns in span</param>
            <param name="type">Returns the type of event that was raised</param>
        </member>
        <member name="E:FarPoint.Win.Spread.Model.BaseSheetSpanModel.Changed">
            <summary>
            Occurs when the user makes a change to the model 
            that affects the span of cells of the sheet.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.BaseSheetSpanModel.NullEnumerator.#ctor">
            <summary>
            NullEnumerator: Internal Use Only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.BaseSheetSpanModel.NullEnumerator.MoveNext">
            <summary>
            MoveNext: Internal Use Only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.BaseSheetSpanModel.NullEnumerator.Reset">
            <summary>
            Reset: Internal Use Only.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.BaseSheetSpanModel.NullEnumerator.Current">
            <summary>
            Current: Internal Use Only.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.Model.DefaultSheetSpanModel">
            <summary>
            Represents the full (concrete) implementation of the ISheetSpanModel interface for a span model for a sheet, 
            which represents cell spans.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSpanModel.#ctor">
            <summary>
            Creates a default span model.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSpanModel.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a default span model from deserialization.
            </summary>
            <param name="info">SerializationInfo</param>
            <param name="c">StreamingContext</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSpanModel.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates the SerializationInfo class with information about 
            the default sheet span model settings.
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contextual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSpanModel.IsEmpty">
            <summary>
            Determines whether the model is empty of cell spans.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSpanModel.GetEnumerator(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets an enumerator for iterating to the next cell span in the collection after the specified span. 
            </summary>
            <param name="row">Row index</param>
            <param name="column">Column index</param>
            <param name="rowCount">Number of rows in span</param>
            <param name="columnCount">Number of columns in span</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSpanModel.GetEnumerator">
            <summary>
            Gets an enumerator for iterating to the next cell span in the collection.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSpanModel.Add(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds a cell span to the collection.
            </summary>
            <param name="row">Row index of cell at which to start span</param>
            <param name="column">Column index of cell at which to start span</param>
            <param name="rowCount">Number of rows in span</param>
            <param name="columnCount">Number of columns in span</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSpanModel.Clear">
            <summary>
            Removes all cell spans from the collection.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSpanModel.Find(System.Int32,System.Int32)">
            <summary>
            Finds the cell span in the collection that includes the cell at specified row and column.
            </summary>
            <param name="row">Row index of the cell</param>
            <param name="column">Column index of the cell</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSpanModel.Remove(System.Int32,System.Int32)">
            <summary>
            Removes all cell spans in the collection that include the cell at the specified row and column.
            </summary>
            <param name="row">Row index of the cell</param>
            <param name="column">Column index of the cell</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSpanModel.FarPoint#Win#Spread#Model#IRangeSupport#AddRows(System.Int32,System.Int32)">
            <summary>
            This IRangeSupport method is used internally by Spread to
            keep the row and column counts in sync between the models
            and is not intended to be called directly from your code.
            Use the IRangeSupport methods in the data model, or the
            wrapper methods in the SheetView instead.
            </summary>
            <param name="row">Row index at which to start adding rows</param>
            <param name="count">Number of rows to add to the span</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSpanModel.FarPoint#Win#Spread#Model#IRangeSupport#AddColumns(System.Int32,System.Int32)">
            <summary>
            This IRangeSupport method is used internally by Spread to
            keep the row and column counts in sync between the models
            and is not intended to be called directly from your code.
            Use the IRangeSupport methods in the data model, or the
            wrapper methods in the SheetView instead.
            </summary>
            <param name="column">Column index at which to start adding columns</param>
            <param name="count">Number of columns to add to the span</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSpanModel.FarPoint#Win#Spread#Model#IRangeSupport#RemoveRows(System.Int32,System.Int32)">
            <summary>
            This IRangeSupport method is used internally by Spread to
            keep the row and column counts in sync between the models
            and is not intended to be called directly from your code.
            Use the IRangeSupport methods in the data model, or the
            wrapper methods in the SheetView instead.
            </summary>
            <param name="row">Row index at which to start removing rows</param>
            <param name="count">Number of rows to remove from the cell span</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSpanModel.FarPoint#Win#Spread#Model#IRangeSupport#RemoveColumns(System.Int32,System.Int32)">
            <summary>
            This IRangeSupport method is used internally by Spread to
            keep the row and column counts in sync between the models
            and is not intended to be called directly from your code.
            Use the IRangeSupport methods in the data model, or the
            wrapper methods in the SheetView instead.
            </summary>
            <param name="column">Column index at which to start removing columns</param>
            <param name="count">Number of columns to remove from the cell span</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSpanModel.MoveRows(System.Int32,System.Int32,System.Int32)">
            <summary>
            Moves rows and pastes them at the specified location.
            </summary>
            <param name="fromRow">Row index at which to start move</param>
            <param name="toRow">Row index at which to paste rows</param>
            <param name="count">Number of rows to move</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSpanModel.MoveColumns(System.Int32,System.Int32,System.Int32)">
            <summary>
            Moves columns and pastes them at the specified location. 
            </summary>
            <param name="fromColumn">Column index at which to start move</param>
            <param name="toColumn">Column index at which to paste columns</param>
            <param name="count">Number of columns to move</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSpanModel.CopyRows(System.Int32,System.Int32,System.Int32)">
            <summary>
            Copies rows and pastes them at the specified location.
            </summary>
            <param name="fromRow">Row index at which to start copying</param>
            <param name="toRow">Row index at which to paste columns</param>
            <param name="count">Number of rows to copy</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSpanModel.CopyColumns(System.Int32,System.Int32,System.Int32)">
            <summary>
            Copies columns and pastes them at the specified location.
            </summary>
            <param name="fromColumn">Column index at which to start copying</param>
            <param name="toColumn">Column index at which to paste columns</param>
            <param name="count">Number of columns to copy</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSpanModel.SwapRows(System.Int32,System.Int32,System.Int32)">
            <summary>
            Swaps the a range of rows with another range of rows.
            </summary>
            <param name="fromRow">Row index at which to start swap</param>
            <param name="toRow">Row index at which to swap rows</param>
            <param name="count">Number of rows to swap</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSpanModel.SwapColumns(System.Int32,System.Int32,System.Int32)">
            <summary>
            Swaps the a range of columns with another range of columns.
            </summary>
            <param name="fromColumn">Column index at which to start swap</param>
            <param name="toColumn">Column index at which to swap columns</param>
            <param name="count">Number of columns to swap</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSpanModel.Clear(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Removes cell spans from the collection within the specified area. 
            </summary>
            <param name="row">Row index from which to start clearing cell spans</param>
            <param name="column">Column index from which to start clearing cell spans</param>
            <param name="rowCount">Number of rows to clear</param>
            <param name="columnCount">Number of columns to clear</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSpanModel.Copy(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Copies a cell span and pastes it at the specified location.
            </summary>
            <param name="fromRow">Row index from which to begin copying</param>
            <param name="fromColumn">Column index from which to begin copying</param>
            <param name="toRow">Row index at which to paste cell span</param>
            <param name="toColumn">Column index at which to paste cell span</param>
            <param name="rowCount">Number of rows to copy</param>
            <param name="columnCount">Number of columns to copy</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSpanModel.Move(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Moves a cell span and pastes it at the specified location.
            </summary>
            <param name="fromRow">Row index from which to begin the move</param>
            <param name="fromColumn">Column index from which to begin the move</param>
            <param name="toRow">Row index at which to paste cell span</param>
            <param name="toColumn">Column index at which to paste cell span</param>
            <param name="rowCount">Number of rows to move</param>
            <param name="columnCount">Number of columns to move</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSpanModel.Swap(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Swaps cell spans. 
            </summary>
            <param name="fromRow">Row index from which to begin swap</param>
            <param name="fromColumn">Column index from which to begin swap</param>
            <param name="toRow">Row index at which to get cell span to swap</param>
            <param name="toColumn">Column index at which to get cell span to swap</param>
            <param name="rowCount">Number of rows to swap</param>
            <param name="columnCount">Number of columns to swap</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSpanModel.Serialize(System.Xml.XmlTextWriter)">
            Serializes the public properties and fields of the DefaultSheetSpanModel object. 
            <summary>
            Saves the span object to XML.
            </summary>
            <param name="w">XmlTextWriter object to which to save the object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSpanModel.Deserialize(System.Xml.XmlNodeReader)">
            <summary>
            Loads the span object from XML.
            </summary>
            <param name="r">XmlNodeReader from which to load the object</param>
        </member>
        <member name="T:FarPoint.Win.Spread.DataFieldConverter">
            <summary>
            Provides a drop-down list of data fields for the DataField property 
            of a Column object in the Properties window.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DataFieldConverter.GetDataSource(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns the data source object to display field names
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Spread.DataFieldConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Retrieves the set of standard values for this type.
            </summary>
            <param name="context">Context information, such as column or container</param>
            <returns>Set of standard values</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.DataFieldConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Determines whether this object supports standard values.
            </summary>
            <param name="context">Context information</param>
            <returns>True if this object supports standard values; false otherwise</returns>
        </member>
        <member name="T:FarPoint.Win.Spread.DrawingSpace.ShapeProps">
            <summary>
            Represents the shape properties.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.DrawingSpace.ShapeProps.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.ShapeProps.#ctor">
            <summary>
            Creates a new set of shape properties.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.ShapeProps.#ctor(System.Windows.Forms.Control)">
            <summary>
            Creates a new set of shape properties for the specified control.
            </summary>
            <param name="control">Control</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.ShapeProps.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.ShapeProps.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.ShapeProps.Shape">
            <summary>
            Gets or sets the shape.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.PrintAbortDialog">
            <summary>
            Summary description for PrintAbortDialog.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.PrintAbortDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.PrintAbortDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.PrintAbortDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.ExcelFileOperations.VerifyFile(System.String)">
            <summary>
            Verify the file exists and can be openned.
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Spread.ExcelFileOperations.IsExcelFile(System.String)">
            <summary>
            IsExcelFile
            </summary>
            <param name="fileName"></param>
            <exception cref="!:FileNotFound"></exception> 
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Spread.ExcelFileOperations.OpenExcel(System.String,System.IO.Stream,System.Int32,System.String,System.Int32,System.String,FarPoint.Excel.ExcelOpenFlags,FarPoint.Excel.ExcelWarningList)">
            <summary>
            Open an Excel file - intended for internal use
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.ExcelFileOperations.GetExcelSheetNames(System.String)">
            <summary>
            Gets an array of sheet names from the specified Excel file.
            </summary>
            <param name="fileName">Path and filename of Excel file.</param>
            <returns>Returns a string array containing the names of the Excel sheets in the specified Excel file.</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.ExcelFileOperations.SaveExcel(System.String,FarPoint.Win.Spread.Model.IncludeHeaders,FarPoint.Excel.ExcelWarningList)">
            <summary>
            Saves the contents of the Spread control to the specified Excel file.
            </summary>
            <param name="fileName">Path and file name of file to save</param>
            <param name="includeHeaders">Specifies the headers to be exported as data</param>
            <param name="warningList">Warning messages</param>
            <returns>True if successful; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.ExcelFileOperations.SaveExcel(System.String,System.IO.Stream,FarPoint.Win.Spread.Model.IncludeHeaders,FarPoint.Excel.ExcelWarningList)">
            <summary>
            Saves the contents of the Spread control to the specified Excel file.
            </summary>
            <param name="fileName"></param>
            <param name="stream"></param>
            <param name="includeHeaders"></param>
            <param name="warningList"></param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Spread.ExcelFileOperations.SaveExcel(System.String,FarPoint.Excel.ExcelSaveFlags,FarPoint.Excel.ExcelWarningList)">
            <summary>
            Saves the contents of the Spread control to the specified Excel file.
            </summary>
            <param name="fileName">Path and file name of file to save</param>
            <param name="saveFlags">Flags to specify Spread elements to include or exlude from the save</param>
            <param name="warningList">Warning messages</param>
            <returns>True if successful; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.ExcelFileOperations.SaveExcel(System.String,System.IO.Stream,FarPoint.Excel.ExcelSaveFlags,FarPoint.Excel.ExcelWarningList)">
            <summary>
            Saves the contents of the Spread control to the specified Excel file.
            </summary>
            <param name="fileName">Path and file name of file to save</param>
            <param name="stream">Stream to save</param>
            <param name="saveFlags">Flags to specify Spread elements to include or exlude from the save</param>
            <param name="warningList">Warning messages</param>
            <returns>True if successful; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.ExcelFileOperations.IsExcelStream(System.IO.Stream)">
            <summary>
            IsExcelStream
            </summary>
            <param name="stream"></param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Spread.ExcelFileOperations.GetExcelSheetNames(System.IO.Stream)">
            <summary>
            Gets an array of sheet names from the specified Excel file.
            </summary>
            <param name="stream">Stream to get the sheet names from</param>
            <returns>Returns a string array containing the names of the Excel sheets in the specified Excel file.</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.ExcelFileOperations.SaveExcel(System.IO.Stream,FarPoint.Excel.ExcelSaveFlags,FarPoint.Excel.ExcelWarningList)">
            <summary>
            Saves the contents of the Spread control to the specified Excel file.
            </summary>
            <param name="stream"></param>
            <param name="saveFlags"></param>
            <param name="warningList"></param>
            <returns></returns>
        </member>
        <member name="T:FarPoint.Win.Spread.Excel">
            <summary>
            Excel class
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.IParseFormatHandler">
            <summary>
            ParseFormat interface
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.#ctor(FarPoint.Win.Spread.FpSpread)">
            <summary>
            Excel - constructor
            </summary>
            <param name="spread"></param>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.#ctor(FarPoint.Win.Spread.SheetView)">
            <summary>
            Excel - constructor
            </summary>
            <param name="sheet"></param>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.Finish">
            <summary>
            Finish - called from the Excel namespace after completion of the Load or Save.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.Open(System.String,System.Int32,System.Int32,FarPoint.Excel.ExcelOpenFlags)">
            <summary>
            Opens the specified parts of the spreadsheet in the specified file at the specified sheet.
            </summary>
            <param name="fileName">File name</param>
            <param name="spreadSheetIndex">Sheet index of Spread sheet</param>
            <param name="excelSheetIndex">Sheet index of Excel BIFF formatted file</param>
            <param name="openFlags">Flags specifying which parts to load</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.GetSheetNames(System.String)">
            <summary>
            Gets the names of the sheets in the Excel BIFF formatted file.
            </summary>
            <param name="fileName">File name</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.Save(System.String)">
            <summary>
            Saves to an Excel BIFF formatted file.
            </summary>
            <param name="fileName">File name</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.Save(System.String,FarPoint.Excel.ExcelSaveFlags)">
            <summary>
            Saves to an Excel BIFF formatted file the specified parts.
            </summary>
            <param name="fileName">File name</param>
            <param name="saveFlags">Which parts of the spreadsheet to save</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.IsExcelStream(System.IO.Stream)">
            <summary>
            Determines whether the stream is Excel BIFF formatted.
            </summary>
            <param name="stream">Stream</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.Open(System.IO.Stream,System.Int32,System.Int32,FarPoint.Excel.ExcelOpenFlags)">
            <summary>
            Opens the specified stream.
            </summary>
            <param name="stream">Stream</param>
            <param name="spreadSheetIndex">Sheet index of Spread sheet</param>
            <param name="excelSheetIndex">Sheet index of Excel BIFF formatted file</param>
            <param name="openFlags">Flags specifying which parts to load</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.GetSheetNames(System.IO.Stream)">
            <summary>
            Gets the names of the sheets from the specified stream.
            </summary>
            <param name="stream">Specified stream</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.Save(System.IO.Stream)">
            <summary>
            Saves to an Excel BIFF formatted stream.
            </summary>
            <param name="stream">Stream</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.Save(System.IO.Stream,FarPoint.Excel.ExcelSaveFlags)">
            <summary>
            Saves to an Excel BIFF formatted stream the specified parts.
            </summary>
            <param name="stream">Stream</param>
            <param name="saveFlags">Specified parts to save</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelSet1904(System.Boolean)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelSetExternName(System.String)">
            <summary>
            Internal use only.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelSetConditionalFormat(System.Int16,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Byte,FarPoint.Excel.IExcelXF,System.Boolean,System.Drawing.FontStyle,System.Int32,System.Int32,System.Byte[],System.Byte[])">
            <summary>
            Internal use only.
            </summary>
            <param name="sheet"></param>
            <param name="firstRows"></param>
            <param name="lastRows"></param>
            <param name="firstCols"></param>
            <param name="lastCols"></param>
            <param name="comparisonOperator"></param>
            <param name="xf"></param>
            <param name="isFontSet"></param>
            <param name="fontStyle"></param>
            <param name="fontHeight"></param>
            <param name="patternStyle"></param>
            <param name="firstCondition"></param>
            <param name="lastCondition"></param>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelSetCustomNames(System.Int16,System.Collections.ArrayList)">
            <summary>
            Internal use only.
            </summary>
            <param name="sheet"></param>
            <param name="customNameList"></param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelSetSaveExtLinks(System.Boolean)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelAddSheet(System.String,System.Byte)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelSetCalcCount(System.Int16,System.Int32)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelSetCalcMode(System.Int16,System.Int16)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelSetHeader(System.Int16,System.String)">
            <summary>
            Internal use only.
            </summary>
            <param name="sheet"></param>
            <param name="header"></param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelSetFooter(System.Int16,System.String)">
            <summary>
            Internal use only.
            </summary>
            <param name="sheet"></param>
            <param name="footer"></param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelSetRowPageBreaks(System.Int16,System.Int32[])">
            <summary>
            Internal use only.
            </summary>
            <param name="sheet"></param>
            <param name="pageBreaks"></param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelSetColumnPageBreaks(System.Int16,System.Int32[])">
            <summary>
            Internal use only.
            </summary>
            <param name="sheet"></param>
            <param name="pageBreaks"></param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelSetLeftMargin(System.Int16,System.Double)">
            <summary>
            Internal use only.
            </summary>
            <param name="sheet"></param>
            <param name="margin"></param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelSetTopMargin(System.Int16,System.Double)">
            <summary>
            Internal use only.
            </summary>
            <param name="sheet"></param>
            <param name="margin"></param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelSetRightMargin(System.Int16,System.Double)">
            <summary>
            Internal use only.
            </summary>
            <param name="sheet"></param>
            <param name="margin"></param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelSetBottomMargin(System.Int16,System.Double)">
            <summary>
            Internal use only.
            </summary>
            <param name="sheet"></param>
            <param name="margin"></param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelSetPrintGridlines(System.Int16,System.Boolean)">
            <summary>
            Internal use only.
            </summary>
            <param name="sheet"></param>
            <param name="printGridlines"></param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelSetPrintHeaders(System.Int16,System.Boolean)">
            <summary>
            Internal use only.
            </summary>
            <param name="sheet"></param>
            <param name="printHeaders"></param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelSetPageSetup(System.Int16,System.Int16,System.Int16,System.Int16,System.Int16,System.Int16,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int16,System.Int16,System.Double,System.Double,System.Int16)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelGetCommentObjId">
            <summary>
            Internal use only.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelSetCommentObjId(System.Int16)">
            <summary>
            Internal use only.
            </summary>
            <param name="objId"></param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelSetProtect(System.Int16,System.Boolean)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelSetWindow(System.Int16,System.Int16,System.Int16,System.Int16,System.Boolean,System.Boolean)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelSetTabs(System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelSetScroll(System.Boolean,System.Boolean)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelBof(System.Int16)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelSetCellFormat(System.Int16,System.Int32,System.Int32,System.Int32,System.Type)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelSetCellNote(System.Int16,System.Int32,System.Int32,System.String)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelSetCellValue(System.Int16,System.Int32,System.Int32,System.Object)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelSetCellFormula(System.Int16,System.Int32,System.Int32,System.IO.BinaryReader,System.IO.BinaryReader,System.Int32,System.Int32)">
            <summary>
            Internal use only.
            </summary>
            <param name="sheet"></param>
            <param name="row"></param>
            <param name="col"></param>
            <param name="rdr"></param>
            <param name="rdrExtra"></param>
            <param name="rowFirst"></param>
            <param name="colFirst"></param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelSetColInfo(System.Int16,System.Int16,System.Int16,System.Int16,System.Int32,System.Boolean,System.Byte,System.Boolean,System.Boolean)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelSetDefColWidth(System.Int16,System.Int16)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelSetDefaultRowHeight(System.Int16,System.Int16)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelSetDelta(System.Int16,System.Double)">
            <summary>
            Internal use only.
            </summary>
            <param name="sheet"></param>
            <param name="delta"></param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelSetDimensions(System.Int16,System.Int32,System.Int32,System.Int16,System.Int16)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelSetDisplayElements(System.Int16,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelSetIteration(System.Int16,System.Int16)">
            <summary>
            Internal use only.
            </summary>
            <param name="sheet"></param>
            <param name="iteration"></param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelSetMergeCells(System.Int16,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelSetPageSetup(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Double,System.Double,System.Int32)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelSetRefMode(System.Int16,System.Int32)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelSetRowColGridColor(System.Int16,System.Drawing.Color)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelSetRowInfo(System.Int16,System.Int32,System.Int32,System.Int32,System.Int16,System.Int32,System.Byte,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelSetSelection(System.Int16,System.Byte,System.Int32,System.Int32,System.Int32,System.Collections.ArrayList,System.Collections.ArrayList,System.Collections.ArrayList,System.Collections.ArrayList)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelSetTopLeft(System.Int16,System.Int32,System.Int32)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelSetVCenter(System.Int16,System.Boolean)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelSetWindow(System.Drawing.Rectangle,System.Boolean,System.Boolean)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelSetXF(FarPoint.Excel.IExcelXF)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelGetDefaultRowHeight(System.Int16,System.Double@)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelSetDefaultRowHeight(System.Int16,System.Double)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelGetDefColWidth(System.Int16,System.Double@)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelSetDefColWidth(System.Int16,System.Double)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelSetXF(FarPoint.Excel.IExcelXF,System.String)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelGetAxisInfoXml(System.Int16,System.Collections.ArrayList,System.Collections.ArrayList,System.Collections.ArrayList,System.Collections.ArrayList,System.Collections.ArrayList,System.Boolean)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelSetColInfo(System.Int16,System.Int16,System.Int16,System.String,System.Double,System.Boolean,System.Byte,System.Boolean)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelSetRowInfo(System.Int16,System.Int32,System.Int32,System.Int32,System.String,System.Double,System.Byte,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelSetCellFormat(System.Int16,System.Int32,System.Int32,System.String,System.Type)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelSetVisible(System.Int16,System.Boolean)">
            <summary>
            Internal use only.
            </summary>
            <param name="sheet"></param>
            <param name="isSheetVisible"></param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelSetCustomNames(System.Int16,System.Collections.ArrayList,System.Collections.ArrayList)">
            <summary>
            Internal use only.
            </summary>
            <param name="sheet"></param>
            <param name="customNameList"></param>
            <param name="customNameDefinitionList"></param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelGetCellFormula(System.Int16,System.Int32,System.Int32,System.Object)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelGetExternSheetInfo(System.Collections.ArrayList)">
            <summary>
            Internal use only.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelGetCalcMode(System.Int16,System.Int16@)">
            <summary>
            Internal use only.
            </summary>
            <param name="sheet"></param>
            <param name="autoRecalc"></param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelGetCellInfo(System.Int16,System.Collections.ArrayList,System.Collections.ArrayList,System.Collections.ArrayList,System.Collections.ArrayList)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelGetAxisInfo(System.Int16,System.Collections.ArrayList,System.Collections.ArrayList,System.Collections.ArrayList,System.Collections.ArrayList,System.Collections.ArrayList,System.Boolean)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelGetConditionalFormats(System.Int16,System.Int32[]@,System.Int32[]@,System.Collections.ArrayList[]@,System.Collections.ArrayList[]@,System.Collections.ArrayList[]@,System.Collections.ArrayList[]@)">
            <summary>
            Internal use only.
            </summary>
            <param name="sheet"></param>
            <param name="rows"></param>
            <param name="columns"></param>
            <param name="xfLists"></param>
            <param name="firstConditionLists"></param>
            <param name="lastConditionLists"></param>
            <param name="opLists"></param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelGetCalcCount(System.Int16,System.Int16@)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelGetDelta(System.Int16,System.Double@)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelGetDefaultRowHeight(System.Int16,System.Int16@)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelGetDefColWidth(System.Int16,System.Int16@)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelGetDimensions(System.Int16,System.Int32@,System.Int32@)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelGetDisplayElements(System.Int16,System.Boolean@,System.Boolean@,System.Boolean@,System.Boolean@)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelGetExternNames(System.Collections.ArrayList)">
            <summary>
            Internal use only.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelGetFontInfo(System.Boolean@)">
            <summary>
            Internal use only.
            </summary>
            <param name="getDefaultFontNameFromResource"></param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelGetFormats(System.Collections.ArrayList)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelGetIteration(System.Int16,System.Int16@)">
            <summary>
            Internal use only.
            </summary>
            <param name="sheet"></param>
            <param name="iteration"></param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelGetIterationCount(System.Int16,System.Int32@)">
            <summary>
            Internal use only.
            </summary>
            <param name="sheet"></param>
            <param name="iterCount"></param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.FindModifiedCells(FarPoint.Win.Spread.Model.ISheetStyleModel,FarPoint.Win.Spread.Model.ISheetDataModel,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Internal use only.
            </summary>
            <param name="styleModel"></param>
            <param name="dataModel"></param>
            <param name="sheetIndex"></param>
            <param name="modelsRowCount"></param>
            <param name="modelsColCount"></param>
            <param name="startingRow"></param>
            <param name="startingColumn"></param>
            <param name="firstRowToWrite"></param>
            <param name="firstColToWrite"></param>
            <param name="isRowHeader"></param>
            <param name="isColumnHeader"></param>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelGetMergeCells(System.Int16,System.Int16@,System.Collections.ArrayList,System.Collections.ArrayList,System.Collections.ArrayList,System.Collections.ArrayList)">
            <summary>
            Internal use only.
            </summary>
            <param name="sheetIndex"></param>
            <param name="count"></param>
            <param name="rowFirsts"></param>
            <param name="rowLasts"></param>
            <param name="colFirsts"></param>
            <param name="colLasts"></param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.GetCustomNames">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelGetNames(System.Collections.ArrayList,System.Collections.ArrayList,System.Collections.ArrayList,System.Boolean)">
            <summary>
            Internal use only.
            </summary>
            <param name="names"></param>
            <param name="definitions"></param>
            <param name="uniqueSheets"></param>
            <param name="haveExternNames"></param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelGetRefMode(System.Int16,System.Int32@)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelGetRowColGridColor(System.Int16)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelGetSelectionList(System.Int16,System.Collections.ArrayList,System.Drawing.Point@,System.Byte@)">
            <summary>
            Internal use only.
            </summary>
            <param name="sheet"></param>
            <param name="selectionList"></param>
            <param name="activeCell"></param>
            <param name="paneIndex"></param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelGetProtect(System.Int16,System.Boolean@)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelGetSheetCount(System.Int16@)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelGetSheetInfo(System.Int16,System.Boolean@)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelGetTopLeft(System.Int16,System.Int32@,System.Int32@)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelGetWindow(System.Drawing.Rectangle,System.Boolean@,System.Boolean@)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelGetTabs(System.Boolean@,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelGetScroll(System.Boolean@,System.Boolean@)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelGetFooter(System.Int16,System.Text.StringBuilder)">
            <summary>
            ExcelGetFooter: Internal Uset Only.
            </summary>
            <param name="sheet"></param>
            <param name="footer"></param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelGetHeader(System.Int16,System.Text.StringBuilder)">
            <summary>
            ExcelGetHeader: Internal Use Only.
            </summary>
            <param name="sheet"></param>
            <param name="header"></param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelGetRowPageBreaks(System.Int16,System.Collections.ArrayList)">
            <summary>
            ExcelGetRowPageBreaks - Internal Use Only
            </summary>
            <param name="sheet"></param>
            <param name="pageBreaks"></param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelGetColumnPageBreaks(System.Int16,System.Collections.ArrayList)">
            <summary>
            ExcelGetColumnPageBreaks - Internal Use Only
            </summary>
            <param name="sheet"></param>
            <param name="pageBreaks"></param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelGetLeftMargin(System.Int16,System.Double@)">
            <summary>
            Internal use only.
            </summary>
            <param name="sheet"></param>
            <param name="margin"></param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelGetTopMargin(System.Int16,System.Double@)">
            <summary>
            Internal use only.
            </summary>
            <param name="sheet"></param>
            <param name="margin"></param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelGetRightMargin(System.Int16,System.Double@)">
            <summary>
            Internal use only.
            </summary>
            <param name="sheet"></param>
            <param name="margin"></param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelGetBottomMargin(System.Int16,System.Double@)">
            <summary>
            Internal use only.
            </summary>
            <param name="sheet"></param>
            <param name="margin"></param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelGetPrintGridlines(System.Int16,System.Boolean@)">
            <summary>
            ExcelGetPrintGridlines: Internal Uset Only.
            </summary>
            <param name="sheet"></param>
            <param name="print"></param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelGetPrintHeaders(System.Int16,System.Boolean@)">
            <summary>
            ExcelGetPrintHeaders: Internal Uset Only.
            </summary>
            <param name="sheet"></param>
            <param name="print"></param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelGetPageSetup(System.Int16,System.Int16@,System.Int16@,System.Int16@,System.Int16@,System.Int16@,System.Boolean@,System.Boolean@,System.Boolean@,System.Boolean@,System.Boolean@,System.Boolean@,System.Boolean@,System.Boolean@,System.Int16@,System.Int16@,System.Double@,System.Double@,System.Int16@)">
            <summary>
            ExcelGetPageSetup: Internal Uset Only.
            </summary>
            <param name="sheet"></param>
            <param name="paperSize"></param>
            <param name="scale"></param>
            <param name="pageStart"></param>
            <param name="fitWidth"></param>
            <param name="fitHeight"></param>
            <param name="leftToRight"></param>
            <param name="isPortrait"></param>
            <param name="noPls"></param>
            <param name="noColor"></param>
            <param name="draft"></param>
            <param name="notes"></param>
            <param name="noOrient"></param>
            <param name="usePage"></param>
            <param name="printRes"></param>
            <param name="vertPrintRes"></param>
            <param name="numHdr"></param>
            <param name="numFtr"></param>
            <param name="copies"></param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.SetFormatType(FarPoint.Excel.FormatType,System.Object)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ExcelSetCell(System.Int16,System.Int32,System.Int32,System.Object)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.FindStyleInList(FarPoint.Win.Spread.StyleInfo)">
            <summary>
            FindStyleInList
            </summary>
            <param name="style"></param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.AreStylesEqual(FarPoint.Win.Spread.StyleInfo,FarPoint.Win.Spread.StyleInfo,System.Boolean,System.Drawing.Color,System.Drawing.Color,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String)">
            <summary>
            Determines whether the style settings of this object are equivalent to the object specified.
            </summary>
            <param name="s1"></param>
            <param name="s2"></param>
            <returns></returns>
        </member>
        <member name="P:FarPoint.Win.Spread.Excel.SaveFlags">
            <summary>
            Gets or sets the flags for specifying what parts of the spreadsheet to save to a file.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Excel.OpenFlags">
            <summary>
            Gets or sets the flags for specifying what parts of the spreadsheet to open.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Excel.ColInfo.#ctor(System.Int16,System.Int16,System.Int16,System.Int32,System.Boolean,System.Byte,System.Boolean)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.CellInfoRange">
            <summary>
            Represents a two-dimensional collection of CellInfo objects.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellInfoRange.Item(System.Int32,System.Int32)">
            <summary>
            Gets or sets a CellInfo object for the row and column specified.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellInfoRange.ReferenceStyle">
            <summary>
            Gets and sets the ReferenceStyle for the CellInfo object Formulas.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellInfoRange.RowCount">
            <summary>
            Gets the number of rows in the two-dimensional collection.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellInfoRange.ColumnCount">
            <summary>
            Gets the number of columns in the two-dimensional collection.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellInfoRange.ColumnHeader">
            <summary>
            Gets or sets the CellInfoRange for the column header cells
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellInfoRange.RowHeader">
            <summary>
            Gets or sets the CellInfoRange for the row header cells
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.CellInfo">
            <summary>
            Represents the value and formatting for a cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellInfo.#ctor(System.Object,FarPoint.Win.Spread.StyleInfo,System.String,System.String,System.Object,System.Int32,System.Int32,System.String,System.IFormatProvider,FarPoint.Win.Spread.SheetView,System.Int32,System.Int32)">
            <summary>
            Creates a new a set of cell information (CellInfo object).
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellInfo.#ctor(System.Object,FarPoint.Win.Spread.StyleInfo,System.String,System.String,System.Object,System.Int32,System.Int32,System.String,System.IFormatProvider,FarPoint.Win.Spread.SheetView)">
            <summary>
            Creates a new a set of cell information (CellInfo object).
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellInfo.#ctor(System.Object)">
            <summary>
            Creates a new a set of cell information (CellInfo object) with a value.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellInfo.#ctor(System.Object,FarPoint.Win.Spread.StyleInfo)">
            <summary>
            Creates a new a set of cell information (CellInfo object) with a value and style information.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellInfo.#ctor(System.Object,FarPoint.Win.Spread.StyleInfo,System.String)">
            <summary>
            Creates a new a set of cell information (CellInfo object) with a value, style information, 
            and a formula.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellInfo.#ctor(System.Object,FarPoint.Win.Spread.StyleInfo,System.String,System.String)">
            <summary>
            Creates a new a set of cell information (CellInfo object) with a value, style information, 
            a formula, and a note.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellInfo.#ctor(System.Object,FarPoint.Win.Spread.StyleInfo,System.String,System.String,System.Object)">
            <summary>
            Creates a new a set of cell information (CellInfo object) with a value, style information, 
            a formula, a note and a tag.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellInfo.#ctor(System.Object,FarPoint.Win.Spread.StyleInfo,System.String,System.String,System.Object,System.Int32,System.Int32)">
            <summary>
            Creates a new a set of cell information (CellInfo object) with a value, style information, 
            a formula, a note, a tag, a row index and a column index.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellInfo.GetLinkString">
            <summary>
            Gets the reference as a string.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellInfo.SheetName">
            <summary>
            Gets or sets the name of the sheet.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellInfo.FormatString">
            <summary>
            Gets or sets the format string.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellInfo.FormatInfo">
            <summary>
            Gets or sets the format information.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellInfo.Note">
            <summary>
            Gets or sets the note.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellInfo.NoteStyle">
            <summary>
            Gets or sets the style of the note.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellInfo.Tag">
            <summary>
            Gets or sets the tag.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellInfo.Style">
            <summary>
            Gets or sets the style.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellInfo.Formula">
            <summary>
            Gets or sets the formula.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellInfo.FormattedValue">
            <summary>
            Gets or sets the value formatted.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellInfo.Value">
            <summary>
            Gets or sets the value unformatted.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellInfo.LinkRow">
            <summary>
            Gets or sets the row of the reference.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellInfo.LinkColumn">
            <summary>
            Gets or sets the column of the reference.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellInfo.RowSpan">
            <summary>
            Gets or sets the number of rows spanned.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellInfo.ColumnSpan">
            <summary>
            Gets or sets the number of columns spanned.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.Cells">
            <summary>
            Represents a two-dimensional collection of Cell objects.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Cells.#ctor(FarPoint.Win.Spread.SheetView,System.Boolean,System.Boolean)">
            <summary>
            Creates a collection of cells (a Cells object).
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Cells.GetDataModel">
            <summary>
            Gets the data model for a cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Cells.Get(System.Int32,System.Int32)">
            <summary>
            Gets a new Cell object for the specified row and column. 
            </summary>
            <param name="row">Row index of cell</param>
            <param name="column">Column index of cell</param>
            <exception cref="T:System.IndexOutOfRangeException">
            Specified row index is not valid; must be between zero and the total number of rows
            </exception>
            <exception cref="T:System.IndexOutOfRangeException">
            Specified column index is not valid; must be between zero and the total number of columns
            </exception>
            <exception cref="T:System.IndexOutOfRangeException">
            Specified row index is not valid; must be between zero and the total number of column header rows
            </exception>
            <exception cref="T:System.IndexOutOfRangeException">
            Specified column index is not valid; must be between zero and the total number of row header columns
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.Cells.Get(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets a new Cell object for the range of cells of the specified rows and columns.
            </summary>
            <exception cref="T:System.IndexOutOfRangeException">
            Specified row or column index is less than 0 or greater than or equal to the row count or column count.
            </exception>
            <param name="row">Starting row index of range of cells</param>
            <param name="column">Starting column index of range of cells</param>
            <param name="row2">Ending row index of range of cells</param>
            <param name="column2">Ending column index of range of cells</param>
            <exception cref="T:System.IndexOutOfRangeException">
            Specified starting row index is not valid; must be between zero and the total number of rows
            </exception>
            <exception cref="T:System.IndexOutOfRangeException">
            Specified starting column index is not valid; must be between zero and the total number of columns
            </exception>
            <exception cref="T:System.IndexOutOfRangeException">
            Specified starting row index is not valid; must be between zero and the total number of column header rows
            </exception>
            <exception cref="T:System.IndexOutOfRangeException">
            Specified starting column index is not valid; must be between zero and the total number of row header columns
            </exception>
            <exception cref="T:System.IndexOutOfRangeException">
            Specified ending row index is not valid; must be between zero and the total number of rows
            </exception>
            <exception cref="T:System.IndexOutOfRangeException">
            Specified ending column index is not valid; must be between zero and the total number of columns
            </exception>
            <exception cref="T:System.IndexOutOfRangeException">
            Specified ending row index is not valid; must be between zero and the total number of column header rows
            </exception>
            <exception cref="T:System.IndexOutOfRangeException">
            Specified ending column index is not valid; must be between zero and the total number of row header columns
            </exception>
        </member>
        <member name="P:FarPoint.Win.Spread.Cells.Parent">
            <summary>
            Gets the parent object containing this collection of cells. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Cells.Item(System.String)">
            <summary>
            Gets a new cell with a specified tag, or returns null if there is no cell with the specified tag.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Cells.Item(System.Int32,System.Int32)">
            <summary>
            Gets a new cell for the specified row and column. 
            </summary>
            <exception cref="T:System.IndexOutOfRangeException">
            Specified row index is not valid; must be between zero and the total number of rows
            </exception>
            <exception cref="T:System.IndexOutOfRangeException">
            Specified column index is not valid; must be between zero and the total number of columns
            </exception>
            <exception cref="T:System.IndexOutOfRangeException">
            Specified row index is not valid; must be between zero and the total number of column header rows
            </exception>
            <exception cref="T:System.IndexOutOfRangeException">
            Specified column index is not valid; must be between zero and the total number of row header columns
            </exception>
        </member>
        <member name="P:FarPoint.Win.Spread.Cells.Item(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets a new cell for the range of cells of the specified rows and columns.
            </summary>
            <exception cref="T:System.IndexOutOfRangeException">
            Specified starting row index is not valid; must be between zero and the total number of rows
            </exception>
            <exception cref="T:System.IndexOutOfRangeException">
            Specified starting column index is not valid; must be between zero and the total number of columns
            </exception>
            <exception cref="T:System.IndexOutOfRangeException">
            Specified starting row index is not valid; must be between zero and the total number of column header rows
            </exception>
            <exception cref="T:System.IndexOutOfRangeException">
            Specified starting column index is not valid; must be between zero and the total number of row header columns
            </exception>
            <exception cref="T:System.IndexOutOfRangeException">
            Specified ending row index is not valid; must be between zero and the total number of rows
            </exception>
            <exception cref="T:System.IndexOutOfRangeException">
            Specified ending column index is not valid; must be between zero and the total number of columns
            </exception>
            <exception cref="T:System.IndexOutOfRangeException">
            Specified ending row index is not valid; must be between zero and the total number of column header rows
            </exception>
            <exception cref="T:System.IndexOutOfRangeException">
            Specified ending column index is not valid; must be between zero and the total number of row header columns
            </exception>
        </member>
        <member name="T:FarPoint.Win.Spread.Cell">
            <summary>
            Represents a cell in the FpSpread component.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Cell.#ctor(FarPoint.Win.Spread.SheetView,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Constructs a new Cell object for the specified cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Cell.#ctor(FarPoint.Win.Spread.SheetView,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Constructs a new Cell object for the specified range of cells.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Cell.Invalidate">
            <summary>
            Invalidates the displayed cells and sends the message to repaint them.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Cell.GetDataModel">
            <summary>
            Gets the data model for a cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Cell.GetStyleModel">
            <summary>
            Gets the style model for a cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Cell.GetSpanModel">
            <summary>
            Gets the span model for a cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Cell.IsValid(System.Int32,System.Int32)">
            <summary>
            Checks whether the specified view row and column indexes 
            are valid coordinates in the sheet's data model, and if so
            sets the row and column fields to the model row and column indexes.
            </summary>
            <param name="viewrow">Row index (in the view)</param>
            <param name="viewcolumn">Column index (in the view)</param>
            <returns>
            True if view row and view column are defined in the data model
            for the sheet; false otherwise
            </returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Cell.GetStyleInfo">
            <summary>
            Fills the styleInfo field with the current style properties for a cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Cell.SetStyleInfo">
            <summary>
            Sets the styleInfo field into the style model for a cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Cell.UpdateNoteAppearance">
            <summary>
            Updates the note appearance based on style being set or note containing text.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Cell.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equivalent to this cell.
            </summary>
            <param name="o">Object to compare</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Cell.GetHashCode">
            <summary>
            Gets the hash code of an object.
            </summary>
            <returns>Hash code of the object</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Cell.ToString">
            <summary>
            Gets a string containing an absolute reference to this
            cell in the current reference style.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Cell.ToString(FarPoint.Win.Spread.Model.ReferenceStyle)">
            <summary>
            Gets a string containing an absolute reference to this
            cell in the specified reference style.
            </summary>
            <param name="referenceStyle">Style of cell reference</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Cell.ToString(FarPoint.Win.Spread.Cell)">
            <summary>
            Gets a string containing a relative reference to this 
            cell in the current reference style.
            </summary>
            <param name="relativeTo">Cell to use for computing the relative reference</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Cell.ToString(FarPoint.Win.Spread.Cell,FarPoint.Win.Spread.Model.ReferenceStyle)">
            <summary>
            Gets a string containing a relative reference to this
            cell in the specified reference style.
            </summary>
            <param name="relativeTo">Cell to use for computing the relative reference</param>
            <param name="referenceStyle">Style of cell reference</param>
            <exception cref="T:System.ArgumentNullException">
            No cell specified or specified cell (for relative reference) is not valid
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.Cell.ResetNoteIndicatorColor">
            <summary>
            Resets the color of the cell note indicator to its default value.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Cell.ResetCanFocus">
            <summary>
            Resets to its default value whether the cell can receive focus.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Cell.ResetTabStop">
            <summary>
            Resets to its default value whether the user can set focus to the cell using the Tab key.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Cell.ResetBackColor">
            <summary>
            Resets the background color for the cell and makes the cell inherit the background color 
            from the default cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Cell.ResetForeColor">
            <summary>
            Resets the text (foreground) color for the cell and makes the cell inherit the text color 
            from the default cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Cell.ResetBorder">
            <summary>
            Resets the cell border for the cell and makes the cell inherit the cell border 
            from the default cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Cell.ResetFont">
            <summary>
            Resets the font for the cell and makes the cell inherit the font from the default cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Cell.ResetHorizontalAlignment">
            <summary>
            Resets the horizontal alignment for the cell and makes the cell inherit  
            the horizontal alignment from the default cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Cell.ResetVerticalAlignment">
            <summary>
            Resets the vertical alignment for the cell and makes the cell inherit 
            the vertical alignment from the default cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Cell.ResetNoteStyle">
            <summary>
            Resets the note style for the cell and makes the cell inherit 
            the note style from the default cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Cell.ResetLocked">
            <summary>
            Resets the locked state for the cell and makes the cell inherit 
            the locked state from the default cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Cell.ResetCellType">
            <summary>
            Resets the cell type for the cell and makes the cell inherit 
            the cell type from the default cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Cell.ResetParentStyleName">
            <summary>
            Resets the ParentStyleName for the cell to an empty string.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Cell.ResetText">
            <summary>
            Resets the text for the cell to empty. 
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Cell.ResetValue">
            <summary>
            Resets the value for the cell to empty.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Cell.SheetView">
            <summary>
            internal use only. used by Formula Editor.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Cell.Column">
            <summary>
            Gets a Column object for the column that contains this cell.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Cell.Row">
            <summary>
            Gets a Row object for the row that contains this cell. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Cell.Parent">
            <summary>
            Gets the parent collection (Cells object) of a cell.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Cell.Value">
            <summary>
            Gets or sets the value in a cell.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Cell.Text">
            <summary>
            Gets or sets the formatted text in a cell.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Cell.Formula">
            <summary>
            Gets or sets the formula in a cell.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Cell.Tag">
            <summary>
            Gets or sets an application-defined tag value for a cell.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Cell.Note">
            <summary>
            Gets or sets the note for a cell.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Cell.ColumnSpan">
            <summary>
            Gets or sets the number of columns spanned by this cell.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Cell.RowSpan">
            <summary>
            Gets or sets the number of rows spanned by a cell.
            </summary>
            <remarks>
            If this cell represents a range of cells, then this property returns and sets the 
            upper-left cell in the range.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Spread.Cell.StyleName">
            <summary>
            Gets or sets the name of the custom style for a cell.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Cell.ParentStyleName">
            <summary>
            Gets or sets the name of the parent style for a cell.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Cell.NoteIndicatorColor">
            <summary>
            Gets or sets the color for the note indicator for a cell.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Cell.CanFocus">
            <summary>
            Gets or sets whether the user can set focus to the cell using the keyboard or mouse.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Cell.TabStop">
            <summary>
            Gets or sets whether the user can set focus to the cell using the Tab key.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Cell.BackColor">
            <summary>
            Gets or sets the background color for a cell.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Cell.ForeColor">
            <summary>
            Gets or sets the text (foreground) color for a cell.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Cell.Border">
            <summary>
            Gets or sets the border for a cell.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Cell.Font">
            <summary>
            Gets or sets the font for text in a cell.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Cell.HorizontalAlignment">
            <summary>
            Gets or sets the horizontal alignment of contents for a cell.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Cell.VerticalAlignment">
            <summary>
            Gets or sets the vertical alignment of contents for a cell.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Cell.NoteStyle">
            <summary>
            Gets or sets the note style for a cell.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Cell.Editor">
            <summary>
            Gets or sets the editor for a cell.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Cell.Renderer">
            <summary>
            Gets or sets the renderer for a cell.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Cell.Formatter">
            <summary>
            Gets or sets the formatter for a cell.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Cell.Locked">
            <summary>
            Gets or sets whether a cell is marked as locked from editing.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Cell.CellType">
            <summary>
            Gets or sets the type of cell for a cell.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Cell.ParseFormatString">
            <summary>
            Gets or sets the parsed formatting string for the cell.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Cell.ParseFormatInfo">
            <summary>
            Gets or sets the parsed formatting for the cell.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.CellsEditor">
            <summary>
            Editor for the Cells, Columns, and Rows properties.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellsEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits the parent style name value.
            </summary>
            <param name="context">ITypeDescriptorContext</param>
            <param name="provider">IServiceProvider</param>
            <param name="value">object</param>
            <returns>object</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.CellsEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets the style of the type editor (which is drop-down).
            </summary>
            <param name="context">ITypeDescriptorContext</param>
            <returns>UITypeEditorEditStyle</returns>
        </member>
        <member name="T:FarPoint.Win.Spread.DrawingSpace.TextInput">
            <summary>
            Represents the text input for the presentation space.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.DrawingSpace.TextInput.TextInputCancelButton">
            <summary>
            Represents the Cancel button of the form.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.DrawingSpace.TextInput.TextInputOkButton">
            <summary>
            Represents the OK button of the form.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.DrawingSpace.TextInput.TextInputInputBox">
            <summary>
            Represents the input text box of the form.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.DrawingSpace.TextInput.TextInputPrompt">
            <summary>
            Represents the informational prompt label of the form.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.DrawingSpace.TextInput.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.TextInput.#ctor">
            <summary>
            Creates a new text input.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.TextInput.Dispose(System.Boolean)">
            <summary>
            Internal use only. Clean up any resources being used.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.TextInput.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.TextInput.NumbersOnly">
            <summary>
            Gets or sets whether the text input is only numeric input.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.TextInput.AllowNegativeNumbers">
            <summary>
            Gets or sets whether the numeric text input allows negaive values.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.TextInput.HelpTopic">
            <summary>
            Gets or sets the help topic for the text input.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.TextInput.HelpPath">
            <summary>
            Gets or sets the help path for the text input.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.TextInput.HelpFileName">
            <summary>
            Gets or sets the help file name for the text input.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.XmlTypeConverter">
            <summary>
            Type converter for objects which implement ISerializeSupport which converts objects to and from their xml representations.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.XmlTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether the specified type can be converted to a border object.
            </summary>
            <param name="context">ITypeDescriptorContext</param>
            <param name="sourceType">Type</param>
            <returns>True if sourceType is String, false otherwise.</returns>
        </member>
        <member name="T:FarPoint.Win.Spread.CellLayoutModel">
            <summary>
            Class represents a collection of cell spans.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellLayoutModel.#ctor">
            <summary>
            Creates a new cell layout model that is initially empty.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellLayoutModel.Add(FarPoint.Win.Spread.CellLayout)">
            <summary>
            Adds a layout to the model.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellLayoutModel.FindCell(System.Int32,System.Int32)">
            <summary>
            Finds the layout for the specified cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellLayoutModel.FindPoint(System.Int32,System.Int32)">
            <summary>
            Finds the layout that contains the specified point.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellLayoutModel.Item(System.Int32)">
            <summary>
            Gets the element at the specified index.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellLayoutModel.Count">
            <summary>
            Gets the number of layouts in the model.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.Tracker">
            <summary>
            Class provides visual feedback when mouse is used to resize
            or split viewports.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Tracker.#ctor(System.Windows.Forms.Control,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a tracker.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Tracker.ReverseRectangle">
            <summary>
            Reverses the rectangle occupied by the tracker.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Tracker.Start">
            <summary>
            Starts the tracking process.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Tracker.MoveX(System.Int32)">
            <summary>
            Moves the tracker to a new horizontal position.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Tracker.MoveY(System.Int32)">
            <summary>
            Moves the tracker to a new vertical position.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Tracker.Stop">
            <summary>
            Stops the tracking process.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Tracker.X">
            <summary>
            Gets the x coordinate of the tracker.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Tracker.Y">
            <summary>
            Gets the y coordinate of the tracker.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Tracker.Width">
            <summary>
            Gets the width of the tracker.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Tracker.Height">
            <summary>
            Gets the height of the tracker.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Tracker.MinimumX">
            <summary>
            Gets the minimum x coordinate allowed for the tracker.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Tracker.MinimumY">
            <summary>
            Gets the minimum y coordiante allowed for the tracker.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Tracker.MaximumX">
            <summary>
            Gets the maximum x coordinate allowed for the tracker.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Tracker.MaximumY">
            <summary>
            Gets the maximum y coordinate allowed for the tracker
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.SheetSkinsForm">
            <summary>
            Summary description for SheetSkinsForm.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SheetSkinsForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetSkinsForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetSkinsForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.IFocusIndicatorRenderer">
            <summary>
            Interface that supports painting the focus indicator using a specified control and dimensions.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.IFocusIndicatorRenderer.Paint(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Paints the cell with the focus indicator using the specified control and dimensions.
            </summary>
            <param name="g">Graphics device interface for painting the cell</param>
            <param name="x">X-coordinate</param>
            <param name="y">Y-coordinate</param>
            <param name="width">Width, in pixels</param>
            <param name="height">Height, in pixels</param>
            <param name="left">Whether to paint the left side of the focus indicator</param>
            <param name="top">Whether to paint the top of the focus indicator</param>
            <param name="right">Whether to paint the right side of the focus indicator</param>
            <param name="bottom">Whether to paint the bottom of the focus indicator</param>
        </member>
        <member name="T:FarPoint.Win.Spread.DefaultFocusIndicatorRenderer">
            <summary>
            Represents the renderer of the default focus indicator.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DefaultFocusIndicatorRenderer.#ctor">
            <summary>
            Creates a new renderer for the default focus indicator.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DefaultFocusIndicatorRenderer.#ctor(System.Int32)">
            <summary>
            Creates a new renderer for the default focus indicator with the specified line thickness.
            </summary>
            <param name="thickness">Line thickness in pixels</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DefaultFocusIndicatorRenderer.Paint(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Paints the cell with the default focus indicator using the specified control and dimensions.
            </summary>
            <param name="g">Graphics device interface for painting the cell</param>
            <param name="x">X-coordinate</param>
            <param name="y">Y-coordinate</param>
            <param name="width">Width, in pixels</param>
            <param name="height">Height, in pixels</param>
            <param name="left">Whether to paint the left side of the focus indicator</param>
            <param name="top">Whether to paint the top of the focus indicator</param>
            <param name="right">Whether to paint the right side of the focus indicator</param>
            <param name="bottom">Whether to paint the bottom of the focus indicator</param>
        </member>
        <member name="T:FarPoint.Win.Spread.SolidFocusIndicatorRenderer">
            <summary>
            Represents the renderer of the solid focus indicator.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SolidFocusIndicatorRenderer.#ctor">
            <summary>
            Creates a new renderer of the solid focus indicator.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SolidFocusIndicatorRenderer.#ctor(System.Drawing.Color,System.Int32)">
            <summary>
            Creates a new renderer of the solid focus indicator with the specified color and thickness.
            </summary>
            <param name="clr">Color of the focus indicator</param>
            <param name="thickness">Thickness of the focus indicator, in pixels</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SolidFocusIndicatorRenderer.Paint(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Paints the cell with the solid focus indicator using the specified control and dimensions.
            </summary>
            <param name="g">Graphics device interface for painting the cell</param>
            <param name="x">X-coordinate</param>
            <param name="y">Y-coordinate</param>
            <param name="width">Width, in pixels</param>
            <param name="height">Height, in pixels</param>
            <param name="left">Whether to paint the left side of the focus indicator</param>
            <param name="top">Whether to paint the top of the focus indicator</param>
            <param name="right">Whether to paint the right side of the focus indicator</param>
            <param name="bottom">Whether to paint the bottom of the focus indicator</param>
        </member>
        <member name="T:FarPoint.Win.Spread.ImageFocusIndicatorRenderer">
            <summary>
            Represents the renderer of the image focus indicator.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.ImageFocusIndicatorRenderer.#ctor(System.Drawing.Image,System.Drawing.Color)">
            <summary>
            Creates a new renderer of the image focus indicator.
            </summary>
            <param name="img">Image to use for the focus indicator</param>
            <param name="transparentColor">Color that is treated as transparent</param>
        </member>
        <member name="M:FarPoint.Win.Spread.ImageFocusIndicatorRenderer.Paint(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Paints the cell with the image focus indicator using the specified control and dimensions.
            </summary>
            <param name="g">Graphics device interface for painting the cell</param>
            <param name="x">X-coordinate</param>
            <param name="y">Y-coordinate</param>
            <param name="width">Width, in pixels</param>
            <param name="height">Height, in pixels</param>
            <param name="left">Whether to paint the left side of the focus indicator</param>
            <param name="top">Whether to paint the top of the focus indicator</param>
            <param name="right">Whether to paint the right side of the focus indicator</param>
            <param name="bottom">Whether to paint the bottom of the focus indicator</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CustomFocusIndicatorRendererConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns a value indicating whether a custom focus indicator object can be converted to the specified type.
            </summary>
            <param name="context">ITypeDescriptorContext</param>
            <param name="destinationType">Type</param>
            <returns>True if a border object can be converted to the specified type, and false otherwise.</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.CustomFocusIndicatorRendererConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the focus indicator object to a string.
            </summary>
            <param name="context">ITypeDescriptorContext</param>
            <param name="culture">CultureInfo</param>
            <param name="value">object</param>
            <param name="destinationType">Type</param>
            <returns>String representation of a border object.</returns>
        </member>
        <member name="T:FarPoint.Win.Spread.CustomFocusIndicatorRenderer">
            <summary>
            Represents a custom renderer of the focus indicator.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CustomFocusIndicatorRenderer.#ctor">
            <summary>
            Creates a new renderer for the custom focus indicator.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CustomFocusIndicatorRenderer.#ctor(System.Int32)">
            <summary>
            Creates a new renderer for the custom focus indicator with the specified line thickness.
            </summary>
            <param name="thickness">Line thickness in pixels</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CustomFocusIndicatorRenderer.#ctor(System.Drawing.Bitmap,System.Int32)">
            <summary>
            Creates a new renderer for the custom focus indicator with the specified bitmap and thickness.
            </summary>
            <param name="bitmap">Bitmap to use for rendering</param>
            <param name="thickness">Line thickness in pixels</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CustomFocusIndicatorRenderer.Clone">
            <summary>
            Internal use only. Creates and returns a copy of the picture.
            </summary>
            <returns>Copy of the picture</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.CustomFocusIndicatorRenderer.#ctor(System.Object)">
            <summary>
            Creates a custom focus indicator by copying another.
            </summary>
            <param name="cloneFrom">Object from which to copy or clone this picture</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CustomFocusIndicatorRenderer.Paint(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Paints the cell with the custom focus indicator using the specified control and dimensions.
            </summary>
            <param name="g">Graphics device interface for painting the cell</param>
            <param name="x">X-coordinate</param>
            <param name="y">Y-coordinate</param>
            <param name="width">Width, in pixels</param>
            <param name="height">Height, in pixels</param>
            <param name="left">Whether to paint the left side of the focus indicator</param>
            <param name="top">Whether to paint the top of the focus indicator</param>
            <param name="right">Whether to paint the right side of the focus indicator</param>
            <param name="bottom">Whether to paint the bottom of the focus indicator</param>
        </member>
        <member name="P:FarPoint.Win.Spread.CustomFocusIndicatorRenderer.Bitmap">
            <summary>
            Gets the bitmap to use for rendering the custom focus indicator.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CustomFocusIndicatorRenderer.Thickness">
            <summary>
            Gets the thickness in pixels of the custom focus indicator.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.CellType.IEditor">
            <summary>
            Interface that defines the methods required by objects used as editors.
            Editors allow the user to edit the cell contents.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.IEditor.GetEditorControl(FarPoint.Win.Spread.Appearance,System.Single)">
            <summary>
            Gets the control associated with the editor.
            </summary>
            <param name="appearance">Appearance object that contains the appearance settings</param>
            <param name="zoomFactor">Numeric value for scaling when displaying</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.IEditor.GetEditorValue">
            <summary>
            Gets the value in the editor control.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.IEditor.ShowSubEditor">
            <summary>
            Shows the subeditor control associated with the cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.IEditor.SetEditorValue(System.Object)">
            <summary>
             Sets the value of the editor control.
            </summary>
            <param name="value">Value of the editor control</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.IEditor.StartEditing(System.EventArgs,System.Boolean,System.Boolean)">
            <summary>
            Starts the editing of a cell with the specified options.
            </summary>
            <param name="e">Event</param>
            <param name="selectAll">Whether to select all</param>
            <param name="autoClipboard">Whether to allow shortcut keys for Clipboard actions</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.IEditor.CancelEditing">
            <summary>
            Cancels the editing of a cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.IEditor.StopEditing">
            <summary>
            Stops the editing of a cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.IEditor.IsReservedKey(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Determines whether the specified key has special meaning to the editor control.
            </summary>
            <param name="e">Key the user pressed and whether any modifier keys (CTRL, ALT, and SHIFT) are pressed at the same time</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.IEditor.IsReservedLocation(System.Drawing.Graphics,System.Int32,System.Int32,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
            <summary>
            Determines whether the specified cursor location has special meaning to the editor control.
            </summary>
            <param name="g">Graphics device interface for drawing editor control</param>
            <param name="x">X-coordinate of pointer location</param>
            <param name="y">Y-coordinate of pointer location</param>
            <param name="rc">Location and size of a rectangular region</param>
            <param name="appearance">Appearance settings for the editor control</param>
            <param name="value">Object containing the name of the editor control</param>
            <param name="zoomFactor">Numeric value for zoom factor for scaling when displaying the editor control</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.IEditor.IsValid(System.Object)">
            <summary>
            Determines whether the specified value is valid.
            </summary>
            <param name="value">Specified value of the editor control</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.IEditor.GetReservedCursor(System.Object)">
            <summary>
            Gets the cursor reserved for this editor.
            </summary>
            <param name="o">Object with the reserved cursor (pointer)</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.IEditor.GetPreferredSize(System.Windows.Forms.Control)">
            <summary>
            Gets the preferred (maximum needed) size of the cell for the editor control.
            </summary>
            <param name="editor">Name of the editor control</param>
        </member>
        <member name="E:FarPoint.Win.Spread.CellType.IEditor.EditingCanceled">
            <summary>
            Occurs when editing (the editor control) has been canceled by the user.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.CellType.IEditor.EditingStopped">
            <summary>
            Occurs when editing (the editor control) has been stopped by the user.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.CellType.IEditFormula">
            <summary>
            Interface implemented by cell type objects that default to editing formulas if there is a formula in the cell.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.CellType.IFormulaEditor">
            <summary>
            Interface implemented by cell editors that support editing formulas.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.IFormulaEditor.IsFormulaValue">
            <summary>
            Determines whether the editor contains a formula.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.CellType.IRenderer">
            <summary>
            Interface that defines the methods and properties required by objects used as renderers.
            Renderers are responsible for painting cells.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.IRenderer.GetPreferredSize(System.Drawing.Graphics,System.Drawing.Size,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
            <summary>
            Gets the preferred (maximum needed) size of the cell for the renderer control.
            </summary>
            <param name="g">Graphics device interface for drawing</param>
            <param name="size">Preferred or maximum needed size</param>
            <param name="appearance">Appearance settings</param>
            <param name="value">Object containing the name of the renderer control</param>
            <param name="zoomFactor">Numeric value for zoom factor for scaling the display</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.IRenderer.PaintCell(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Boolean,System.Boolean,System.Single)">
            <summary>
            Paints the cell when not editing.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.IRenderer.CanOverflow">
            <summary>
            Determines whether this cell can overflow into an adjacent cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.IRenderer.CanBeOverflown">
            <summary>
            Determines whether adjacent cells can overflow into this cell.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.CellType.IFormatter">
            <summary>
            Interface that defines the methods and properties required by objects used as formatters.
            Formatters are responsible for formatting cell contents.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.IFormatter.Format(System.Object)">
            <summary>
             Formats the specified object as a string.
            </summary>
            <param name="o">Object with cell data to format</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.IFormatter.Parse(System.String)">
            <summary>
            Parses the specified string into desired object.
            </summary>
            <param name="s">String to parse</param>
        </member>
        <member name="T:FarPoint.Win.Spread.CellType.IRenderAlignment">
            <summary>
            Interface that defines the methods required to specify the alignment of content 
            that the renderer uses when rendering the content.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.IRenderAlignment.GetHorizontalAlignment(System.Object)">
            <summary>
            Gets the horizontal alignment.
            </summary>
            <param name="value">Value of the horizontal alignment</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.IRenderAlignment.GetVerticalAlignment(System.Object)">
            <summary>
            Gets the vertical alignment.
            </summary>
            <param name="value">Value of the vertical alignment</param>
        </member>
        <member name="T:FarPoint.Win.Spread.CellType.LeadingZero">
            <summary>
            Specifies whether to display leading zeros in numeric cell types.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CellType.LeadingZero.UseRegional">
            <summary>
            Displays leading zeros according to the Windows regional settings
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CellType.LeadingZero.No">
            <summary>
            Does not display leading zeros
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CellType.LeadingZero.Yes">
            <summary>
            Displays leading zeros
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.CellType.DateTimeFormat">
            <summary>
            Specifies the formatting for date and time.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CellType.DateTimeFormat.ShortDate">
            <summary>
            Uses the abbreviated form for the date
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CellType.DateTimeFormat.LongDate">
            <summary>
            Uses the long form for the date
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CellType.DateTimeFormat.ShortDateWithTime">
            <summary>
            Uses the abbreviated form for the date and time
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CellType.DateTimeFormat.LongDateWithTime">
            <summary>
            Uses the long form for the date and time
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CellType.DateTimeFormat.TimeOnly">
            <summary>
            Uses the time only (no date)
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CellType.DateTimeFormat.UserDefined">
            <summary>
            Uses the user-defined date and time format
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.CellType.CharacterSet">
            <summary>
            Specifies the character set for valid cell contents.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CellType.CharacterSet.Ascii">
            <summary>
            Accepts any of the ASCII characters
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CellType.CharacterSet.Alpha">
            <summary>
            Accepts letters (alphabetic characters) only
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CellType.CharacterSet.AlphaNumeric">
            <summary>
            Accepts letters (alphabetic characters) or numbers (numeric characters) only
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CellType.CharacterSet.Numeric">
            <summary>
            Accepts numbers (numeric characters) only
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.CellType.CurrencyNegativeFormat">
            <summary>
            Specifies the formatting of the currency symbol and negative sign in currency.
            </summary>
            Enumerations for the negative formatting in an fpCurrency control.
        </member>
        <member name="F:FarPoint.Win.Spread.CellType.CurrencyNegativeFormat.UseRegional">
            <summary>
            [-1] Displays the currency symbol and the negative sign according to the Windows regional settings
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CellType.CurrencyNegativeFormat.ParenthesesSymbolBefore">
            <summary>
            [0] Displays the currency symbol and the value within parentheses, as in ($1)
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CellType.CurrencyNegativeFormat.SignSymbolBefore">
            <summary>
            [1] Displays the negative sign and the currency symbol before the value, as in -$1
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CellType.CurrencyNegativeFormat.SymbolSignBefore">
            <summary>
            [2] Displays the currency symbol and the negative sign before the value, as in $-1
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CellType.CurrencyNegativeFormat.SymbolBeforeSignAfter">
            <summary>
            [3] Displays the currency symbol appears before the value and the negative sign after, as in $1-
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CellType.CurrencyNegativeFormat.ParenthesesSymbolAfter">
            <summary>
            [4] Displays the currency symbol appears after the value and within parentheses, as in (1$)
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CellType.CurrencyNegativeFormat.SignBeforeSymbolAfter">
            <summary>
            [5] Displays the negative sign appears before the value and the currency symbol after, as in -1$
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CellType.CurrencyNegativeFormat.SignSymbolAfter">
            <summary>
            [6] Displays the negative sign and the currency symbol after the value, as in 1-$
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CellType.CurrencyNegativeFormat.SymbolSignAfter">
            <summary>
            [7] Displays the currency symbol and the negative sign after the value, as in 1$-
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CellType.CurrencyNegativeFormat.SignBeforeSpaceSymbolAfter">
            <summary>
            [8] Displays the negative sign appears before the value and the currency symbol after with a space, as in -1 $
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CellType.CurrencyNegativeFormat.SignSymbolSpaceBefore">
            <summary>
            [9] Displays the negative sign and the currency symbol with a space before the value, as in -$ 1 
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CellType.CurrencyNegativeFormat.SpaceSymbolSignAfter">
            <summary>
            [10] Displays the currency symbol and the negative sign with a space after the value, as in 1 $- 
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CellType.CurrencyNegativeFormat.SymbolSpaceBeforeSignAfter">
            <summary>
            [11] Displays the currency symbol with a space before the value and the negative sign after, as in $ 1-
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CellType.CurrencyNegativeFormat.SymbolSpaceSignBefore">
            <summary>
            [12] Displays the currency symbol, space, and negative sign before the value, as in $ -1  
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CellType.CurrencyNegativeFormat.SignSpaceSymbolAfter">
            <summary>
            [13] Displays the negative sign, space, and currency symbol after the value, 1- $
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CellType.CurrencyNegativeFormat.ParenthesesSymbolSpaceBefore">
            <summary>
            [14] Displays the currency symbol and space before the value and within parentheses, as in ($ 1) 
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CellType.CurrencyNegativeFormat.ParenthesesSpaceSymbolAfter">
            <summary>
            [15] Displays the currency symbol and a space after the value and within parentheses, as in (1 $)
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.CellType.EditorValue">
            <summary>
            Specifies what is written out to the data model for a selected item from a combo box cell.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CellType.EditorValue.String">
            <summary>
            [0] Writes to the model the text value of the selected item
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CellType.EditorValue.Index">
            <summary>
            [1] Writes to the model the index of the selected item
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CellType.EditorValue.ItemData">
            <summary>
            [2] Writes to the model the corresponding data of the selected item
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.CellType.DateTimeEditorValue">
            <summary>
            Specifies what is written out to the data model for a date time cell.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CellType.DateTimeEditorValue.String">
            <summary>
            [0] Writes to the model the text value of the cell
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CellType.DateTimeEditorValue.DateTime">
            <summary>
            [1] Writes to the model the DateTime datatype of the cell
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CellType.DateTimeEditorValue.DateSerial">
            <summary>
            [2] Writes to the model the date serial value (double) of the cell
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.CellType.CurrencyPositiveFormat">
            <summary>
            Specifies the formatting of the currency symbol and positive sign in a currency cell.
            </summary>    
        </member>
        <member name="F:FarPoint.Win.Spread.CellType.CurrencyPositiveFormat.UseRegional">
            <summary>
            [-1] Displays the currency symbol according to the Windows regional setting
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CellType.CurrencyPositiveFormat.CurrencySymbolBefore">
            <summary>
            [0] Displays the currency symbol appears before the value
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CellType.CurrencyPositiveFormat.CurrencySymbolAfter">
            <summary>
            [1] Displays the currency symbol appears after the value
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CellType.CurrencyPositiveFormat.CurrencySymbolBeforeWithSpace">
            <summary>
            [2] Displays the currency symbol appears with a space before the value
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CellType.CurrencyPositiveFormat.CurrencySymbolAfterWithSpace">
            <summary>
            [3] Display the currency symbol appears with a space after the value
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.CellType.NegativeFormat">
            <summary>
            Specifies the display of the negative sign in cell contents.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CellType.NegativeFormat.UseRegional">
            <summary>
            [-1] Displays the value according to the Windows regional settings
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CellType.NegativeFormat.Parentheses">
            <summary>
            [0] Displays the value within parentheses, as in (1) 
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CellType.NegativeFormat.NegativeSignBefore">
            <summary>
            Displays the negative sign before (to the left) of the value, as in -1  
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CellType.NegativeFormat.NegativeSignBeforeWithSpace">
            <summary>
            Displays the negative sign with space before (to the left) of the value, as in - 1  
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CellType.NegativeFormat.NegativeSignAfter">
            <summary>
            Displays the negative sign after (to the right) of the value, as in 1-
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CellType.NegativeFormat.NegativeSignAfterWithSpace">
            <summary>
            Displays the negative sign with space after (to the right) of the value, as in 1 - 
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.CellType.PercentNegativeFormat">
            <summary>
            Specifies the display of negative values in a percent cell.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CellType.PercentNegativeFormat.UseRegional">
            <summary>
            [-1] Displays the negative percent value in the format set by the Windows regional settings
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CellType.PercentNegativeFormat.PercentAfterWithSpace">
            <summary>
            [0] Displays the negative percent value with a space and the percent symbol following the number
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CellType.PercentNegativeFormat.PercentAfter">
            <summary>
            [1] Displays the negative percent value with the percent symbol following the number
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CellType.PercentNegativeFormat.PercentBefore">
            <summary>
            [2] Displays the negative percent value with the percent symbol before the number
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.CellType.PercentPositiveFormat">
            <summary>
            Specifies the display of positive values in a percent cell.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CellType.PercentPositiveFormat.UseRegional">
            <summary>
            [-1] Displays the positive percent value in the format set by the Windows regional settings
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CellType.PercentPositiveFormat.PercentAfterWithSpace">
            <summary>
            [0] Displays the positive percent value with a space and the percent symbol following the number
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CellType.PercentPositiveFormat.PercentAfter">
            <summary>
            [1] Displays the positive percent value with the percent symbol following the number
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CellType.PercentPositiveFormat.PercentBefore">
            <summary>
            [2] Displays the positive percent value with the percent symbol before the number
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.CellType.PercentFormat">
            <summary>
            Specifies the display of the percent sign in cell contents.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CellType.PercentFormat.PercentSignBefore">
            <summary>
            [0] Displays the percent sign immediately before the value
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CellType.PercentFormat.PercentSignAfter">
            <summary>
            [1] Displays the percent sign immediately after the value
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CellType.PercentFormat.PercentSignBeforeWithSpace">
            <summary>
            [2] Displays the percent sign with a single space before the value
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CellType.PercentFormat.PercentSignAfterWithSpace">
            <summary>
            [3] Displays the percent sign with a single space after the value
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.CellType.ISubEditor">
            <summary>
            Interface that defines the methods and properties required by objects 
            used as editors within the editor.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ISubEditor.GetValue">
            <summary>
            Gets the value from the subeditor control.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ISubEditor.SetValue(System.Object)">
            <summary>
            Sets the value into the subeditor control.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ISubEditor.GetSubEditorControl">
            <summary>
            Gets the control associated with the subeditor.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ISubEditor.GetPreferredSize">
            <summary>
            Gets the preferred (maximum needed) size of the cell for the subeditor control.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ISubEditor.GetLocation(System.Drawing.Rectangle)">
            <summary>
            Gets the initial location of the subeditor control.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.CellType.ISubEditor.ValueChanged">
            <summary>
            Occurs when the value in the subeditor changes.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.CellType.ISubEditor.CloseUp">
            <summary>
            Occurs when the subeditor control goes away.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.CellType.IReadOnlySupport">
            <summary>
            Interface that signifies whether the cell type supports a ReadOnly property.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.IReadOnlySupport.ReadOnly">
            <summary>
            Gets or sets whether the cell type is read-only.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.CellType.IStaticSupport">
            <summary>
            Interface that signifies whether the cell type supports a Static property.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.IStaticSupport.Static">
            <summary>
            Gets or sets whether the cell type is static.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.CellType.IMultilineSupport">
            <summary>
            Interface that signifies whether the cell type supports a Multiline property.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.IMultilineSupport.Multiline">
            <summary>
            Gets or sets whether the cell type supports multiple lines.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.CellType.IWordWrapSupport">
            <summary>
            Interface that signifies whether cell type supports a WordWrap property.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.IWordWrapSupport.WordWrap">
            <summary>
            Gets or sets whether the cell type supports word wrapping.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.CellType.IFormatValueFlag">
            <summary>
            Marker interface for cell type objects which indicates that the value for the cell should always be formatted for display or sorting purposes.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.SpreadDropDownCalculator.SetValue(System.Object)">
            <summary>
            Sets the value into the subeditor control.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.SpreadDropDownCalculator.GetSubEditorControl">
            <summary>
            Gets the control associated with the subeditor.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.SpreadDropDownCalculator.GetPreferredSize">
            <summary>
            Gets the preferred (maximum needed) size of the subeditor control.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.SpreadDropDownCalculator.GetLocation(System.Drawing.Rectangle)">
            <summary>
            Gets the intial location of the subeditor control.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.CellType.GeneralEditor">
            <summary>
            Represents the base control for the cell types derived from GeneralCellType.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.GeneralEditor.#ctor">
            <summary>
            Constructs a new general editor.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.GeneralEditor.OnSubEditorClosed(System.EventArgs)">
            <summary>
            Raises the <see cref="E:FarPoint.Win.Spread.CellType.GeneralEditor.SubEditorClosed"/> event.
            </summary>
            <param name="e">EventArgs object that contains event data</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.GeneralEditor.OnSubEditorOpening(FarPoint.Win.Spread.CellType.GeneralEditor.SubEditorCancelEventArgs)">
            <summary>
            Raises the <see cref="E:FarPoint.Win.Spread.CellType.GeneralEditor.SubEditorOpening"/> event.
            </summary>
            <param name="e">EventArgs object that contains event data</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.GeneralEditor.Button_MouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.GeneralEditor.HandleValidKey(System.Int32)">
            <summary>
            Internal use only. Determines whether the key is handled by the control. 
            </summary>
            method override from SuperEditBase
            <param name="c">Numerical value for an ASCII character</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.GeneralEditor.HandleValidCharacter(System.Int32@)">
            <summary>
            Internal use only. Determines whether the character is handled by the control. 
            </summary>
            method override from SuperEditBase
            <param name="c">Numerical value for an ASCII character</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.GeneralEditor.ShowSubEditor(System.Boolean)">
            <summary>
            Shows or hides the subeditor control associated with the cell.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.CellType.GeneralEditor.SubEditorClosed">
            <summary>
            Occurs when the subeditor for a cell closes.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.CellType.GeneralEditor.SubEditorOpening">
            <summary>
            Occurs when the subeditor for a cell opens.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.GeneralEditor.AutoAdvance">
            <summary>
            Gets or sets whether the focus moves to another control when the pointer is moved with the arrow keys.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.GeneralEditor.OriginalValue">
            <summary>
            Gets or sets the editor's original value.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.GeneralEditor.IntegerIncrement">
            <summary>
            Sets the amount by which the value increments when the cursor is in the integer portion.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.GeneralEditor.DecimalIncrement">
            <summary>
            Sets the amount by which the value increments when the cursor is in the decimal portion.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.GeneralEditor.SubEditor">
            <summary>
            Gets or sets the subeditor to use.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.GeneralEditor.CellType">
            <summary>
            Gets or sets the type of cell.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.GeneralEditor.CharacterSet">
            <summary>
            Gets or sets which character set to use.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.GeneralEditor.WordWrap">
            <summary>
            Gets or sets whether text that is too long to fit in the cell wraps to additional lines.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.GeneralEditor.ReadOnly">
            <summary>
            Gets or sets whether the cell is read-only (and thus cannot be edited).
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.GeneralEditor.BorderStyle">
            <summary>
            Gets or sets the style of the border.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.GeneralEditor.Multiline">
            <summary>
            Gets or sets whether the text box has multiple lines.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.GeneralEditor.AcceptsReturn">
            <summary>
            Gets or sets whether it accepts a return.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.GeneralEditor.AcceptsArrowKeys">
            <summary>
            Gets or sets whether to accept arrow keys.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.GeneralEditor.PasswordChar">
            <summary>
            Gets or sets which character to substitute when user types in password.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.GeneralEditor.MaximumLength">
            <summary>
            Gets or sets the maximum number of characters allowed.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.GeneralEditor.ScrollBars">
            <summary>
            Gets or sets the use of scroll bars.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.GeneralEditor.CharacterCasing">
            <summary>
            Gets or sets the character casing.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.CellType.GeneralEditor.SubEditorCancelEventHandler">
            <summary>
            Represents a defined method that handles the cancelling of the 
            <see cref="E:FarPoint.Win.Spread.CellType.GeneralEditor.SubEditorOpening"/> event for the fpSpread control.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.CellType.GeneralEditor.SubEditorCancelEventArgs">
            <summary>
            Represents the event data for the cancelling of the 
            <see cref="E:FarPoint.Win.Spread.CellType.GeneralEditor.SubEditorOpening"/> event for the fpSpread control.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.GeneralEditor.SubEditorCancelEventArgs.#ctor">
            <summary>
            Creates a new SubEditorCancelEventArgs object.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.GeneralEditor.SubEditorCancelEventArgs.Cancel">
            <summary>
            Gets or sets whether to cancel the default processing.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.CellType.ICellType">
            <summary>
            Interface that defines the methods and properties required by objects used as cell types.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.CellType.BaseCellType">
            <summary>
            Represents the base class for other cell type classes.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.BaseCellType.GetPreferredSize(System.Windows.Forms.Control)">
            <summary>
            Gets the preferred (maximum needed) size of the cell for the editor control.
            </summary>
            <param name="editor">Name of the editor control</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.BaseCellType.GetEditorControl(FarPoint.Win.Spread.Appearance,System.Single)">
            <summary>
            Gets the edit control for this cell type with the specified appearance and scaling.
            </summary>
            <param name="appearance">Appearance object that contains the appearance settings</param>
            <param name="zoomFactor">Numeric value for zoom factor for scaling when displaying</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.BaseCellType.GetEditorValue">
            <summary>
            Gets the unformatted value in the editor control.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.BaseCellType.SetEditorValue(System.Object)">
            <summary>
            Sets the value of the editor control.
            </summary>
            <param name="value">Value of editor control (as object)</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.BaseCellType.IsValid(System.Object)">
            <summary>
            Determines whether the specified value is valid.
            </summary>
            <param name="value">Value to validate (as object)</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.BaseCellType.StartEditing(System.EventArgs,System.Boolean,System.Boolean)">
            <summary>
            Starts the editing of a cell.
            </summary>
            <param name="e">Event</param>
            <param name="selectAll">Whether to select all</param>
            <param name="autoClipboard">Whether to allow shortcut keys for Clipboard actions</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.BaseCellType.ShowSubEditor">
            <summary>
            Shows the subeditor control associated with the cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.BaseCellType.CancelEditing">
            <summary>
            Cancels the editing of a cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.BaseCellType.StopEditing">
            <summary>
            Stops the editing of a cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.BaseCellType.IsReservedKey(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Determines whether the specified key has special meaning to the editor control.
            </summary>
            <param name="e">
            Key the user pressed and whether any modifier keys (CTRL, ALT, and SHIFT) 
            are pressed at the same time
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.BaseCellType.IsReservedLocation(System.Drawing.Graphics,System.Int32,System.Int32,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
            <summary>
            Determines whether the specified cursor location has special meaning to the editor control.
            </summary>
            <param name="g">Graphics device interface for drawing editor control</param>
            <param name="x">X-coordinate of pointer location</param>
            <param name="y">Y-coordinate of pointer location</param>
            <param name="rc">Location and size of a rectangular region</param>
            <param name="appearance">Appearance settings for the editor control</param>
            <param name="value">Object containing the name of the editor control</param>
            <param name="zoomFactor">Numeric value for zoom factor for scaling when displaying the editor control</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.BaseCellType.GetReservedCursor(System.Object)">
            <summary>
            Gets the cursor reserved for this cell type.
            </summary>
            <param name="o">Object that is the reserved cursor (pointer)</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.BaseCellType.FireEditingCanceled">
            <summary>
            Fires the EditingCanceled event if there are any delegates attached.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.BaseCellType.FireEditingStopped">
            <summary>
            Fires the EditingStopped event if there are any delegates attached.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.BaseCellType.PaintCell(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Boolean,System.Boolean,System.Single)">
            <summary>
            Paints the cell when not in edit mode to the specified graphics interface with the specified appearance settings.
            </summary>
            <param name="g">Graphics device interface for painting the cell</param>
            <param name="r">Location and size of a rectangular region</param>
            <param name="appearance">Appearance settings for the cell</param>
            <param name="value">Object - name of the renderer</param>
            <param name="isSelected">Whether the cell is selected</param>
            <param name="isLocked">Whether the cell is locked</param>
            <param name="zoomFactor">Numeric value for zoom factor for scaling when painting the cell</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.BaseCellType.GetPreferredSize(System.Drawing.Graphics,System.Drawing.Size,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
            <summary>
            Gets the preferred (maximum needed) size of the cell for the renderer control.
            </summary>
            <param name="g">Graphics device interface for drawing</param>
            <param name="size">Preferred or maximum needed size</param>
            <param name="appearance">Appearance settings</param>
            <param name="value">Object containing the name of the renderer control</param>
            <param name="zoomFactor">Numeric value for zoom factor for scaling the display</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.BaseCellType.Format(System.Object)">
            <summary>
            Formats the specified data into the format of the cell type and returns it as a string.
            </summary>
            <param name="obj">Object in the data model</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.BaseCellType.Parse(System.String)">
            <summary>
            Parses the specified string to the data type of the cell type and returns it as an object.
            </summary>
            <param name="s">Specified string from the cell on the sheet to parse</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.BaseCellType.CanOverflow">
            <summary>
            Determines whether a cell can overflow its data into an adjacent cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.BaseCellType.CanBeOverflown">
            <summary>
            Determines whether data from another cell can overflow into this cell 
            (whether this cell can be overflowed into).
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.BaseCellType.ToString">
            <summary>
            Converts the name of the cell type to a string.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.BaseCellType.Clone">
            <summary>
            Creates and returns a base cell.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.BaseCellType.SubEditor">
            <summary>
            Gets or sets the subeditor.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.CellType.BaseCellType.EditingCanceled">
            <summary>
            Occurs when editing (the editor control) has been canceled by the user.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.CellType.BaseCellType.EditingStopped">
            <summary>
            Occurs when editing (the editor control) has been stopped by the user.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.CellType.GeneralCellType">
            <summary>
            Represents the default cell.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.CellType.EditBaseCellType">
            <summary>
            Represents the basis for all editable cells.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.EditBaseCellType.#ctor">
            <summary>
            Creates a new editable cell with default settings.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.EditBaseCellType.#ctor(FarPoint.Win.Spread.CellType.EditBaseCellType)">
            <summary>
            Copies properties from the specified EditBaseCellType ("copy constructor").
            </summary>
            <param name="g">Specified EditBaseCellType from which to copy</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.EditBaseCellType.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new editable cell from serialization.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.EditBaseCellType.Clone">
            <summary>
            Creates and returns an editable base cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.EditBaseCellType.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the cell type.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.EditBaseCellType.IsValid(System.Object)">
            <summary>
            Determines whether the specified value is valid.
            </summary>
            <param name="value">Value to validate (as object)</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.EditBaseCellType.ShowSubEditor">
            <summary>
            Shows the subeditor control associated with the cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.EditBaseCellType.Format(System.Object)">
            <summary>
            Formats the specified data into the format of the cell type and returns it as a string.
            </summary>
            <param name="obj">Object in the data model with cell data to format</param>
            <exception cref="T:System.ArgumentException">
            Specified object to format is not valid
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.EditBaseCellType.Parse(System.String)">
            <summary>
            Parses the specified string to the data type of the cell type and returns it as an object.
            </summary>
            <param name="s">Specified string from the cell on the sheet to parse</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.EditBaseCellType.ToHorizontalAlignment(FarPoint.Win.Spread.CellHorizontalAlignment)">
            <summary>
            Converts a FarPoint.Win.Spread.CellHorizontalAlignment value to the corresponding FarPoint.Win.HorizontalAlignment value.
            </summary>
            <param name="alignment">FarPoint.Win.Spread.CellHorizontalAlignment value</param>
            <returns>Corresponding FarPoint.Win.HorizontalAlignment value</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.EditBaseCellType.ToVerticalAlignment(FarPoint.Win.Spread.CellVerticalAlignment)">
            <summary>
            Converts a FarPoint.Win.Spread.CellVerticalAlignment value to the corresponding FarPoint.Win.VerticalAlignment value.
            </summary>
            <param name="alignment">FarPoint.Win.Spread.CellVerticalAlignment</param>
            <returns>FarPoint.Win.VerticalAlignment</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.EditBaseCellType.GetEditorControl(FarPoint.Win.Spread.Appearance,System.Single)">
            <summary>
            Gets the edit control for this cell type with the specified appearance and scaling.
            </summary>
            <param name="appearance">Appearance object that contains the appearance settings</param>
            <param name="zoomFactor">Numeric value for zoom factor for scaling when displaying</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.EditBaseCellType.GetEditorValue">
            <summary>
            Gets the unformatted value in the editor control.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.EditBaseCellType.SetEditorValue(System.Object)">
            <summary>
            Sets the value of the editor control.
            </summary>
            <param name="value">Value of editor control (as object)</param>
            <exception cref="T:System.ArgumentException">
            Specified value to set is not valid
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.EditBaseCellType.StartEditing(System.EventArgs,System.Boolean,System.Boolean)">
            <summary>
            Starts the editing of a cell.
            </summary>
            <param name="e">Event</param>
            <param name="selectAll">Whether to select all</param>
            <param name="autoClipboard">Whether to allow shortcut keys for Clipboard actions</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.EditBaseCellType.CancelEditing">
            <summary>
            Cancels the editing of a cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.EditBaseCellType.StopEditing">
            <summary>
            Stops the editing of a cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.EditBaseCellType.IsReservedKey(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Specifies if the specified key has special meaning to the editor control.
            </summary>
            <param name="e">KeyEventArgs object containing the event data</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.EditBaseCellType.IsReservedLocation(System.Drawing.Graphics,System.Int32,System.Int32,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
            <summary>
            Specifies if the specified cursor location has special meaning to the editor control.
            </summary>
            <param name="g">Graphics device interface for drawing editor control </param>
            <param name="x">X-coordinate of pointer location </param>
            <param name="y">Y-coordinate of pointer location </param>
            <param name="rc">Location and size of a rectangular region</param>
            <param name="appearance">Appearance settings for the editor control</param>
            <param name="value">Object containing the name of the editor control</param>
            <param name="zoomFactor">Numeric value for zoom factor for scaling when displaying the editor control</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.EditBaseCellType.GetReservedCursor(System.Object)">
            <summary>
            Gets the cursor reserved for this cell type.
            </summary>
            <param name="o">Object that is the reserved cursor (pointer)</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.EditBaseCellType.GetTextRectangle(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Font,FarPoint.Win.Spread.Appearance,System.Drawing.Rectangle@,System.String)">
            <summary>
            Gets the rectangle in which text is drawn.
            </summary>
            <param name="g">Graphics device interface for drawing the text</param>
            <param name="r">Cell rectangle</param>
            <param name="f">Font</param>
            <param name="appearance">Appearance</param>
            <param name="rText">Text rectangle returned</param>
            <param name="paintString">String to be painted</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.EditBaseCellType.GetHorizontalAlignment(System.Object)">
            <summary>
            Gets the horizontal alignment based on the value.
            </summary>
            <param name="value">Value of the horizontal alignment</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.EditBaseCellType.GetVerticalAlignment(System.Object)">
            <summary>
            Gets the vertical alignment based on the value.
            </summary>
            <param name="value">Value of the vertical alignment</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.EditBaseCellType.PaintCell(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Boolean,System.Boolean,System.Single)">
            <summary>
            Paints the cell when not in edit mode to the specified graphics interface with the specified appearance settings.
            </summary>
            <param name="g">Graphics device interface for painting the cell</param>
            <param name="r">Location and size of a rectangular region</param>
            <param name="appearance">Appearance settings for the cell</param>
            <param name="value">Object - name of the renderer</param>
            <param name="isSelected">Whether the cell is selected</param>
            <param name="isLocked">Whether the cell is locked</param>
            <param name="zoomFactor">Numeric value for zoom factor for scaling when painting the cell</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.EditBaseCellType.GetPreferredSize(System.Drawing.Graphics,System.Drawing.Size,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
            <summary>
            Gets the preferred (maximum needed) size of the cell for the renderer control.
            </summary>
            <param name="g">Graphics device interface for drawing</param>
            <param name="size">Preferred or maximum needed size</param>
            <param name="appearance">Appearance settings</param>
            <param name="value">Object containing the name of the renderer control</param>
            <param name="zoomFactor">Numeric value for zoom factor for scaling the display</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.EditBaseCellType.GetPreferredSize(System.Windows.Forms.Control)">
            <summary>
            Gets the preferred (maximum needed) size of the cell for the editor control.
            </summary>
            <param name="editor">Name of editor control</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.EditBaseCellType.CanOverflow">
            <summary>
            Determines whether the cell can overflow into adjacent cells.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.EditBaseCellType.CanBeOverflown">
            <summary>
            Determines whether data from another cell can overflow into this cell 
            (whether this cell can be overflowed into).
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.EditBaseCellType.Serialize(System.Xml.XmlTextWriter)">
            <summary>
            Saves the object to XML.
            </summary>
            <param name="w">XmlTextWriter to which to write (save) the object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.EditBaseCellType.Deserialize(System.Xml.XmlNodeReader)">
            <summary>
            Loads the object from XML.
            </summary>
            <param name="r">XmlNodeReader from which to read (load) the object</param>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.EditBaseCellType.SubEditor">
            <summary>
            Gets or sets the subeditor.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.EditBaseCellType.AcceptsArrowKeys">
            <summary>
            Gets or sets how arrow keys are processed by the edit control.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.EditBaseCellType.BackgroundImage">
            <summary>
            Gets or sets the background image for the cell.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.EditBaseCellType.TextOrientation">
            <summary>
            Gets or sets how text orients itself when painting the cell.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.EditBaseCellType.DropDownButton">
            <summary>
            Gets or sets whether a drop-down button is displayed in the cell.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.EditBaseCellType.ButtonAlign">
            <summary>
            Gets or sets where the buttons are displayed in the cell.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.EditBaseCellType.Static">
            <summary>
            Gets or sets whether the cell is static, which prohibits user interaction.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.EditBaseCellType.ReadOnly">
            <summary>
            Gets or sets whether the cell is read-only (and thus cannot be modified).
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.EditBaseCellType.StringTrim">
            <summary>
            Gets or sets how to trim characters that do not fit in the cell.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.EditBaseCellType.WordWrap">
            <summary>
            Gets or sets whether text that is too long to fit in the cell wraps to additional lines.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.Model.IParseFormatSupport">
            <summary>
            Interface that supports format strings and providers for the style model for the sheet. 
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.IParseFormatSupport.GetParseFormat(System.Int32,System.Int32,System.String@,System.IFormatProvider@)">
            <summary>
            Gets the parse format for the cell at the specified row and column.
            </summary>
            <param name="row">Row index of specified cell</param>
            <param name="column">Column index of specified cell</param>
            <param name="formatString">Format string built by the parser</param>
            <param name="info">IFormatProvider built by parser</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.IParseFormatSupport.SetParseFormat(System.Int32,System.Int32,System.String,System.IFormatProvider)">
            <summary>
            Sets the parse format for the cell at the specified row and column.
            </summary>
            <param name="row">Row index of specified cell</param>
            <param name="column">Column index of specified cell</param>
            <param name="formatString">Format string built by the parser</param>
            <param name="info">IFormatProvider built by parser</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.GeneralCellType.#ctor">
            <summary>
            Creates a new general (default) cell with default settings.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.GeneralCellType.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new general (default) cell from serialization.
            </summary>
            <param name="info">SerializationInfo</param>
            <param name="context">StreamingContext</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.GeneralCellType.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the cell type.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.GeneralCellType.Clone">
            <summary>
            Creates and returns a general (default) cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.GeneralCellType.Parse(System.String)">
            <summary>
            Parses the specified string to the data type of the cell type and returns it as an object.
            </summary>
            <param name="s">Specified string from the cell on the sheet to parse</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.GeneralCellType.Format(System.Object)">
            <summary>
            Formats the specified data into the format of the cell type and returns it as a string.
            </summary>
            <param name="obj">Object in the data model</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.GeneralCellType.StartEditing(System.EventArgs,System.Boolean,System.Boolean)">
            <summary>
            Starts the editing of a cell.
            </summary>
            <param name="e">Event</param>
            <param name="selectAll">Whether to select all </param>
            <param name="autoClipboard">Whether to allow shortcut keys for Clipboard actions </param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.GeneralCellType.SetFormatString(System.String,System.Boolean)">
            <summary>
            Sets the format string used to format values.
            </summary>
            <param name="value">New format string to use</param>
            <param name="isDateFormat">Whether to consider the number as a date and time</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.GeneralCellType.GetParseFormat(System.Int32,System.Int32,System.String@,System.IFormatProvider@)">
            <summary>
            Gets the parse format string and IFormatProvider for formatting when the format string is not set.
            </summary>
            <param name="row">Ignored</param>
            <param name="column">Ignored</param>
            <param name="formatString">Format string</param>
            <param name="info">IFormatProvider to handle formatting</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.GeneralCellType.SetParseFormat(System.Int32,System.Int32,System.String,System.IFormatProvider)">
            <summary>
            Sets the parse format string and IFormatProvider for formatting when the format string is not set.
            </summary>
            <param name="row">Ignored</param>
            <param name="column">Ignored</param>
            <param name="formatString">Format string</param>
            <param name="info">IFormatProvider to use for formatting</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.GeneralCellType.Serialize(System.Xml.XmlTextWriter)">
            <summary>
            Saves the object to XML.
            </summary>
            <param name="w">XmlTextWriter to which to write (save) the object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.GeneralCellType.Deserialize(System.Xml.XmlNodeReader)">
            <summary>
            Loads the object from XML.
            </summary>
            <param name="r">XmlNodeReader from which to read (load) the object</param>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.GeneralCellType.NegativeRed">
            <summary>
            Gets or sets whether negative values are displayed in red.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.GeneralCellType.FormatString">
            <summary>
            Gets or sets the format string used to format the value.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.GeneralCellType.IsDateFormat">
            <summary>
            Gets or sets whether the format string should be interpreted as a date-time format (true) 
            or a number format (false).
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.GeneralCellType.DateTimeFormat">
            <summary>
            Gets or sets a DateTimeFormatInfo object that defines the format for displaying dates and times.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.GeneralCellType.NumberFormat">
            <summary>
            Gets or sets a NumberFormatInfo object that defines the format for displaying a numeric value.
            </summary>    
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.GeneralCellType.IsFormulaValue">
            <summary>
            Determines whether the editor contains a formula. 
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.CellType.TextCellType">
            <summary>
            Represents a text cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.TextCellType.#ctor">
            <summary>
            Creates a new text cell with default settings.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.TextCellType.Clone">
            <summary>
            Creates and returns a text cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.TextCellType.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new text cell from serialization.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.TextCellType.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the cell type.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.TextCellType.IsValid(System.Object)">
            <summary>
            Determines whether the specified value is valid.
            </summary>
            <param name="value">Specified value in the editor control</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.TextCellType.Parse(System.String)">
            <summary>
            Parses the specified string to the data type of the cell type and returns it as an object.
            </summary>
            <param name="s">Specified string from the cell on the sheet to parse</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.TextCellType.Format(System.Object)">
            <summary>
            Formats the specified data into the format of the cell type and returns it as a string.
            </summary>
            <param name="obj">Object in the data model</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.TextCellType.SetEditorValue(System.Object)">
            <summary>
            Sets the value of the editor control.
            </summary>
            <param name="value">Value of editor control (as object)</param>
            <exception cref="T:System.ArgumentException">
            Specified value to set is not valid
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.TextCellType.GetEditorControl(FarPoint.Win.Spread.Appearance,System.Single)">
            <summary>
            Gets the edit control for this cell type with the specified appearance and scaling.
            </summary>
            <param name="appearance">Appearance object that contains the appearance settings</param>
            <param name="zoomFactor">Numeric value for zoom factor for scaling when displaying</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.TextCellType.GetTextRectangle(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Font,FarPoint.Win.Spread.Appearance,System.Drawing.Rectangle@,System.String)">
            <summary>
            Gets the rectangle in which text is drawn.
            </summary>
            <param name="g">Graphics device interface for drawing the text</param>
            <param name="r">Cell rectangle</param>
            <param name="f">Font</param>
            <param name="appearance">Appearance</param>
            <param name="rText">Text rectangle returned</param>
            <param name="paintString">String to be painted</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.TextCellType.PaintCell(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Boolean,System.Boolean,System.Single)">
            <summary>
            Paints the cell when not in edit mode to the specified graphics interface with the specified appearance settings.
            </summary>
            <param name="g">Graphics device interface for painting the cell</param>
            <param name="r">Location and size of a rectangular region</param>
            <param name="appearance">Appearance settings for the cell</param>
            <param name="value">Object - name of the renderer</param>
            <param name="isSelected">Whether the cell is selected</param>
            <param name="isLocked">Whether the cell is locked</param>
            <param name="zoomFactor">Numeric value for zoom factor for scaling when painting the cell</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.TextCellType.GetPreferredSize(System.Windows.Forms.Control)">
            <summary>
            Gets the preferred (maximum needed) size of the cell for the editor control.
            </summary>
            <param name="editor">Name of the editor control</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.TextCellType.GetPreferredSize(System.Drawing.Graphics,System.Drawing.Size,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
            <summary>
            Gets the preferred (maximum needed) size of the cell for the renderer control.
            </summary>
            <param name="g">Graphics device interface for drawing</param>
            <param name="size">Preferred or maximum needed size</param>
            <param name="appearance">Appearance settings</param>
            <param name="value">Object containing the name of the renderer control</param>
            <param name="zoomFactor">Numeric value for zoom factor for scaling the display</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.TextCellType.CanOverflow">
            <summary>
            Determines whether the cell can overflow into adjacent cells.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.TextCellType.Serialize(System.Xml.XmlTextWriter)">
            <summary>
            Saves the object to XML.
            </summary>
            <param name="w">XmlTextWriter to which to write (save) the object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.TextCellType.Deserialize(System.Xml.XmlNodeReader)">
            <summary>
            Loads the object from XML.
            </summary>
            <param name="r">XmlNodeReader from which to read (load) the object</param>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.TextCellType.ScrollBars">
            <summary>
            Gets or sets which scroll bars to display for the text cell.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.TextCellType.HotkeyPrefix">
            <summary>
            Gets or sets whether the ampersand character underlines text.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.TextCellType.CharacterCasing">
            <summary>
            Gets or sets the case of characters in the text cell.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.TextCellType.CharacterSet">
            <summary>
            Gets or sets what characters to allow for the text cell.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.TextCellType.PasswordChar">
            <summary>
            Gets or sets which character to use to mask data in the text cell.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.TextCellType.MaxLength">
            <summary>
            Gets or sets the maximum number of characters allowed in the text cell.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.TextCellType.Multiline">
            <summary>
            Gets or sets whether multiple lines of text are allowed.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.CellType.ButtonCellType">
            <summary>
            Represents a button cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ButtonCellType.#ctor">
            <summary>
            Creates a new button cell with default settings.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ButtonCellType.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new button cell from serialization.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ButtonCellType.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates the SerializationInfo class with information about the button cell type settings.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ButtonCellType.ToHorizontalAlignment(FarPoint.Win.Spread.CellHorizontalAlignment)">
            <summary>
            Converts a FarPoint.Win.Spread.CellHorizontalAlignment value to the corresponding FarPoint.Win.HorizontalAlignment value.
            </summary>
            <param name="alignment">FarPoint.Win.Spread.CellHorizontalAlignment value</param>
            <returns>Corresponding FarPoint.Win.HorizontalAlignment value</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ButtonCellType.ToVerticalAlignment(FarPoint.Win.Spread.CellVerticalAlignment)">
            <summary>
            Converts a FarPoint.Win.Spread.CellVerticalAlignment value to the corresponding FarPoint.Win.VerticalAlignment value.
            </summary>
            <param name="alignment">FarPoint.Win.Spread.CellVerticalAlignment</param>
            <returns>FarPoint.Win.VerticalAlignment</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ButtonCellType.Format(System.Object)">
            <summary>
            Formats the specified data into the format of the cell type and returns it as a string.
            </summary>
            <param name="o">Object in the data model to format</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ButtonCellType.Parse(System.String)">
            <summary>
            Parses the specified string to the data type of the cell type and returns it as an object.
            </summary>
            <param name="s">Specified string from the cell on the sheet to parse</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ButtonCellType.GetEditorControl(FarPoint.Win.Spread.Appearance,System.Single)">
            <summary>
            Gets the edit control for this cell type with the specified appearance and scaling.
            </summary>
            <param name="appearance">Appearance object that contains the appearance settings</param>
            <param name="zoomFactor">Numeric value for zoom factor for scaling when displaying</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ButtonCellType.GetEditorValue">
            <summary>
            Gets the unformatted value in the editor control.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ButtonCellType.SetEditorValue(System.Object)">
            <summary>
            Sets the value of the editor control.
            </summary>
            <param name="value">Object - value of the editor control</param>
            <exception cref="T:System.ArgumentException">
            Specified value to set is not valid
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ButtonCellType.StartEditing(System.EventArgs,System.Boolean,System.Boolean)">
            <summary>
            Starts the editing of a cell.
            </summary>
            <param name="e">Event</param>
            <param name="selectAll">Whether to select all </param>
            <param name="autoClipboard">Whether to allow shortcut keys for Clipboard actions</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ButtonCellType.CancelEditing">
            <summary>
            Cancels the editing of a cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ButtonCellType.StopEditing">
            <summary>
            Stops the editing of a cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ButtonCellType.IsReservedKey(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Specifies if the specified key has special meaning to the editor control.
            </summary>
            <param name="e">KeyEventArgs object containing the event data</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ButtonCellType.IsReservedLocation(System.Drawing.Graphics,System.Int32,System.Int32,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
            <summary>
            Specifies if the specified cursor location has special meaning to the editor control.
            </summary>
            <param name="g">Graphics device interface for drawing editor control </param>
            <param name="x">X-coordinate of pointer location </param>
            <param name="y">Y-coordinate of pointer location </param>
            <param name="rc">Location and size of a rectangular region</param>
            <param name="appearance">Appearance settings for the editor control</param>
            <param name="value">Object containing the name of the editor control</param>
            <param name="zoomFactor">Numeric value for zoom factor for scaling when displaying the editor control</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ButtonCellType.GetReservedCursor(System.Object)">
            <summary>
            Gets the cursor reserved for this cell type.
            </summary>
            <param name="o">Object that is the reserved cursor (pointer)</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ButtonCellType.PaintCell(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Boolean,System.Boolean,System.Single)">
            <summary>
            Paints the cell when not in edit mode to the specified graphics interface with the specified appearance settings.
            </summary>
            <param name="g">Graphics device interface for painting the cell</param>
            <param name="r">Location and size of a rectangular region</param>
            <param name="appearance">Appearance settings for the cell</param>
            <param name="value">Object - name of the renderer</param>
            <param name="isSelected">Whether the cell is selected</param>
            <param name="isLocked">Whether the cell is locked</param>
            <param name="zoomFactor">Numeric value for zoom factor for scaling when painting the cell</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ButtonCellType.GetPreferredSize(System.Drawing.Graphics,System.Drawing.Size,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
            <summary>
            Gets the preferred (maximum needed) size of the cell for the renderer control.
            </summary>
            <param name="g">Graphics device interface for drawing</param>
            <param name="size">Preferred or maximum needed size</param>
            <param name="appearance">Appearance settings</param>
            <param name="value">Object containing the name of the renderer control</param>
            <param name="zoomFactor">Numeric value for zoom factor for scaling the display</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ButtonCellType.Serialize(System.Xml.XmlTextWriter)">
            <summary>
            Saves the object to XML.
            </summary>
            <param name="w">XmlTextWriter to which to write (save) the object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ButtonCellType.Deserialize(System.Xml.XmlNodeReader)">
            <summary>
            Loads the object from XML.
            </summary>
            <param name="r">XmlNodeReader from which to read (load) the object</param>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.ButtonCellType.ButtonColor">
            <summary>
            Gets or sets the color for the button.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.ButtonCellType.HotkeyPrefix">
            <summary>
            Gets or sets whether the ampersand character underlines text.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.ButtonCellType.TextColor">
            <summary>
            Gets or sets the color for the button text.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.ButtonCellType.DarkColor">
            <summary>
            Gets or sets the shadow color for the button.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.ButtonCellType.LightColor">
            <summary>
            Gets or sets the highlight color for the button.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.ButtonCellType.Picture">
            <summary>
            Gets or sets the image for the button.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.ButtonCellType.PictureDown">
            <summary>
            Gets or sets the image for the down state of the button.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.ButtonCellType.ShadowSize">
            <summary>
            Gets or sets the width (in pixels) of the shadow around the button.
            </summary>
            <exception cref="T:System.ArgumentException">
            Specified width is not valid; must be between 0 and 256
            </exception>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.ButtonCellType.Text">
            <summary>
            Gets or sets the button text.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.ButtonCellType.TextDown">
            <summary>
            Gets or sets the text for the button down state.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.ButtonCellType.TextOrientation">
            <summary>
            Gets or sets how text orients itself when painting the cell.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.ButtonCellType.TextAlign">
            <summary>
            Gets or sets how the text aligns itself in relation to the button image.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.ButtonCellType.TwoState">
            <summary>
            Gets or sets whether the button has two states.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.ButtonCellType.WordWrap">
            <summary>
            Gets or sets whether text that is too long to fit in the cell wraps to additional lines.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.CellType.DateTimeCellType">
            <summary>
            Represents a date-time cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.DateTimeCellType.Clone">
            <summary>
            Creates and returns a date-time cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.DateTimeCellType.#ctor">
            <summary>
            Creates a new date-time cell with default settings.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.DateTimeCellType.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new date-time cell from serialization.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.DateTimeCellType.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the cell type.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.DateTimeCellType.GetEditorControl(FarPoint.Win.Spread.Appearance,System.Single)">
            <summary>
            Gets the edit control for this cell type with the specified appearance and scaling.
            </summary>
            <param name="appearance">Appearance object that contains the appearance settings</param>
            <param name="zoomFactor">Numeric value for zoom factor for scaling when displaying</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.DateTimeCellType.GetEditorValue">
            <summary>
            Gets the unformatted value in the editor control.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.DateTimeCellType.SetEditorValue(System.Object)">
            <summary>
            Sets the value of the editor control.
            </summary>
            <param name="value">Value of the editor control</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.DateTimeCellType.SetCalendarText(System.String[],System.String[],System.String[],System.String[],System.String,System.String)">
            <summary>
            Sets the various text elements for the pop-up calendar,   
            including the day and month names and the button text.
            </summary>
            <param name="dayNames">Set of day names</param>
            <param name="monthNames">Set of month names</param>
            <param name="shortdayNames">Set of abbreviated day names</param>
            <param name="shortmonthNames">Set of abbreviated month names</param>
            <param name="okText">Text for the OK button</param>
            <param name="cancelText">Text for the Cancel button</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.DateTimeCellType.SetCalendarText(System.String[],System.String[],System.String[],System.String[],System.String,System.String,System.String)">
            <summary>
            Sets the various text elements for the pop-up calendar,  
            including the day and month names, the today text, and the button text.
            </summary>
            <param name="dayNames">Set of day names</param>
            <param name="monthNames">Set of month names</param>
            <param name="shortdayNames">Set of abbreviated day names</param>
            <param name="shortmonthNames">Set of abbreviated month names</param>
            <param name="okText">Text for the OK button</param>
            <param name="cancelText">Text for the Cancel button</param>
            <param name="currentText">Text for the Today button or Now button</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.DateTimeCellType.SetCalendarText(System.String,System.String)">
            <summary>
            Sets the various text elements for the pop-up calendar,
            namely the button text.
            </summary>
            <param name="okText">Text for the OK button</param>
            <param name="cancelText">Text for the Cancel button</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.DateTimeCellType.SetCalendarFormat(System.String)">
            <summary>
            Sets the format to be used for the pop-up calendar header.
            </summary>
            <param name="calFormat">Format of the date in the header.</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.DateTimeCellType.GetDayNames">
            <summary>
            Gets the long day names to use when formatting date values.
            </summary>
            <returns>Array of string</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.DateTimeCellType.GetMonthNames">
            <summary>
            Gets the long month names to use when formatting date values.
            </summary>
            <returns>Array of string</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.DateTimeCellType.GetShortDayNames">
            <summary>
            Gets the short day names to use when formatting date values.
            </summary>
            <returns>Array of string</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.DateTimeCellType.GetShortMonthNames">
            <summary>
            Gets the short month names to use when formatting date values.
            </summary>
            <returns>Array of string</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.DateTimeCellType.GetTimeFormat">
            <summary>
            Gets the time format to use when formatting time values.
            </summary>
            <returns>string</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.DateTimeCellType.GetShortDateFormat">
            <summary>
            Gets the short date format to use when formatting date values.
            </summary>
            <returns>string</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.DateTimeCellType.GetLongDateFormat">
            <summary>
            Gets the long date format to use when formatting date values.
            </summary>
            <returns>string</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.DateTimeCellType.GetFormatString">
            <summary>
            Gets the format string to use when formatting date values or time values or both.
            </summary>
            <returns>string</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.DateTimeCellType.GetNewFormat">
            <summary>
            Gets the new format to use for formatting date and/or time values.
            </summary>
            <returns>string</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.DateTimeCellType.FixUpSpecialLiterals(System.String)">
            <summary>
            Used to change .net embedded literals into SuperEdit embedded literals
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.DateTimeCellType.SetNewFormat">
            <summary>
            Sets the new format (returned by GetNewFormat) into the internal cell formatter.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.DateTimeCellType.GetDateSeparatorString">
            <summary>
            Gets the date separator string to use when formatting date values.
            </summary>
            <returns>string</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.DateTimeCellType.GetTimeSeparatorString">
            <summary>
            Gets the time separator string to use when formatting time values.
            </summary>
            <returns>string</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.DateTimeCellType.GetAMStringDesignator">
            <summary>
            Gets the AM string to use when formatting time values.
            </summary>
            <returns>string</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.DateTimeCellType.GetPMStringDesignator">
            <summary>
            Gets the PM string to use when formatting time values.
            </summary>
            <returns>string</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.DateTimeCellType.Serialize(System.Xml.XmlTextWriter)">
            <summary>
            Saves the object to XML.
            </summary>
            <param name="w">XmlTextWriter to which to write (save) the object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.DateTimeCellType.Deserialize(System.Xml.XmlNodeReader)">
            <summary>
            Loads the object from XML.
            </summary>
            <param name="r">XmlNodeReader from which to read (load) the object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.DateTimeCellType.IsValid(System.Object)">
            <summary>
            Determines whether the specified value can be converted to a date-time value and is between 
            the minimum and maximum allowed values.
            </summary>
            <param name="value">Value to validate (as object)</param>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.DateTimeCellType.EditorValue">
            <summary>
            Gets or sets what value is written to the underlying data model.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.DateTimeCellType.DateDefault">
            <summary>
            Gets or sets the default date for the control.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.DateTimeCellType.TimeDefault">
            <summary>
            Gets or sets the default time used in the control.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.DateTimeCellType.SpinButton">
            <summary>
            Gets or sets whether a spin button is displayed while editing.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.DateTimeCellType.UserDefinedFormat">
            <summary>
            Gets or sets the format used when date-time format is user-defined.
            </summary>
            <exception cref="T:System.ArgumentException">
            Specified format is not valid
            </exception>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.DateTimeCellType.ShortDayNames">
            <summary>
            Gets or sets alternate short day names for the control. (Use with UserDefinedFormat.)
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.DateTimeCellType.ShortMonthNames">
            <summary>
            Gets or sets alternate short month names for the control. (Use with UserDefinedFormat.)
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.DateTimeCellType.MonthNames">
            <summary>
            Gets or sets alternate month names for the control. (Use with UserDefinedFormat.)
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.DateTimeCellType.DayNames">
            <summary>
            Gets or sets alternate day names for the control. (Use with UserDefinedFormat.)
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.DateTimeCellType.DateTimeFormat">
            <summary>
            Gets or sets the format for displaying dates and times.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.DateTimeCellType.MinimumTime">
            <summary>
            Gets or sets the minimum time value allowed for user entry.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified value out of range; must be between 00:00:00 and 23:59:59.9999999
            </exception>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.DateTimeCellType.MaximumTime">
            <summary>
            Gets or sets the maximum time value allowed for user entry.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified value out of range; must be between 00:00:00 and 23:59:59.9999999
            </exception>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.DateTimeCellType.MinimumDate">
            <summary>
            Gets or sets the minimum date value allowed for user entry.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.DateTimeCellType.MaximumDate">
            <summary>
            Gets or sets the maximum date value allowed for user entry.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.DateTimeCellType.DateSeparator">
            <summary>
            Gets or sets the string used to separate the portions of a date value.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.DateTimeCellType.TimeSeparator">
            <summary>
            Gets or sets the string to use for the time separator
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.DateTimeCellType.AMString">
            <summary>
            Gets or sets the string to indicate morning for 12-hour time format. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.DateTimeCellType.PMString">
            <summary>
            Gets or sets the string to indicate afternoon and evening for 12-hour time format.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.DateTimeCellType.Calendar">
            <summary>
            Gets or sets the calendar to use for formatting date values.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.DateTimeCellType.TwoDigitYearMax">
            <summary>
            Gets or sets the last year of a 100-year range that can be represented by a 2-digit year.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified value is out of range for Gregorian calendar; must be between 100 and 9999
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified value is out of range for Hijri calendar; must be between 100 and 9666
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified value is out of range for Hebrew calendar; must be between 5343 and 6000
            </exception>
        </member>
        <member name="T:FarPoint.Win.Spread.CellType.NumberCellType">
            <summary>
            Represents a numeric cell with formatting that you can specify.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.NumberCellType.Clone">
            <summary>
            Creates and returns a numeric cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.NumberCellType.#ctor">
            <summary>
            Creates a new numeric cell with default settings.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.NumberCellType.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new numeric cell from serialization.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.NumberCellType.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the cell type.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.NumberCellType.SetCalculatorText(System.String,System.String)">
            <summary>
            Sets the text for the pop-up calculator.
            </summary>
            <param name="okText">Text for the OK button</param>
            <param name="cancelText">Text for the Cancel button</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.NumberCellType.Round(System.Double,System.Int32)">
            <summary>
            Function to perform "plain" rounding, not "bankers" rounding
            </summary>
            <param name="value">Double value to round</param>
            <param name="decimalPlaces">Decimal places of precision</param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.NumberCellType.GetEditorControl(FarPoint.Win.Spread.Appearance,System.Single)">
            <summary>
            Gets the edit control for this cell type with the specified appearance and scaling.
            </summary>
            <param name="appearance">Appearance object that contains the appearance settings</param>
            <param name="zoomFactor">Numeric value for zoom factor for scaling when displaying</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.NumberCellType.Format(System.Object)">
            <summary>
            Formats the specified data into the format of the cell type and returns it as a string.
            </summary>
            <param name="obj">Object in the data model with cell data to format</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.NumberCellType.Parse(System.String)">
            <summary>
            Parses the specified string to the data type of the cell type and returns it as an object.
            </summary>
            <param name="s">Specified string from the cell on the sheet to parse</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.NumberCellType.ApplyNegativeFormat">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.NumberCellType.GetNegativeFormatValue">
            <summary>
            Internal use only.
            </summary>
            <returns>NegativeFormat</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.NumberCellType.GetNewFormat">
            <summary>
            Gets the format string to use when formatting the numeric value.
            </summary>
            <returns>string</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.NumberCellType.GetDecimalPlacesValue">
            <summary>
            Internal use only.
            </summary>
            <returns>int</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.NumberCellType.GetDecimalSeparatorString">
            <summary>
            Internal use only.
            </summary>
            <returns>string</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.NumberCellType.GetSeparatorCharacter">
            <summary>
            Gets the separator character to use when formatting the numeric value.
            </summary>
            <returns>string</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.NumberCellType.Serialize(System.Xml.XmlTextWriter)">
            <summary>
            Saves the object to XML.
            </summary>
            <param name="w">XmlTextWriter to which to write (save) the object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.NumberCellType.Deserialize(System.Xml.XmlNodeReader)">
            <summary>
            Loads the object from XML.
            </summary>
            <param name="r">XmlNodeReader from which to read (load) the object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.NumberCellType.IsValid(System.Object)">
            <summary>
            Determines whether the specified value can be converted to a double-precision, 
            floating point value and is between the minimum and maximum allowed values.
            </summary>
            <param name="value">Value to validate</param>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.NumberCellType.LeadingZero">
            <summary>
            Gets or sets whether leading zeros are displayed.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.NumberCellType.SpinIntegerIncrement">
            <summary>
            Gets or sets the amount by which the value increments when using the 
            spin buttons and the cursor is in the integer portion.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.NumberCellType.SpinDecimalIncrement">
            <summary>
            Gets or sets the amount by which the value increments when using the 
            spin buttons and the cursor is in the decimal portion.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.NumberCellType.SpinButton">
            <summary>
            Gets or sets whether a spin button is displayed when editing.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.NumberCellType.SpinWrap">
            <summary>
            Gets or sets whether the value wraps when the minimum or maximum is reached.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.NumberCellType.NegativeFormat">
            <summary>
            Gets or sets how the value is formatted for negative values.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.NumberCellType.DecimalSeparator">
            <summary>
            Gets or sets the decimal character.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.NumberCellType.DecimalPlaces">
            <summary>
            Gets or sets the number of decimal places.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.NumberCellType.FixedPoint">
            <summary>
            Gets or sets whether the value displays place-holding zeros in the decimal portion.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.NumberCellType.NegativeRed">
            <summary>
            Gets or sets whether negative numeric values are displayed in red.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.NumberCellType.MaximumValue">
            <summary>
            Gets or sets the maximum value allowed for user input.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified value is beyond accepted limits
            </exception>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.NumberCellType.MinimumValue">
            <summary>
            Gets or sets the minimum value allowed for user entry.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified value is beyond accepted limits
            </exception>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.NumberCellType.Separator">
            <summary>
            Gets or sets the string used to separate thousands in a numeric value.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.NumberCellType.ShowSeparator">
            <summary>
            Gets or sets whether to display the thousands separator string.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.CellType.MaskCellType">
            <summary>
            Represents a mask cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.MaskCellType.Clone">
            <summary>
            Creates and returns a mask cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.MaskCellType.#ctor">
            <summary>
            Creates a new mask cell with default settings.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.MaskCellType.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new mask cell from serialization.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.MaskCellType.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the cell type.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.MaskCellType.IsValid(System.Object)">
            <summary>
            Determines whether the specified value is valid.
            </summary>
            <param name="value">Value to validate (as object)</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.MaskCellType.Format(System.Object)">
            <summary>
            Formats the specified data into the format of the cell type and returns it as a string.
            </summary>
            <param name="obj">Object in the data model</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.MaskCellType.Serialize(System.Xml.XmlTextWriter)">
            <summary>
            Saves the object to XML.
            </summary>
            <param name="w">XmlTextWriter to which to write (save) the object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.MaskCellType.OnCustomMaskCharacter(System.Object,FarPoint.Win.SuperEdit.CustomMaskEventArgs)">
            <summary>
            Handles the CustomMask event.
            </summary>
            <param name="sender">Object that raised the event </param>
            <param name="e">CustomMaskEventArgs object containing event data</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.MaskCellType.Deserialize(System.Xml.XmlNodeReader)">
            <summary>
            Loads the object from XML.
            </summary>
            <param name="r">XmlNodeReader from which to read (load) the object</param>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.MaskCellType.Mask">
            <summary>
            Gets or sets the mask string.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.MaskCellType.MaskChar">
            <summary>
            Gets or sets the placeholder character.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.MaskCellType.CustomMaskCharacters">
            <summary>
            Gets or sets the custom characters to use for the mask.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.CellType.CheckBoxCellType">
            <summary>
            Represents a check box cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.CheckBoxCellType.Clone">
            <summary>
            Creates and returns a check box cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.CheckBoxCellType.#ctor">
            <summary>
            Creates a new check box cell with default settings.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.CheckBoxCellType.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new check box cell from serialization.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.CheckBoxCellType.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the cell type.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.CheckBoxCellType.ToHorizontalAlignment(FarPoint.Win.Spread.CellHorizontalAlignment)">
            <summary>
            Converts a FarPoint.Win.Spread.CellHorizontalAlignment value to the corresponding FarPoint.Win.HorizontalAlignment value.
            </summary>
            <param name="alignment">FarPoint.Win.Spread.CellHorizontalAlignment value</param>
            <returns>Corresponding FarPoint.Win.HorizontalAlignment value</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.CheckBoxCellType.ToVerticalAlignment(FarPoint.Win.Spread.CellVerticalAlignment)">
            <summary>
            Converts a FarPoint.Win.Spread.CellVerticalAlignment value to the corresponding FarPoint.Win.VerticalAlignment value.
            </summary>
            <param name="alignment">FarPoint.Win.Spread.CellVerticalAlignment</param>
            <returns>FarPoint.Win.VerticalAlignment</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.CheckBoxCellType.Format(System.Object)">
            <summary>
            Formats the specified data into the format of the cell type and returns it as a string.
            </summary>
            <param name="o">Object in the data model to format</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.CheckBoxCellType.Parse(System.String)">
            <summary>
            Parses the specified string to the data type of the cell type and returns it as an object.
            </summary>
            <param name="s">Specified string from the cell on the sheet to parse</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.CheckBoxCellType.GetEditorControl(FarPoint.Win.Spread.Appearance,System.Single)">
            <summary>
            Gets the edit control for this cell type with the specified appearance and scaling.
            </summary>
            <param name="appearance">Appearance object that contains the appearance settings</param>
            <param name="zoomFactor">Numeric value for zoom factor for scaling when displaying</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.CheckBoxCellType.GetEditorValue">
            <summary>
            Gets the unformatted value in the editor control.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.CheckBoxCellType.SetEditorValue(System.Object)">
            <summary>
            Sets the value of the editor control.
            </summary>
            <param name="value">Value of the editor control</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.CheckBoxCellType.StartEditing(System.EventArgs,System.Boolean,System.Boolean)">
            <summary>
            Starts the editing of a cell.
            </summary>
            <param name="e">Event</param>
            <param name="selectAll">Whether to select all </param>
            <param name="autoClipboard">Whether to allow shortcut keys for Clipboard actions </param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.CheckBoxCellType.CancelEditing">
            <summary>
            Cancels the editing of a cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.CheckBoxCellType.StopEditing">
            <summary>
            Stops the editing of a cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.CheckBoxCellType.IsReservedKey(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Specifies if the specified key has special meaning to the editor control.
            </summary>
            <param name="e">KeyEventArgs object containing the event data</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.CheckBoxCellType.IsReservedLocation(System.Drawing.Graphics,System.Int32,System.Int32,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
            <summary>
            Specifies if the specified cursor location has special meaning to the editor control.
            </summary>
            <param name="g">Graphics device interface for drawing editor control </param>
            <param name="x">X-coordinate of pointer location </param>
            <param name="y">Y-coordinate of pointer location </param>
            <param name="rc">Location and size of a rectangular region</param>
            <param name="appearance">Appearance settings for the editor control</param>
            <param name="value">Object containing the name of the editor control</param>
            <param name="zoomFactor">Numeric value for zoom factor for scaling when displaying the editor control</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.CheckBoxCellType.GetReservedCursor(System.Object)">
            <summary>
            Gets the cursor reserved for this cell type.
            </summary>
            <param name="o">Object that is the reserved cursor (pointer)</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.CheckBoxCellType.PaintCell(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Boolean,System.Boolean,System.Single)">
            <summary>
            Paints the cell when not in edit mode to the specified graphics interface with the specified appearance settings.
            </summary>
            <param name="g">Graphics device interface for painting the cell</param>
            <param name="r">Location and size of a rectangular region</param>
            <param name="appearance">Appearance settings for the cell</param>
            <param name="value">Object - name of the renderer</param>
            <param name="isSelected">Whether the cell is selected</param>
            <param name="isLocked">Whether the cell is locked</param>
            <param name="zoomFactor">Numeric value for zoom factor for scaling when painting the cell</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.CheckBoxCellType.GetPreferredSize(System.Drawing.Graphics,System.Drawing.Size,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
            <summary>
            Gets the preferred (maximum needed) size of the cell for the renderer control.
            </summary>
            <param name="g">Graphics device interface for drawing</param>
            <param name="size">Preferred or maximum needed size</param>
            <param name="appearance">Appearance settings</param>
            <param name="value">Object containing the name of the renderer control</param>
            <param name="zoomFactor">Numeric value for zoom factor for scaling the display</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.CheckBoxCellType.Serialize(System.Xml.XmlTextWriter)">
            <summary>
            Saves the object to XML.
            </summary>
            <param name="w">XmlTextWriter to which to write (save) the object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.CheckBoxCellType.Deserialize(System.Xml.XmlNodeReader)">
            <summary>
            Loads the object from XML.
            </summary>
            <param name="r">XmlNodeReader from which to read (load) the object</param>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.CheckBoxCellType.BackgroundImage">
            <summary>
            Gets or sets the background image for the cell.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.CheckBoxCellType.Caption">
            <summary>
            Gets or sets the text in the check box regardless of the state,
            overriding TextTrue, TextFalse, and TextIndeterminate.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.CheckBoxCellType.HotkeyPrefix">
            <summary>
            Gets or sets whether the ampersand character underlines text.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.CheckBoxCellType.TextTrue">
            <summary>
            Gets or sets the text for true state.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.CheckBoxCellType.TextFalse">
            <summary>
            Gets or sets the text for false state.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.CheckBoxCellType.TextIndeterminate">
            <summary>
            Gets or sets the indeterminate state text.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.CheckBoxCellType.TextAlign">
            <summary>
            Gets or sets how the text is aligned in the cell.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.CheckBoxCellType.ThreeState">
            <summary>
            Gets or sets whether the check box has three states.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.CheckBoxCellType.Picture">
            <summary>
            Gets or sets the images to use for the states of the check box.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.CellType.SliderCellType">
            <summary>
            Represents a slider cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.SliderCellType.Clone">
            <summary>
            Creates and returns a slider cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.SliderCellType.#ctor">
            <summary>
            Creates a new slider cell with default settings.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.SliderCellType.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new slider cell from serialization.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.SliderCellType.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the cell type.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.SliderCellType.Format(System.Object)">
            <summary>
            Formats the specified data into the format of the cell type and returns it as a string.
            </summary>
            <param name="o">Object in the data model to format</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.SliderCellType.Parse(System.String)">
            <summary>
            Parses the specified string to the data type of the cell type and returns it as an object.
            </summary>
            <param name="s">Specified string from the cell on the sheet to parse</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.SliderCellType.GetEditorControl(FarPoint.Win.Spread.Appearance,System.Single)">
            <summary>
            Gets the edit control for this cell type with the specified appearance and scaling.
            </summary>
            <param name="appearance">Appearance object that contains the appearance settings</param>
            <param name="zoomFactor">Numeric value for zoom factor for scaling when displaying</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.SliderCellType.GetEditorValue">
            <summary>
            Gets the unformatted value in the editor control.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.SliderCellType.SetEditorValue(System.Object)">
            <summary>
            Sets the value of the editor control.
            </summary>
            <param name="value">Value of the editor control</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.SliderCellType.StartEditing(System.EventArgs,System.Boolean,System.Boolean)">
            <summary>
            Starts the editing of a cell.
            </summary>
            <param name="e">Event</param>
            <param name="selectAll">Whether to select all </param>
            <param name="autoClipboard">Whether to allow shortcut keys for Clipboard actions </param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.SliderCellType.CancelEditing">
            <summary>
            Cancels the editing of a cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.SliderCellType.StopEditing">
            <summary>
            Stops the editing of a cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.SliderCellType.IsReservedKey(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Specifies if the specified key has special meaning to the editor control.
            </summary>
            <param name="e">KeyEventArgs object containing the event data</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.SliderCellType.IsReservedLocation(System.Drawing.Graphics,System.Int32,System.Int32,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
            <summary>
            Specifies if the specified cursor location has special meaning to the editor control.
            </summary>
            <param name="g">Graphics device interface for drawing editor control </param>
            <param name="x">X-coordinate of pointer location </param>
            <param name="y">Y-coordinate of pointer location </param>
            <param name="rc">Location and size of a rectangular region</param>
            <param name="appearance">Appearance settings for the editor control</param>
            <param name="value">Object containing the name of the editor control</param>
            <param name="zoomFactor">Numeric value for zoom factor for scaling when displaying the editor control</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.SliderCellType.GetReservedCursor(System.Object)">
            <summary>
            Gets the cursor reserved for this cell type.
            </summary>
            <param name="o">Object that is the reserved cursor (pointer)</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.SliderCellType.PaintCell(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Boolean,System.Boolean,System.Single)">
            <summary>
            Paints the cell when not in edit mode to the specified graphics interface with the specified appearance settings.
            </summary>
            <param name="g">Graphics device interface for painting the cell</param>
            <param name="r">Location and size of a rectangular region</param>
            <param name="appearance">Appearance settings for the cell</param>
            <param name="value">Object - name of the renderer</param>
            <param name="isSelected">Whether the cell is selected</param>
            <param name="isLocked">Whether the cell is locked</param>
            <param name="zoomFactor">Numeric value for zoom factor for scaling when painting the cell</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.SliderCellType.GetPreferredSize(System.Drawing.Graphics,System.Drawing.Size,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
            <summary>
            Gets the preferred (maximum needed) size of the cell for the renderer control.
            </summary>
            <param name="g">Graphics device interface for drawing</param>
            <param name="size">Preferred or maximum needed size</param>
            <param name="appearance">Appearance settings</param>
            <param name="value">Object containing the name of the renderer control</param>
            <param name="zoomFactor">Numeric value for zoom factor for scaling the display</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.SliderCellType.Serialize(System.Xml.XmlTextWriter)">
            <summary>
            Saves the object to XML.
            </summary>
            <param name="w">XmlTextWriter to which to write (save) the object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.SliderCellType.Deserialize(System.Xml.XmlNodeReader)">
            <summary>
            Loads the object from XML.
            </summary>
            <param name="r">XmlNodeReader from which to read (load) the object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.SliderCellType.IsValid(System.Object)">
            <summary>
            Determines whether the specified value can be converted to an integer value and 
            is between the minimum and maximum allowed values.
            </summary>
            <param name="value">Value to validate (as object)</param>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.SliderCellType.BackgroundImage">
            <summary>
            Gets or sets the background image for the cell.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.SliderCellType.KnobColor">
            <summary>
            Gets or sets the color of the slider knob.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.SliderCellType.TrackColor">
            <summary>
            Gets or sets the color of the slider track.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.SliderCellType.TrackPicture">
            <summary>
            Gets or sets the image for the slider track.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.SliderCellType.KnobWidth">
            <summary>
            Gets or sets the width (in pixels) of the slider knob.
            </summary>
            <exception cref="T:System.ArgumentException">
            Specified value is out of range; must be between 0 and 255
            </exception>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.SliderCellType.TrackWidth">
            <summary>
            Gets or sets the width (in pixels) of the slider track.
            </summary>
            <exception cref="T:System.ArgumentException">
            Specified value is out of range; must be between 0 and 255
            </exception>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.SliderCellType.KnobPicture">
            <summary>
            Gets or sets the slider knob image.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.SliderCellType.Minimum">
            <summary>
            Gets or sets the minimum value for user entry.
            </summary>   
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.SliderCellType.Maximum">
             <summary>
            Gets or sets the maximum value for user entry.
             </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.SliderCellType.TickSpacing">
            <summary>
            Gets or sets how frequently to space the tick marks.
            </summary>
            <exception cref="T:System.ArgumentException">
            Specified value is out of range; must be between 0 and 255
            </exception>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.SliderCellType.ChangeOnFocus">
            <summary>
            Gets or sets whether the slider moves with the initial click.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.SliderCellType.Orientation">
            <summary>
            Gets or sets the orientation of the slider.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.CellType.ComboBoxCellType">
            <summary>
            Represents an ordinary combo box cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ComboBoxCellType.Clone">
            <summary>
            Creates and returns an ordinary combo box cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ComboBoxCellType.#ctor">
            <summary>
            Creates a new combo box cell with default settings.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ComboBoxCellType.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new combo box cell from serialization.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ComboBoxCellType.ToHorizontalAlignment(FarPoint.Win.Spread.CellHorizontalAlignment)">
            <summary>
            Converts a FarPoint.Win.Spread.CellHorizontalAlignment value to the corresponding FarPoint.Win.HorizontalAlignment value.
            </summary>
            <param name="alignment">FarPoint.Win.Spread.CellHorizontalAlignment value</param>
            <returns>Corresponding FarPoint.Win.HorizontalAlignment value</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ComboBoxCellType.ToVerticalAlignment(FarPoint.Win.Spread.CellVerticalAlignment)">
            <summary>
            Converts a FarPoint.Win.Spread.CellVerticalAlignment value to the corresponding FarPoint.Win.VerticalAlignment value.
            </summary>
            <param name="alignment">FarPoint.Win.Spread.CellVerticalAlignment</param>
            <returns>FarPoint.Win.VerticalAlignment</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ComboBoxCellType.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the cell type.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ComboBoxCellType.ShowSubEditor">
            <summary>
            Shows the subeditor control associated with the cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ComboBoxCellType.Format(System.Object)">
            <summary>
            Formats the specified data into the format of the cell type and returns it as a string.
            </summary>
            <param name="o">Object in the data model to format</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ComboBoxCellType.IsValid(System.Object)">
            <summary>
            Determines whether the specified value is valid.
            </summary>
            <param name="value">Specified value in the editor control</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ComboBoxCellType.Parse(System.String)">
            <summary>
            Parses the specified string to the data type of the cell type and returns it as an object.
            </summary>
            <param name="s">Specified string from the cell on the sheet to parse</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ComboBoxCellType.GetEditorControl(FarPoint.Win.Spread.Appearance,System.Single)">
            <summary>
            Gets the edit control for this cell type with the specified appearance and scaling.
            </summary>
            <param name="appearance">Appearance object that contains the appearance settings</param>
            <param name="zoomFactor">Numeric value for zoom factor for scaling when displaying</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ComboBoxCellType.GetEditorValue">
            <summary>
            Gets the unformatted value in the editor control.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ComboBoxCellType.SetEditorValue(System.Object)">
            <summary>
            Sets the value of the editor control.
            </summary>
            <param name="value">Value of the editor control</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ComboBoxCellType.StartEditing(System.EventArgs,System.Boolean,System.Boolean)">
            <summary>
            Starts the editing of a cell.
            </summary>
            <param name="e">Event</param>
            <param name="selectAll">Whether to select all </param>
            <param name="autoClipboard">Whether to allow shortcut keys for Clipboard actions </param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ComboBoxCellType.CancelEditing">
            <summary>
            Cancels the editing of a cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ComboBoxCellType.StopEditing">
            <summary>
            Stops the editing of a cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ComboBoxCellType.IsReservedKey(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Specifies if the specified key has special meaning to the editor control.
            </summary>
            <param name="e">KeyEventArgs object containing the event data</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ComboBoxCellType.IsReservedLocation(System.Drawing.Graphics,System.Int32,System.Int32,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
            <summary>
            Specifies if the specified cursor location has special meaning to the editor control.
            </summary>
            <param name="g">Graphics device interface for drawing editor control </param>
            <param name="x">X-coordinate of pointer location </param>
            <param name="y">Y-coordinate of pointer location </param>
            <param name="rc">Location and size of a rectangular region</param>
            <param name="appearance">Appearance settings for the editor control</param>
            <param name="value">Object containing the name of the editor control</param>
            <param name="zoomFactor">Numeric value for zoom factor for scaling when displaying the editor control</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ComboBoxCellType.GetReservedCursor(System.Object)">
            <summary>
            Gets the cursor reserved for this cell type.
            </summary>
            <param name="o">Object that is the reserved cursor (pointer)</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ComboBoxCellType.GetTextRectangle(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Font,FarPoint.Win.Spread.Appearance,System.Drawing.Rectangle@,System.String)">
            <summary>
            Gets the rectangle in which text is drawn.
            </summary>
            <param name="g">Graphics device interface for drawing the text</param>
            <param name="r">Cell rectangle</param>
            <param name="f">Font</param>
            <param name="appearance">Appearance</param>
            <param name="rText">Text rectangle returned</param>
            <param name="paintString">String to be painted</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ComboBoxCellType.PaintCell(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Boolean,System.Boolean,System.Single)">
            <summary>
            Paints the cell when not in edit mode to the specified graphics interface with the specified appearance settings.
            </summary>
            <param name="g">Graphics device interface for painting the cell</param>
            <param name="r">Location and size of a rectangular region</param>
            <param name="appearance">Appearance settings for the cell</param>
            <param name="value">Object - name of the renderer</param>
            <param name="isSelected">Whether the cell is selected</param>
            <param name="isLocked">Whether the cell is locked</param>
            <param name="zoomFactor">Numeric value for zoom factor for scaling when painting the cell</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ComboBoxCellType.GetPreferredSize(System.Drawing.Graphics,System.Drawing.Size,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
            <summary>
            Gets the preferred (maximum needed) size of the cell for the renderer control.
            </summary>
            <param name="g">Graphics device interface for drawing</param>
            <param name="size">Preferred or maximum needed size</param>
            <param name="appearance">Appearance settings</param>
            <param name="value">Object containing the name of the renderer control</param>
            <param name="zoomFactor">Numeric value for zoom factor for scaling the display</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ComboBoxCellType.Clear">
            <summary>
            Removes all items from the list.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ComboBoxCellType.RemoveItem(System.Int32)">
            <summary>
            Removes the individual item specified by index from the list.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ComboBoxCellType.Serialize(System.Xml.XmlTextWriter)">
            <summary>
            Saves the object to XML.
            </summary>
            <param name="w">XmlTextWriter to which to write (save) the object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ComboBoxCellType.Deserialize(System.Xml.XmlNodeReader)">
            <summary>
            Loads the object from XML.
            </summary>
            <param name="r">XmlNodeReader from which to read (load) the object</param>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.ComboBoxCellType.CharacterCasing">
            <summary>
            Gets or sets the case of characters in the text cell.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.ComboBoxCellType.CharacterSet">
            <summary>
            Gets or sets what characters to allow for the text cell.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.ComboBoxCellType.ButtonAlign">
            <summary>
            Gets or sets where buttons are displayed.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.ComboBoxCellType.EditorValue">
            <summary>
            Gets or sets what value is written to the underlying data model.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.ComboBoxCellType.ListAlignment">
            <summary>
            Gets or sets the side of the cell on which the list aligns.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.ComboBoxCellType.ImageList">
            <summary>
            Gets or sets the image list of a combo box. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.ComboBoxCellType.ListControl">
            <summary>
            Gets or sets the control to use for the list portion. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.ComboBoxCellType.AcceptsArrowKeys">
            <summary>
            Gets or sets how arrow keys are processed by the combo box control.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.ComboBoxCellType.Editable">
            <summary>
            Gets or sets whether you can type into the edit portion of the combo box.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.ComboBoxCellType.ListOffset">
            <summary>
            Gets or sets how many pixels to offset the list from the aligned edge of the cell.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.ComboBoxCellType.ListWidth">
            <summary>
            Gets or sets the width (in pixels) of the drop-down list.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.ComboBoxCellType.MaxLength">
            <summary>
            Gets or sets the maximum number of characters allowed in the combo box cell.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.ComboBoxCellType.AutoSearch">
            <summary>
            Gets or sets how a list of items in a combo box is searched based on input of a character key.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.ComboBoxCellType.MaxDrop">
            <summary>
            Gets or sets the number of items to display at one time in the list portion.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.ComboBoxCellType.Items">
            <summary>
            Gets or sets the items to use for the drop-down list in the combo box.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.ComboBoxCellType.ItemData">
            <summary>
            Gets or sets the ItemData to use for the drop-down list in the combo box.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.ComboBoxCellType.BackgroundImage">
            <summary>
            Gets or sets the image to paint in the background of the combo box edit portion.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.CellType.HyperLinkCellType">
            <summary>
            Represents the hyperlink cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.HyperLinkCellType.Clone">
            <summary>
            Creates and returns a hyperlink cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.HyperLinkCellType.#ctor">
            <summary>
            Creates a new hyperlink cell with default settings.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.HyperLinkCellType.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new hyperlink cell from serialization.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.HyperLinkCellType.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the cell type.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.HyperLinkCellType.Format(System.Object)">
            <summary>
            Formats the specified data into the format of the cell type and returns it as a string.
            </summary>
            <param name="o">Object in the data model to format</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.HyperLinkCellType.Parse(System.String)">
            <summary>
            Parses the specified string to the data type of the cell type and returns it as an object.
            </summary>
            <param name="s">Specified string from the cell on the sheet to parse</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.HyperLinkCellType.ToHorizontalAlignment(FarPoint.Win.Spread.CellHorizontalAlignment)">
            <summary>
            Converts a FarPoint.Win.Spread.CellHorizontalAlignment value to the corresponding FarPoint.Win.HorizontalAlignment value.
            </summary>
            <param name="alignment">FarPoint.Win.Spread.CellHorizontalAlignment value</param>
            <returns>Corresponding FarPoint.Win.HorizontalAlignment value</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.HyperLinkCellType.ToVerticalAlignment(FarPoint.Win.Spread.CellVerticalAlignment)">
            <summary>
            Converts a FarPoint.Win.Spread.CellVerticalAlignment value to the corresponding FarPoint.Win.VerticalAlignment value.
            </summary>
            <param name="alignment">FarPoint.Win.Spread.CellVerticalAlignment</param>
            <returns>FarPoint.Win.VerticalAlignment</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.HyperLinkCellType.GetEditorControl(FarPoint.Win.Spread.Appearance,System.Single)">
            <summary>
            Gets the edit control for this cell type with the specified appearance and scaling.
            </summary>
            <param name="appearance">Appearance object that contains the appearance settings</param>
            <param name="zoomFactor">Numeric value for zoom factor for scaling when displaying</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.HyperLinkCellType.GetEditorValue">
            <summary>
            Gets the unformatted value in the editor control.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.HyperLinkCellType.SetEditorValue(System.Object)">
            <summary>
            Sets the value of the editor control.
            </summary>
            <param name="value">Value of the editor control</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.HyperLinkCellType.StartEditing(System.EventArgs,System.Boolean,System.Boolean)">
            <summary>
            Starts the editing of a cell.
            </summary>
            <param name="e">Event</param>
            <param name="selectAll">Whether to select all </param>
            <param name="autoClipboard">Whether to allow shortcut keys for Clipboard actions </param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.HyperLinkCellType.CancelEditing">
            <summary>
            Cancels the editing of a cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.HyperLinkCellType.StopEditing">
            <summary>
            Stops the editing of a cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.HyperLinkCellType.IsReservedKey(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Specifies if the specified key has special meaning to the editor control.
            </summary>
            <param name="e">KeyEventArgs object containing the event data</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.HyperLinkCellType.IsReservedLocation(System.Drawing.Graphics,System.Int32,System.Int32,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
            <summary>
            Specifies if the specified cursor location has special meaning to the editor control.
            </summary>
            <param name="g">Graphics device interface for drawing editor control </param>
            <param name="x">X-coordinate of pointer location </param>
            <param name="y">Y-coordinate of pointer location </param>
            <param name="rc">Location and size of a rectangular region</param>
            <param name="appearance">Appearance settings for the editor control</param>
            <param name="value">Object containing the name of the editor control</param>
            <param name="zoomFactor">Numeric value for zoom factor for scaling when displaying the editor control</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.HyperLinkCellType.GetReservedCursor(System.Object)">
            <summary>
            Gets the cursor reserved for this cell type.
            </summary>
            <param name="o">Object that is the reserved cursor (pointer)</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.HyperLinkCellType.PaintCell(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Boolean,System.Boolean,System.Single)">
            <summary>
            Paints the cell when not in edit mode to the specified graphics interface with the specified appearance settings.
            </summary>
            <param name="g">Graphics device interface for painting the cell</param>
            <param name="r">Location and size of a rectangular region</param>
            <param name="appearance">Appearance settings for the cell</param>
            <param name="value">Object - name of the renderer</param>
            <param name="isSelected">Whether the cell is selected</param>
            <param name="isLocked">Whether the cell is locked</param>
            <param name="zoomFactor">Numeric value for zoom factor for scaling when painting the cell</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.HyperLinkCellType.GetPreferredSize(System.Drawing.Graphics,System.Drawing.Size,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
            <summary>
            Gets the preferred (maximum needed) size of the cell for the renderer control.
            </summary>
            <param name="g">Graphics device interface for drawing</param>
            <param name="size">Preferred or maximum needed size</param>
            <param name="appearance">Appearance settings</param>
            <param name="value">Object containing the name of the renderer control</param>
            <param name="zoomFactor">Numeric value for zoom factor for scaling the display</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.HyperLinkCellType.Serialize(System.Xml.XmlTextWriter)">
            <summary>
            Saves the object to XML.
            </summary>
            <param name="w">XmlTextWriter to which to write (save) the object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.HyperLinkCellType.Deserialize(System.Xml.XmlNodeReader)">
            <summary>
            Loads the object from XML.
            </summary>
            <param name="r">XmlNodeReader from which to read (load) the object</param>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.HyperLinkCellType.BackgroundImage">
            <summary>
            Gets or sets the background image for the cell.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.HyperLinkCellType.Link">
            <summary>
            Gets or sets the hyperlink.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.HyperLinkCellType.LinkArea">
            <summary>
            Gets or sets the area of the text that is the hyperlink.
            </summary>
            <exception cref="T:System.ArgumentException">
            Specified start is invalid; must be positive
            </exception>
            <exception cref="T:System.ArgumentException">
            Specified length is invalid; must be positive
            </exception>
            <exception cref="T:System.ArgumentException">
            Specified length is invalid; must be less than or equal to the length of the entire text
            </exception>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.HyperLinkCellType.Links">
            <summary>
            Gets or sets the hyperlinks.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.HyperLinkCellType.Text">
            <summary>
            Gets or sets the text string.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.HyperLinkCellType.VisitedLinkColor">
            <summary>
            Gets or sets the color of visited links.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.HyperLinkCellType.LinkColor">
            <summary>
            Gets or sets the color of links.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.HyperLinkCellType.LinkAreas">
            <summary>
            Gets or sets the area of the text that is the hyperlink.
            </summary>
            <exception cref="T:System.ArgumentException">
            Specified start is invalid; must be positive
            </exception>
            <exception cref="T:System.ArgumentException">
            Specified length is invalid; must be positive
            </exception>
            <exception cref="T:System.ArgumentException">
            Specified length is invalid; must be less than or equal to the length of the entire text
            </exception>
        </member>
        <member name="T:FarPoint.Win.Spread.CellType.ProgressCellType">
            <summary>
            Represents a progress indicator cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ProgressCellType.Clone">
            <summary>
            Creates and returns a progress indicator cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ProgressCellType.#ctor">
            <summary>
            Creates a new progress indicator cell with default settings.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ProgressCellType.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new progress indicator cell from serialization.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ProgressCellType.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the cell type.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ProgressCellType.ToHorizontalAlignment(FarPoint.Win.Spread.CellHorizontalAlignment)">
            <summary>
            Converts a FarPoint.Win.Spread.CellHorizontalAlignment value to the corresponding FarPoint.Win.HorizontalAlignment value.
            </summary>
            <param name="alignment">FarPoint.Win.Spread.CellHorizontalAlignment value</param>
            <returns>Corresponding FarPoint.Win.HorizontalAlignment value</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ProgressCellType.ToVerticalAlignment(FarPoint.Win.Spread.CellVerticalAlignment)">
            <summary>
            Converts a FarPoint.Win.Spread.CellVerticalAlignment value to the corresponding FarPoint.Win.VerticalAlignment value.
            </summary>
            <param name="alignment">FarPoint.Win.Spread.CellVerticalAlignment</param>
            <returns>FarPoint.Win.VerticalAlignment</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ProgressCellType.Format(System.Object)">
            <summary>
            Formats the specified data into the format of the cell type and returns it as a string.
            </summary>
            <param name="o">Object in the data model to format</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ProgressCellType.Parse(System.String)">
            <summary>
            Parses the specified string to the data type of the cell type and returns it as an object.
            </summary>
            <param name="s">Specified string from the cell on the sheet to parse</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ProgressCellType.GetEditorControl(FarPoint.Win.Spread.Appearance,System.Single)">
            <summary>
            Gets the edit control for this cell type with the specified appearance and scaling.
            </summary>
            <param name="appearance">Appearance object that contains the appearance settings</param>
            <param name="zoomFactor">Numeric value for zoom factor for scaling when displaying</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ProgressCellType.GetEditorValue">
            <summary>
            Gets the unformatted value in the editor control.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ProgressCellType.SetEditorValue(System.Object)">
            <summary>
            Sets the value of the editor control.
            </summary>
            <param name="value">Value of the editor control</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ProgressCellType.StartEditing(System.EventArgs,System.Boolean,System.Boolean)">
            <summary>
            Starts the editing of a cell.
            </summary>
            <param name="e">Event</param>
            <param name="selectAll">Whether to select all </param>
            <param name="autoClipboard">Whether to allow shortcut keys for Clipboard actions </param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ProgressCellType.CancelEditing">
            <summary>
            Cancels the editing of a cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ProgressCellType.StopEditing">
            <summary>
            Stops the editing of a cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ProgressCellType.IsReservedKey(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Specifies if the specified key has special meaning to the editor control.
            </summary>
            <param name="e">KeyEventArgs object containing the event data</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ProgressCellType.IsReservedLocation(System.Drawing.Graphics,System.Int32,System.Int32,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
            <summary>
            Specifies if the specified cursor location has special meaning to the editor control.
            </summary>
            <param name="g">Graphics device interface for drawing editor control </param>
            <param name="x">X-coordinate of pointer location </param>
            <param name="y">Y-coordinate of pointer location </param>
            <param name="rc">Location and size of a rectangular region</param>
            <param name="appearance">Appearance settings for the editor control</param>
            <param name="value">Object containing the name of the editor control</param>
            <param name="zoomFactor">Numeric value for zoom factor for scaling when displaying the editor control</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ProgressCellType.GetReservedCursor(System.Object)">
            <summary>
            Gets the cursor reserved for this cell type.
            </summary>
            <param name="o">Object that is the reserved cursor (pointer)</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ProgressCellType.PaintCell(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Boolean,System.Boolean,System.Single)">
            <summary>
            Paints the cell when not in edit mode to the specified graphics interface with the specified appearance settings.
            </summary>
            <param name="g">Graphics device interface for painting the cell</param>
            <param name="r">Location and size of a rectangular region</param>
            <param name="appearance">Appearance settings for the cell</param>
            <param name="value">Object - name of the renderer</param>
            <param name="isSelected">Whether the cell is selected</param>
            <param name="isLocked">Whether the cell is locked</param>
            <param name="zoomFactor">Numeric value for zoom factor for scaling when painting the cell</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ProgressCellType.GetPreferredSize(System.Drawing.Graphics,System.Drawing.Size,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
            <summary>
            Gets the preferred (maximum needed) size of the cell for the renderer control.
            </summary>
            <param name="g">Graphics device interface for drawing</param>
            <param name="size">Preferred or maximum needed size</param>
            <param name="appearance">Appearance settings</param>
            <param name="value">Object containing the name of the renderer control</param>
            <param name="zoomFactor">Numeric value for zoom factor for scaling the display</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ProgressCellType.Serialize(System.Xml.XmlTextWriter)">
            <summary>
            Saves the object to XML.
            </summary>
            <param name="w">XmlTextWriter to which to write (save) the object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ProgressCellType.Deserialize(System.Xml.XmlNodeReader)">
            <summary>
            Loads the object from XML.
            </summary>
            <param name="r">XmlNodeReader from which to read (load) the object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ProgressCellType.IsValid(System.Object)">
            <summary>
            Determines whether the specified value can be converted to an integer value and 
            is between the minimum and maximum allowed values.
            </summary>
            <param name="value">Value to validate (as object)</param>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.ProgressCellType.BackgroundImage">
            <summary>
            Gets or sets the background image for the cell.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.ProgressCellType.Orientation">
            <summary>
            Gets or sets the orientation of the progress bar.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.ProgressCellType.TextStyle">
            <summary>
            Gets or sets how the text portion of the progress bar is displayed.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.ProgressCellType.Text">
            <summary>
            Gets or sets the string to use when TextStyle is set to Custom.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.ProgressCellType.Style">
            <summary>
            Gets or sets the style of the progress bar(s).
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.ProgressCellType.ShowText">
            <summary>
            Gets or sets whether the percent filled string is displayed.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.ProgressCellType.Maximum">
            <summary>
            Gets or sets the maximum value for user entry.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.ProgressCellType.Minimum">
            <summary>
            Gets or sets the minimum value for user entry.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.ProgressCellType.FillColor">
            <summary>
            Gets or sets the color to use for the progress bar.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.ProgressCellType.FillTextColor">
            <summary>
            Gets or sets the color to use for the progress bar.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.CellType.MultiOptionCellType">
            <summary>
            Represents a multiple option button cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.MultiOptionCellType.Clone">
            <summary>
            Creates and returns a multiple option button cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.MultiOptionCellType.#ctor">
            <summary>
            Creates a new multiple option button cell with default settings.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.MultiOptionCellType.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new multiple option button cell from serialization.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.MultiOptionCellType.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the cell type.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.MultiOptionCellType.ToHorizontalAlignment(FarPoint.Win.Spread.CellHorizontalAlignment)">
            <summary>
            Converts a FarPoint.Win.Spread.CellHorizontalAlignment value to the corresponding FarPoint.Win.HorizontalAlignment value.
            </summary>
            <param name="alignment">FarPoint.Win.Spread.CellHorizontalAlignment value</param>
            <returns>Corresponding FarPoint.Win.HorizontalAlignment value</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.MultiOptionCellType.ToVerticalAlignment(FarPoint.Win.Spread.CellVerticalAlignment)">
            <summary>
            Converts a FarPoint.Win.Spread.CellVerticalAlignment value to the corresponding FarPoint.Win.VerticalAlignment value.
            </summary>
            <param name="alignment">FarPoint.Win.Spread.CellVerticalAlignment</param>
            <returns>FarPoint.Win.VerticalAlignment</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.MultiOptionCellType.Format(System.Object)">
            <summary>
            Formats the specified data into the format of the cell type and returns it as a string.
            </summary>
            <param name="o">Object in the data model to format</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.MultiOptionCellType.Parse(System.String)">
            <summary>
            Parses the specified string to the data type of the cell type and returns it as an object.
            </summary>
            <param name="s">Specified string from the cell on the sheet to parse</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.MultiOptionCellType.GetEditorControl(FarPoint.Win.Spread.Appearance,System.Single)">
            <summary>
            Gets the edit control for this cell type with the specified appearance and scaling.
            </summary>
            <param name="appearance">Appearance object that contains the appearance settings</param>
            <param name="zoomFactor">Numeric value for zoom factor for scaling when displaying</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.MultiOptionCellType.GetEditorValue">
            <summary>
            Gets the unformatted value in the editor control.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.MultiOptionCellType.SetEditorValue(System.Object)">
            <summary>
            Sets the value of the editor control.
            </summary>
            <param name="value">Value of the editor control</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.MultiOptionCellType.StartEditing(System.EventArgs,System.Boolean,System.Boolean)">
            <summary>
            Starts the editing of a cell.
            </summary>
            <param name="e">Event</param>
            <param name="selectAll">Whether to select all </param>
            <param name="autoClipboard">Whether to allow shortcut keys for Clipboard actions </param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.MultiOptionCellType.CancelEditing">
            <summary>
            Cancels the editing of a cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.MultiOptionCellType.StopEditing">
            <summary>
            Stops the editing of a cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.MultiOptionCellType.IsReservedKey(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Specifies if the specified key has special meaning to the editor control.
            </summary>
            <param name="e">KeyEventArgs object containing the event data</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.MultiOptionCellType.IsReservedLocation(System.Drawing.Graphics,System.Int32,System.Int32,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
            <summary>
            Specifies if the specified cursor location has special meaning to the editor control.
            </summary>
            <param name="g">Graphics device interface for drawing editor control </param>
            <param name="x">X-coordinate of pointer location </param>
            <param name="y">Y-coordinate of pointer location </param>
            <param name="rc">Location and size of a rectangular region</param>
            <param name="appearance">Appearance settings for the editor control</param>
            <param name="value">Object containing the name of the editor control</param>
            <param name="zoomFactor">Numeric value for zoom factor for scaling when displaying the editor control</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.MultiOptionCellType.GetReservedCursor(System.Object)">
            <summary>
            Gets the cursor reserved for this cell type.
            </summary>
            <param name="o">Object that is the reserved cursor (pointer)</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.MultiOptionCellType.PaintCell(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Boolean,System.Boolean,System.Single)">
            <summary>
            Paints the cell when not in edit mode to the specified graphics interface with the specified appearance settings.
            </summary>
            <param name="g">Graphics device interface for painting the cell</param>
            <param name="r">Location and size of a rectangular region</param>
            <param name="appearance">Appearance settings for the cell</param>
            <param name="value">Object - name of the renderer</param>
            <param name="isSelected">Whether the cell is selected</param>
            <param name="isLocked">Whether the cell is locked</param>
            <param name="zoomFactor">Numeric value for zoom factor for scaling when painting the cell</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.MultiOptionCellType.GetPreferredSize(System.Drawing.Graphics,System.Drawing.Size,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
            <summary>
            Gets the preferred (maximum needed) size of the cell for the renderer control.
            </summary>
            <param name="g">Graphics device interface for drawing</param>
            <param name="size">Preferred or maximum needed size</param>
            <param name="appearance">Appearance settings</param>
            <param name="value">Object containing the name of the renderer control</param>
            <param name="zoomFactor">Numeric value for zoom factor for scaling the display</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.MultiOptionCellType.Serialize(System.Xml.XmlTextWriter)">
            <summary>
            Saves the object to XML.
            </summary>
            <param name="w">XmlTextWriter to which to write (save) the object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.MultiOptionCellType.Deserialize(System.Xml.XmlNodeReader)">
            <summary>
            Loads the object from XML.
            </summary>
            <param name="r">XmlNodeReader from which to read (load) the object</param>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.MultiOptionCellType.ItemData">
            <summary>
            Gets or sets the ItemData to use for the list.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.MultiOptionCellType.EditorValue">
            <summary>
            Gets or sets what value is written to the underlying data model.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.MultiOptionCellType.BackgroundImage">
            <summary>
            Gets or sets the background image for the cell.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.MultiOptionCellType.UseMnemonic">
            <summary>
            Gets or sets whether hot keys are used in the cell.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.MultiOptionCellType.TextAlign">
            <summary>
            Gets or sets how text aligns in the cell.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.MultiOptionCellType.Orientation">
            <summary>
            Gets or sets the orientation of the option buttons.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.MultiOptionCellType.Items">
            <summary>
            Gets or sets the list to use for the option buttons.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.MultiOptionCellType.Picture">
            <summary>
            Gets or sets the option button images.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.CellType.CurrencyCellType">
            <summary>
            Represents a numeric cell formatted as currency.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.CurrencyCellType.Clone">
            <summary>
            Creates and returns a currency cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.CurrencyCellType.#ctor">
            <summary>
            Creates a new currency cell with default settings.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.CurrencyCellType.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new currency cell from serialization.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.CurrencyCellType.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the cell type.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.CurrencyCellType.ApplyNegativeFormat">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.CurrencyCellType.GetEditorControl(FarPoint.Win.Spread.Appearance,System.Single)">
            <summary>
            Gets the edit control for this cell type with the specified appearance and scaling.
            </summary>
            <param name="appearance">Appearance object that contains the appearance settings</param>
            <param name="zoomFactor">Numeric value for zoom factor for scaling when displaying</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.CurrencyCellType.Parse(System.String)">
            <summary>
            Parses the specified string to the data type of the cell type and returns it as an object.
            </summary>
            <param name="s">Specified string from the cell on the sheet to parse</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.CurrencyCellType.SetCalculatorText(System.String,System.String)">
            <summary>
            Sets the text for the pop-up calculator.
            </summary>
            <param name="okText">Text for the OK button</param>
            <param name="cancelText">Text for the Cancel button</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.CurrencyCellType.GetNegativeFormatValue">
            <summary>
            Internal use only.
            </summary>
            <returns>CurrencyNegativeFormat</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.CurrencyCellType.ApplyPositiveFormat">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.CurrencyCellType.GetPositiveFormatValue">
            <summary>
            Internal use only.
            </summary>
            <returns>CurrencyPositiveFormat</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.CurrencyCellType.GetCurrencySymbolString">
            <summary>
            Internal use only.
            </summary>
            <returns>string</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.CurrencyCellType.GetNewFormat">
            <summary>
            Gets the format string to use for formatting currency values.
            </summary>
            <returns>string</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.CurrencyCellType.SetNewFormat">
            <summary>
            Sets the new format string (returned by GetNewFormat) into the internal cell formatter.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.CurrencyCellType.GetDecimalPlacesValue">
            <summary>
            Internal use only.
            </summary>
            <returns>int</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.CurrencyCellType.GetDecimalSeparatorString">
            <summary>
            Internal use only.
            </summary>
            <returns>string</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.CurrencyCellType.GetSeparatorCharacter">
            <summary>
            Gets the separator character to use when formatting currency values.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.CurrencyCellType.Serialize(System.Xml.XmlTextWriter)">
            <summary>
            Saves the object to XML.
            </summary>
            <param name="w">XmlTextWriter to which to write (save) the object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.CurrencyCellType.Deserialize(System.Xml.XmlNodeReader)">
            <summary>
            Loads the object from XML.
            </summary>
            <param name="r">XmlNodeReader from which to read (load) the object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.CurrencyCellType.IsValid(System.Object)">
            <summary>
            Determines whether the specified value can be converted to a decimal value and is between 
            the minimum and maximum allowed value.
            </summary>
            <param name="value">Value to validate (as object)</param>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.CurrencyCellType.CurrencySymbol">
            <summary>
            Gets or sets the string to use as the currency symbol in currency values.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.CurrencyCellType.NegativeFormat">
            <summary>
            Gets or sets the format for displaying a negative value.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.CurrencyCellType.PositiveFormat">
            <summary>
            Gets or sets the format for displaying a positive value.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.CurrencyCellType.LeadingZero">
            <summary>
            Gets or sets whether leading zeros are displayed.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.CurrencyCellType.SpinIntegerIncrement">
            <summary>
            Gets or sets the amount by which the value increments when using the 
            spin buttons and the cursor is in the integer portion.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.CurrencyCellType.SpinDecimalIncrement">
            <summary>
            Gets or sets the amount by which the value increments when using the 
            spin buttons and the cursor is in the decimal portion.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.CurrencyCellType.SpinButton">
            <summary>
            Gets or sets whether a spin button is displayed when editing.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.CurrencyCellType.SpinWrap">
            <summary>
            Gets or sets whether the value wraps when the minimum or maximum is reached.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.CurrencyCellType.DecimalSeparator">
            <summary>
            Gets or sets the decimal character.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.CurrencyCellType.DecimalPlaces">
            <summary>
            Gets or sets the number of decimal places.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.CurrencyCellType.NegativeRed">
            <summary>
            Gets or sets whether negative numeric values are displayed in red.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.CurrencyCellType.FixedPoint">
            <summary>
            Gets or sets whether the value displays placeholder zeros in the decimal portion of the number.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.CurrencyCellType.MaximumValue">
            <summary>
            Gets or sets the maximum value allowed for user entry.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified value is beyond accepted limits
            </exception>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.CurrencyCellType.MinimumValue">
            <summary>
            Gets or sets the minimum value allowed for user entry.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified value is beyond accepted limits
            </exception>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.CurrencyCellType.Separator">
            <summary>
            Gets or sets the string used to separate thousands in a numeric value.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.CurrencyCellType.ShowSeparator">
            <summary>
            Gets or sets whether to display the thousands separator string.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.CurrencyCellType.ShowCurrencySymbol">
            <summary>
            Gets or sets whether to display the currency symbol.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.CellType.IHeaderImages">
            <summary>
            Interface for supporting user modifiable images in headers
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.CellType.ColumnHeaderRenderer">
            <summary>
            Represents the painter of column header cells.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ColumnHeaderRenderer.#ctor">
            <summary>
            Creates a new column header renderer.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ColumnHeaderRenderer.PaintSortIndicator(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Single)">
            <summary>
            Paints the sorting indicator in the column header with the specified appearance settings.
            </summary>
            <param name="g">Graphics device interface for painting the indicator</param>
            <param name="r">Location and size of the rectangular region in which to paint the indicator</param>
            <param name="appearance">Appearance settings for painting the indicator</param>
            <param name="zoomFactor">Numeric value for scaling when painting the indicator</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ColumnHeaderRenderer.PaintFilterIndicator(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Single)">
            <summary>
            Paints the filtering indicator in the column header with the specified appearance settings.
            </summary>
            <param name="g">Graphics device interface for painting the indicator</param>
            <param name="r">Location and size of the rectangular region in which to paint the indicator</param>
            <param name="appearance">Appearance settings for painting the indicator</param>
            <param name="zoomFactor">Numeric value for scaling when painting the indicator</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ColumnHeaderRenderer.ToHorizontalAlignment(FarPoint.Win.Spread.CellHorizontalAlignment)">
            <summary>
            Converts a FarPoint.Win.Spread.CellHorizontalAlignment value 
            to the corresponding FarPoint.Win.HorizontalAlignment value.
            </summary>
            <param name="alignment">FarPoint.Win.Spread.CellHorizontalAlignment value</param>
            <returns>Corresponding FarPoint.Win.HorizontalAlignment value</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ColumnHeaderRenderer.ToVerticalAlignment(FarPoint.Win.Spread.CellVerticalAlignment)">
            <summary>
            Converts a FarPoint.Win.Spread.CellVerticalAlignment value 
            to the corresponding FarPoint.Win.VerticalAlignment value.
            </summary>
            <param name="alignment">FarPoint.Win.Spread.CellVerticalAlignment</param>
            <returns>FarPoint.Win.VerticalAlignment</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ColumnHeaderRenderer.PaintCell(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Boolean,System.Boolean,System.Single)">
            <summary>
            Paints the column header when not in edit mode to the specified graphics interface 
            with the specified appearance settings.
            </summary>
            <param name="g">Graphics device interface for painting the column header</param>
            <param name="r">Location and size of a rectangular region for painting the column header</param>
            <param name="appearance">Appearance settings for painting the column header</param>
            <param name="value">Renderer object for painting the column header</param>
            <param name="isSelected">Whether the column header cell is selected</param>
            <param name="isLocked">Whether the column header cell is locked</param>
            <param name="zoomFactor">Numeric value for scaling when painting the column header</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ColumnHeaderRenderer.GetImageBox(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Font,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,System.String,FarPoint.Win.ButtonTextAlign,System.Drawing.Image)">
            <summary>
            Returns information about the image.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ColumnHeaderRenderer.GetPreferredSize(System.Drawing.Graphics,System.Drawing.Size,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
            <summary>
            Gets the preferred (maximum needed) size of the cell for the renderer control.
            </summary>
            <param name="g">Graphics device interface for drawing</param>
            <param name="size">Preferred or maximum needed size</param>
            <param name="appearance">Appearance settings</param>
            <param name="value">Object containing the name of the renderer control</param>
            <param name="zoomFactor">Numeric value for zoom factor for scaling the display</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ColumnHeaderRenderer.CanOverflow">
            <summary>
            Determines whether data in cells can overflow into adjacent cells.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ColumnHeaderRenderer.CanBeOverflown">
            <summary>
            Determines whether data in adjacent cells can overflow these cells.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.ColumnHeaderRenderer.Images">
            <summary>
            Gets or sets user override images for the headers.  Use the SpreadView static image constants for the array indexes.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.CellType.PercentCellType">
            <summary>
            Represents a numeric cell formatted as a percent value.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.PercentCellType.Clone">
            <summary>
            Creates and returns a percent cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.PercentCellType.#ctor">
            <summary>
            Creates a new percent cell with default settings.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.PercentCellType.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new percent cell from serialization.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.PercentCellType.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the cell type.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.PercentCellType.ApplyNegativeFormat">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.PercentCellType.SetCalculatorText(System.String,System.String)">
            <summary>
            Sets the text for the pop-up calculator.
            </summary>
            <param name="okText">Text for the OK button</param>
            <param name="cancelText">Text for the Cancel button</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.PercentCellType.GetNegativeFormatValue">
            <summary>
            Internal use only.
            </summary>
            <returns>PercentNegativeFormat</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.PercentCellType.ApplyPositiveFormat">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.PercentCellType.GetPositiveFormatValue">
            <summary>
            Internal use only.
            </summary>
            <returns>PercentPositiveFormat</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.PercentCellType.GetPercentSignString">
            <summary>
            Gets the percent symbol string to use when formatting percent values.
            </summary>
            <returns>string</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.PercentCellType.GetNewFormat">
            <summary>
            Gets the new format string to use when formatting percent values.
            </summary>
            <returns>string</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.PercentCellType.SetNewFormat">
            <summary>
            Sets the new format (returned by GetNewFormat) into the internal cell formatter.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.PercentCellType.GetDecimalPlacesValue">
            <summary>
            Internal use only.
            </summary>
            <returns>int</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.PercentCellType.GetDecimalSeparatorString">
            <summary>
            Internal use only.
            </summary>
            <returns>string</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.PercentCellType.GetSeparatorCharacter">
            <summary>
            Gets the separator character string to use when formatting percent values.
            </summary>
            <returns>string</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.PercentCellType.Format(System.Object)">
            <summary>
            Formats the specified data into the format of the cell type and returns it as a string.
            </summary>
            <param name="obj">Object in the data model with cell data to format</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.PercentCellType.GetEditorControl(FarPoint.Win.Spread.Appearance,System.Single)">
            <summary>
            Gets the edit control for this cell type with the specified appearance and scaling.
            </summary>
            <param name="appearance">Appearance object that contains the appearance settings</param>
            <param name="zoomFactor">Numeric value for zoom factor for scaling when displaying</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.PercentCellType.GetEditorValue">
            <summary>
            Gets the unformatted value in the editor control.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.PercentCellType.SetEditorValue(System.Object)">
            <summary>
            Sets the value of the editor control.
            </summary>
            <param name="value">Value of the editor control</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.PercentCellType.Serialize(System.Xml.XmlTextWriter)">
            <summary>
            Saves the object to XML.
            </summary>
            <param name="w">XmlTextWriter to which to write (save) the object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.PercentCellType.Deserialize(System.Xml.XmlNodeReader)">
            <summary>
            Loads the object from XML.
            </summary>
            <param name="r">XmlNodeReader from which to read (load) the object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.PercentCellType.IsValid(System.Object)">
            <summary>
            Determines whether the specified value can be converted to a double-precision, 
            floating point value and is between the minimum and maximum allowed values.
            </summary>
            <param name="value">Value to validate (as object)</param>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.PercentCellType.NegativeFormat">
            <summary>
            Gets or sets the format for displaying a negative value.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.PercentCellType.PositiveFormat">
            <summary>
            Gets or sets the format for displaying a positive value.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.PercentCellType.PercentSign">
            <summary>
            Gets or sets the character to display as the percent sign.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.PercentCellType.LeadingZero">
            <summary>
            Gets or sets whether leading zeros are displayed.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.PercentCellType.SpinIntegerIncrement">
            <summary>
            Gets or sets the amount by which the value increments when using the 
            spin buttons and the cursor is in the integer portion.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.PercentCellType.SpinDecimalIncrement">
            <summary>
            Gets or sets the amount by which the value increments when using the 
            spin buttons and the cursor is in the decimal portion.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.PercentCellType.SpinButton">
            <summary>
            Gets or sets whether a spin button is displayed when editing.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.PercentCellType.SpinWrap">
            <summary>
            Gets or sets whether the value wraps when the minimum or maximum is reached.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.PercentCellType.DecimalSeparator">
            <summary>
            Gets or sets the decimal character.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.PercentCellType.DecimalPlaces">
            <summary>
            Gets or sets the number of decimal places.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.PercentCellType.NegativeRed">
            <summary>
            Gets or sets whether negative numeric values are displayed in red.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.PercentCellType.FixedPoint">
            <summary>
            Gets or sets whether the value displays placeholder zeros in the decimal portion of the number.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.PercentCellType.MaximumValue">
            <summary>
            Gets or sets the maximum value allowed for user entry.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified value exceeds the expected limit.
            </exception>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.PercentCellType.MinimumValue">
            <summary>
            Gets or sets the minimum value allowed for user entry.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified value is beyond accepted limits
            </exception>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.PercentCellType.Separator">
            <summary>
            Gets or sets the string used to separate thousands in a numeric value.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.PercentCellType.ShowSeparator">
            <summary>
            Gets or sets whether to display the thousands separator string.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.CellType.RegularExpressionCellType">
            <summary>
            Represents a regular expression cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.RegularExpressionCellType.Clone">
            <summary>
            Creates and returns a regular expression cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.RegularExpressionCellType.#ctor">
            <summary>
            Creates a new regular expression cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.RegularExpressionCellType.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new regular expression cell from serialization.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.RegularExpressionCellType.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the cell type.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.RegularExpressionCellType.Format(System.Object)">
            <summary>
            Formats the specified data into the format of the cell type and returns it as a string.
            </summary>
            <param name="obj">Object in the data model with cell data to format</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.RegularExpressionCellType.Parse(System.String)">
            <summary>
            Parses the specified string to the data type of the cell type and returns it as an object.
            </summary>
            <param name="s">Specified string from the cell on the sheet to parse</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.RegularExpressionCellType.IsValid(System.Object)">
            <summary>
            Determines whether the specified value is valid.
            </summary>
            <param name="value">Value to validate (as object)</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.RegularExpressionCellType.SetEditorValue(System.Object)">
            <summary>
            Sets the value of the editor control.
            </summary>
            <param name="value">Value of editor control (as object)</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.RegularExpressionCellType.Serialize(System.Xml.XmlTextWriter)">
            <summary>
            Saves the object to XML.
            </summary>
            <param name="w">XmlTextWriter to which to write (save) the object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.RegularExpressionCellType.Deserialize(System.Xml.XmlNodeReader)">
            <summary>
            Loads the object from XML.
            </summary>
            <param name="r">XmlNodeReader from which to read (load) the object</param>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.RegularExpressionCellType.RegularExpression">
            <summary>
            Gets or sets the regular expression string.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.CellType.ImageCellType">
            <summary>
            Represents an image cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ImageCellType.#ctor">
            <summary>
            Creates a new image cell with default settings.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ImageCellType.#ctor(FarPoint.Win.RenderStyle)">
            <summary>
            Creates a new image cell with the specified render style.
            </summary>
            <param name="style">RenderStyle</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ImageCellType.#ctor(FarPoint.Win.RenderStyle,System.Drawing.Color)">
            <summary>
            Creates a new image cell with the specified render style and transparency color.
            </summary>
            <param name="style">RenderStyle</param>
            <param name="transparencyColor">Color</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ImageCellType.#ctor(FarPoint.Win.RenderStyle,System.Drawing.Color,System.Int32)">
            <summary>
            Creates a new image cell with the specified render style, transparency color and tolerance.
            </summary>
            <param name="style">RenderStyle</param>
            <param name="transparencyColor">Color</param>
            <param name="transparencyTolerance">Int32</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ImageCellType.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new image cell from serialization.
            </summary>
            <param name="info">SerializationInfo</param>
            <param name="context">StreamingContext</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ImageCellType.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the image cell.
            </summary>
            <param name="info">SerializationInfo</param>
            <param name="context">StreamingContext</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ImageCellType.GetImage(System.Object)">
            <summary>
            Gets an Image object from its base-64 string encoding, byte array, or stream serialization.
            </summary>
            <param name="o">Object containing base-64 string encoding, byte array, etc. from which to get image</param>
            <returns>Image, or null if string does not encode an Image object</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ImageCellType.GetBytes(System.Drawing.Image)">
            <summary>
            Gets the byte array serialization for the image.
            </summary>
            <param name="image">Image</param>
            <returns>byte array</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ImageCellType.GetBase64String(System.Drawing.Image)">
            <summary>
            Gets the base-64 string encoding for the byte array serialization of the image.
            </summary>
            <param name="image">Image</param>
            <returns>base-64 string</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ImageCellType.GetEditorControl(FarPoint.Win.Spread.Appearance,System.Single)">
            <summary>
            Gets the control used by the image cell type (returns null since this cell type does not support editing).
            </summary>
            <param name="appearance">Appearance object that contains the appearance settings</param>
            <param name="zoomFactor">Numeric value for zoom factor for scaling when displaying</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ImageCellType.GetEditorValue">
            <summary>
            Gets the unformatted value in the editor control (does nothing since this cell type does not support editing).
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ImageCellType.SetEditorValue(System.Object)">
            <summary>
            Sets the value of the editor control (does nothing since this cell type does not support editing).
            </summary>
            <param name="value">Value of editor control (as object)</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ImageCellType.IsValid(System.Object)">
            <summary>
            Determines whether the specified value is valid (Image).
            </summary>
            <param name="value">Value to validate (as object)</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ImageCellType.PaintCell(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Boolean,System.Boolean,System.Single)">
            <summary>
            Paints the cell when not in edit mode to the specified graphics interface with the specified appearance settings.
            </summary>
            <param name="g">Graphics device interface for painting the cell</param>
            <param name="r">Location and size of a rectangular region</param>
            <param name="appearance">Appearance settings for the cell</param>
            <param name="value">Object - Image to renderer</param>
            <param name="isSelected">Whether the cell is selected</param>
            <param name="isLocked">Whether the cell is locked</param>
            <param name="zoomFactor">Numeric value for zoom factor for scaling when painting the cell</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ImageCellType.GetPreferredSize(System.Drawing.Graphics,System.Drawing.Size,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
            <summary>
            Gets the preferred (maximum needed) size of the cell for the renderer control.
            </summary>
            <param name="g">Graphics device interface for drawing</param>
            <param name="size">Preferred or maximum needed size</param>
            <param name="appearance">Appearance settings</param>
            <param name="value">Object containing the name of the renderer control</param>
            <param name="zoomFactor">Numeric value for zoom factor for scaling the display</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ImageCellType.Format(System.Object)">
            <summary>
            Formats the specified data into the format of the cell type, and since this 
            cell type does not support formatting, it does nothing.
            </summary>
            <param name="obj">Object in the data model</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ImageCellType.Parse(System.String)">
            <summary>
            Parses the specified string to the data type of the cell type (does nothing since this cell type does not support parsing).
            </summary>
            <param name="s">Specified string from the cell on the sheet to parse</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ImageCellType.CanOverflow">
            <summary>
            Determines whether a cell can overflow its data into an adjacent cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ImageCellType.CanBeOverflown">
            <summary>
            Determines whether data from another cell can overflow into this cell 
            (whether this cell can be overflowed into).
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ImageCellType.Serialize(System.Xml.XmlTextWriter)">
            <summary>
            Saves the object to XML.
            </summary>
            <param name="w">XmlTextWriter to which to write (save) the object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.ImageCellType.Deserialize(System.Xml.XmlNodeReader)">
            <summary>
            Loads the object from XML.
            </summary>
            <param name="r">XmlNodeReader from which to read (load) the object</param>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.ImageCellType.Style">
            <summary>
            Gets or sets the render style of the image.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.ImageCellType.TransparencyColor">
            <summary>
            Gets or sets the transparency color in the image.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.ImageCellType.TransparencyTolerance">
            <summary>
            Gets or sets the transparency tolerance in the image.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.RichTextBoxEx.ConvertToTwips(System.Single,System.Int32)">
            <summary>
            Converts to twips (1/1440 inch, used by Win32 API calls)
            </summary>
            <param name="dpi">Dots per inch</param>
            <param name="n">Value in pixels</param>
            <returns>Value in twips</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.RichTextBoxEx.ConvertToTwips(System.Single,System.Single)">
            <summary>
            Converts to twips (1/1440 inch, used by Win32 API calls)
            </summary>
            <param name="dpi">Dots per inch</param>
            <param name="n">Value in pixels</param>
            <returns>Value in twips</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.RichTextBoxEx.FormatRangeDone">
            <summary>
            Frees cached data from rich edit control after printing
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.RichTextBoxEx.SetSelectionFont(System.String)">
            <summary>
            Sets the font only for the selected part of the rich text box
            without modifying the other properties like size or style
            </summary>
            <param name="face">Name of the font to use</param>
            <returns>true if successful; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.RichTextBoxEx.SetSelectionSize(System.Single)">
            <summary>
            Sets the font size only for the selected part of the rich text box
            without modifying the other properties like font or style
            </summary>
            <param name="size">New point size to use</param>
            <returns>true if successful; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.RichTextBoxEx.SetSelectionBold(System.Boolean)">
            <summary>
            Sets the bold style only for the selected part of the rich text box
            without modifying the other properties like font or size
            </summary>
            <param name="bold">true to make selection bold; false to make it regular</param>
            <returns>true if successful; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.RichTextBoxEx.SetSelectionItalic(System.Boolean)">
            <summary>
            Sets the italic style only for the selected part of the rich text box
            without modifying the other properties like font or size
            </summary>
            <param name="italic">true to make selection italics; false to make it regular</param>
            <returns>true if successful; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.RichTextBoxEx.SetSelectionUnderlined(System.Boolean)">
            <summary>
            Sets the underlined style only for the selected part of the rich text box
            without modifying the other properties like font or size
            </summary>
            <param name="underlined">true to underline selection; false to make it regular</param>
            <returns>true if successful; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.RichTextBoxEx.SetSelectionStyle(System.UInt32,System.UInt32)">
            <summary>
            Sets the style only for the selected part of the rich text box
            with the possibility to mask out some styles that are not to be modified
            </summary>
            <param name="mask">Mask of selection to not modify</param>
            <param name="effect">New values for the styles</param>
            <returns>true if successful; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.RichTextBoxEx.RenderToDisplay(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Performs painting of contents to graphics with specified size.
            </summary>
            <param name="g">Graphics context on which to draw</param>
            <param name="r">Rectangle from which to render</param>
            <returns>true if successful; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.RichTextBoxEx.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.RichTextEditor.OnUserError(FarPoint.Win.SuperEdit.UserErrorEventArgs)">
            <summary>
            Raises the UserError event. 
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.RichTextEditor.ProcessDialogKey(System.Windows.Forms.Keys)">
            <summary>
            Processes the specified dialog key by the control.
            </summary>
            <param name="keyData">Key for the control to process</param>
            <returns>true if the key was processed by the control; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.RichTextEditor.Cut_Clicked(System.Object,System.EventArgs)">
            <summary>
            Occurs when the cut to clipboard choice is selected.
            </summary>
            <param name="sender">Object that raised the event</param>
            <param name="e">Object of EventArgs class that contains event data</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.RichTextEditor.Copy_Clicked(System.Object,System.EventArgs)">
            <summary>
            Occurs when the copy to clipboard choice is selected.
            </summary>
            <param name="sender">Object that raised the event</param>
            <param name="e">Object of EventArgs class that contains event data</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.RichTextEditor.Paste_Clicked(System.Object,System.EventArgs)">
            <summary>
            Occurs when the paste from clipboard choice is selected.
            </summary>
            <param name="sender">Object that raised the event</param>
            <param name="e">Object of EventArgs class that contains event data</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.RichTextEditor.Delete_Clicked(System.Object,System.EventArgs)">
            <summary>
            Occurs when the delete selection choice is selected.
            </summary>
            <param name="sender">Object that raised the event</param>
            <param name="e">Object of EventArgs class that contains event data</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.RichTextEditor.ClearAll_Clicked(System.Object,System.EventArgs)">
            <summary>
            Occurs when the clear all selection choice is selected.
            </summary>
            <param name="sender">Object that raised the event</param>
            <param name="e">Object of EventArgs class that contains event data</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.RichTextEditor.SelectAll_Clicked(System.Object,System.EventArgs)">
            <summary>
            Occurs when the select all choice is selected.
            </summary>
            <param name="sender">Object that raised the event</param>
            <param name="e">Object of EventArgs class that contains event data</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.RichTextEditor.Color_Clicked(System.Object,System.EventArgs)">
            <summary>
            Occurs when the color is selected.
            </summary>
            <param name="sender">Object that raised the event</param>
            <param name="e">Object of EventArgs class that contains event data</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.RichTextEditor.Font_Clicked(System.Object,System.EventArgs)">
            <summary>
            Occurs when the font is selected.
            </summary>
            <param name="sender">Object that raised the event</param>
            <param name="e">Object of EventArgs class that contains event data</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.RichTextEditor.Size_Clicked(System.Object,System.EventArgs)">
            <summary>
            Occurs when the size is selected.
            </summary>
            <param name="sender">Object that raised the event</param>
            <param name="e">Object of EventArgs class that contains event data</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.RichTextEditor.ContextMenu_Popup(System.Object,System.EventArgs)">
            <summary>
            Occurs when the context menu is displayed.
            </summary>
            <param name="sender">Object that raised the event</param>
            <param name="e">Object of EventArgs class that contains event data</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.RichTextEditor.Bold_Clicked(System.Object,System.EventArgs)">
            <summary>
            Occurs when the bold style is selected.
            </summary>
            <param name="sender">Object that raised the event</param>
            <param name="e">Object of EventArgs class that contains event data</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.RichTextEditor.Italic_Clicked(System.Object,System.EventArgs)">
            <summary>
            Occurs when the italic style is selected.
            </summary>
            <param name="sender">Object that raised the event</param>
            <param name="e">Object of EventArgs class that contains event data</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.RichTextEditor.Underline_Clicked(System.Object,System.EventArgs)">
            <summary>
            Occurs when the underline style is selected.
            </summary>
            <param name="sender">Object that raised the event</param>
            <param name="e">Object of EventArgs class that contains event data</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.RichTextEditor.AlignLeft_Clicked(System.Object,System.EventArgs)">
            <summary>
            Occurs when the left alignment is selected.
            </summary>
            <param name="sender">Object that raised the event</param>
            <param name="e">Object of EventArgs class that contains event data</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.RichTextEditor.AlignCenter_Clicked(System.Object,System.EventArgs)">
            <summary>
            Occurs when the center alignment is selected.
            </summary>
            <param name="sender">Object that raised the event</param>
            <param name="e">Object of EventArgs class that contains event data</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.RichTextEditor.AlignRight_Clicked(System.Object,System.EventArgs)">
            <summary>
            Occurs when the right alignment is selected.
            </summary>
            <param name="sender">Object that raised the event</param>
            <param name="e">Object of EventArgs class that contains event data</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.RichTextEditor.LoadFile_Clicked(System.Object,System.EventArgs)">
            <summary>
            Occurs when the load file is selected.
            </summary>
            <param name="sender">Object that raised the event</param>
            <param name="e">Object of EventArgs class that contains event data</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.RichTextEditor.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.RichTextEditor.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="!:FarPoint.Win.Spread.FpSpread.MouseWheel"/> event.
            </summary>
            <param name="e">MouseEventArgs event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.RichTextEditor.IsInputKey(System.Windows.Forms.Keys)">
            <summary>
            Determines whether to processes the specified key by the control.
            </summary>
            <param name="keyData">Key for the control to process</param>
            <returns>true if the key should be processed by the control; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.RichTextEditor.ShowSubEditor(System.Boolean)">
            <summary>
            Shows or hides the subeditor control associated with the cell.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.CellType.RichTextEditor.UserError">
            <summary>
            Occurs when content is provided that cannot be processed or is invalid.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.CellType.RichTextCellType">
            <summary>
            Represents a rich text formatted text cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.RichTextCellType.#ctor">
            <summary>
            Creates a new rich text cell with default settings.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.RichTextCellType.Clone">
            <summary>
            Creates and returns a rich text cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.RichTextCellType.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new rich text cell from serialization.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.RichTextCellType.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the cell type.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.RichTextCellType.Parse(System.String)">
            <summary>
            Parses the string.
            </summary>
            <param name="s">String to parse</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.RichTextCellType.Format(System.Object)">
            <summary>
            Formats the object.
            </summary>
            <param name="o">Object to format</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.RichTextCellType.IsValid(System.Object)">
            <summary>
            Returns whether the entry is valid.
            </summary>
            <param name="o">Object containing the entry</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.RichTextCellType.StartEditing(System.EventArgs,System.Boolean,System.Boolean)">
            <summary>
            Starts the editing of a cell.
            </summary>
            <param name="e">Event</param>
            <param name="selectAll">Whether to select all</param>
            <param name="autoClipboard">Whether to allow shortcut keys for Clipboard actions</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.RichTextCellType.CancelEditing">
            <summary>
            Cancels the editing of a cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.RichTextCellType.StopEditing">
            <summary>
            Stops the editing of a cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.RichTextCellType.GetEditorControl(FarPoint.Win.Spread.Appearance,System.Single)">
            <summary>
            Gets the edit control for this cell type with the specified appearance and scaling.
            </summary>
            <param name="appearance">Appearance object that contains the appearance settings</param>
            <param name="zoomfactor">Numeric value for scaling when displaying</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.RichTextCellType.GetEditorValue">
            <summary>
            Gets the unformatted value in the edit control.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.RichTextCellType.PaintCell(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Boolean,System.Boolean,System.Single)">
            <summary>
            Paints the cell.
            </summary>
            <param name="g">Graphics device</param>
            <param name="r">Rectangle</param>
            <param name="appr">Appearance object containing appearance settings</param>
            <param name="value">Object containing value</param>
            <param name="isSel">Whether selected</param>
            <param name="isLocked">Whether locked</param>
            <param name="zoom">Scaling</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.RichTextCellType.SetEditorValue(System.Object)">
            <summary>
            Sets the value of the edit control. 
            </summary>
            <param name="value">Object containing the edit control</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.RichTextCellType.GetPreferredSize(System.Drawing.Graphics,System.Drawing.Size,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
            <summary>
            Gets the preferred (maximum needed) size of the cell for the renderer control.
            </summary>
            <param name="g">Graphics device interface for drawing</param>
            <param name="size">Preferred or maximum needed size</param>
            <param name="appearance">Appearance settings</param>
            <param name="value">Object containing the name of the renderer control</param>
            <param name="zoomFactor">Numeric value for zoom factor for scaling the display</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.RichTextCellType.GetPreferredSize(System.Windows.Forms.Control)">
            <summary>
            Gets the preferred (maximum needed) size of the editor control.
            </summary>
            <param name="editor">Name of editor control</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.RichTextCellType.GetReservedCursor(System.Object)">
            <summary>
            Gets the cursor reserved for this cell type. 
            </summary>
            <param name="o">Object containing the reserved cursor (pointer)</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.RichTextCellType.CanOverflow">
            <summary>
            Determines whether the cell can overflow into adjacent cells.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.RichTextCellType.Serialize(System.Xml.XmlTextWriter)">
            <summary>
            Saves the object to XML.
            </summary>
            <param name="w">XmlTextWriter to which to write (save) the object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.RichTextCellType.Deserialize(System.Xml.XmlNodeReader)">
            <summary>
            Loads the object from XML.
            </summary>
            <param name="r">XmlNodeReader from which to read (load) the object</param>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.RichTextCellType.BackgroundImage">
            <summary>
            Gets or sets the background image for the cell.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.RichTextCellType.ScrollBars">
            <summary>
            Gets or sets which scroll bars to display for the rich text cell.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.RichTextCellType.MaxLength">
            <summary>
            Gets or sets the maximum number of characters allowed in the rich text cell.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.RichTextCellType.Multiline">
            <summary>
            Gets or sets whether multiple lines of text are allowed.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.RichTextCellType.WordWrap">
            <summary>
            Gets or sets whether text that is too long to fit in the cell wraps to additional lines.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.RichTextCellType.ReadOnly">
            <summary>
            Gets or sets whether text is read only.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.RichTextCellType.Static">
            <summary>
            Gets or sets whether text can be selected.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.RichTextCellType.IsFormulaValue">
            <summary>
            Determines whether the editor contains a formula. 
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.CellType.EmptyCellType">
            <summary>
            Represents an empty cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.EmptyCellType.#ctor">
            <summary>
            Creates a new empty cell with default settings.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.EmptyCellType.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new empty cell from serialization.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.EmptyCellType.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the cell type.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.EmptyCellType.GetEditorControl(FarPoint.Win.Spread.Appearance,System.Single)">
            <summary>
            Gets the control used by the given cell type.
            </summary>
            <param name="appearance">Appearance object that contains the appearance settings</param>
            <param name="zoomFactor">Numeric value for zoom factor for scaling when displaying</param>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.EmptyCellType.CancelEditing">
            <summary>
            Cancels the editing of a cell.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.EmptyCellType.AcceptsArrowKeys">
            <summary>
            Gets or sets how arrow keys are processed by the edit control.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.EmptyCellType.TextOrientation">
            <summary>
            Gets or sets how text orients itself when painting the cell.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellType.EmptyCellType.StringTrim">
            <summary>
            Gets or sets how to trim characters that do not fit into the cell.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.CellType.DropDownCalendar">
            <summary>
            Editor for date properties.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.DropDownCalendar.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits the date value.
            </summary>
            <param name="context">ITypeDescriptorContext</param>
            <param name="provider">IServiceProvider</param>
            <param name="value">object</param>
            <returns>object</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.DropDownCalendar.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets the style of the type editor (which is drop-down).
            </summary>
            <param name="context">ITypeDescriptorContext</param>
            <returns>UITypeEditorEditStyle</returns>
        </member>
        <member name="T:FarPoint.Win.Spread.CellType.DropDownClock">
            <summary>
            Editor for date properties.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.DropDownClock.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits the date value.
            </summary>
            <param name="context">ITypeDescriptorContext</param>
            <param name="provider">IServiceProvider</param>
            <param name="value">object</param>
            <returns>object</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.DropDownClock.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets the style of the type editor (which is drop-down).
            </summary>
            <param name="context">ITypeDescriptorContext</param>
            <returns>UITypeEditorEditStyle</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.DateTimeCellTypeCodeDomSerializer.IsDefaultDateTimeFormat(System.Globalization.DateTimeFormatInfo)">
            <summary>
            Returns a value indicating whether the specified DateTimeFormatInfo is the same as a new culture-invariant DateTimeFormatInfo.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.DateTimeCellTypeCodeDomSerializer.IsDefaultNumberFormat(System.Globalization.NumberFormatInfo)">
            <summary>
            Returns a value indicating whether the specified NumberFormatInfo is the same as a new culture-invariant NumberFormatInfo.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.INoteIndicatorRenderer">
            <summary>
            Interface that defines the methods and properties required by objects used as 
            painters of the note indicator. 
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.INoteIndicatorRenderer.Paint(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Paints the cell with the note indicator using the specified control and dimensions.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.INoteIndicatorRenderer2">
            <summary>
            Interface that defines the methods and properties required by objects used as 
            painters of the note indicator. 
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.INoteIndicatorRenderer2.Paint(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Color)">
            <summary>
            Paints the cell with the note indicator using the specified control and dimensions.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.DefaultNoteIndicatorRenderer">
            <summary>
            Represents the default painter for the indicator of a note in a cell. 
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DefaultNoteIndicatorRenderer.Paint(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Paints the cell with the note indicator using the specified control and dimensions.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DefaultNoteIndicatorRenderer.Paint(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Color)">
            <summary>
            Paints the cell with the note indicator using the specified control and dimensions.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.Keystroke">
            <summary>
            Represents a key being typed on the keyboard.  
            It contains both a character code for the key and a modifier 
            (Alt, Ctrl, Shift, or a combination).
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Keystroke.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new keystroke from serialization.
            </summary>
            <param name="info">Object that holds the serialized object data </param>
            <param name="context">Contexual information about the source of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Keystroke.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates the SerializationInfo class with information about the keystroke (<see cref="T:FarPoint.Win.Spread.Keystroke"/> object).
            </summary>
            <param name="info">Object that holds the serialized object data </param>
            <param name="context">Contexual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Keystroke.#ctor(System.Char)">
            <summary>
            Creates a new keystroke with the specified character.
            </summary>
            <param name="keyChar">Character defined by this keystroke</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Keystroke.#ctor(System.Windows.Forms.Keys,System.Windows.Forms.Keys)">
            <summary>
            Creates a new keystroke with a specified a key code and modifier keys.
            </summary>
            <param name="keyCode">Key code defined by this keystroke</param>
            <param name="modifiers">Modifier keys defined by this keystroke</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Keystroke.#ctor(System.Windows.Forms.Keys,System.Windows.Forms.Keys,System.Boolean)">
            <summary>
             Creates a new keystroke with a specified a key code, modifier keys, 
             and whether the keystroke is active on key release.
            </summary>
            <param name="keyCode">Key code defined by this keystroke</param>
            <param name="modifiers">Modifier keys defined by this keystroke</param>
            <param name="onKeyRelease">Whether the keystroke is active on key release</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Keystroke.Equals(System.Object)">
            <summary>
            Determines whether an object is equal to the current one.
            </summary>
            <param name="o">Object to compare to the current one</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Keystroke.op_Equality(FarPoint.Win.Spread.Keystroke,FarPoint.Win.Spread.Keystroke)">
            <summary>
            Determines whether two keystrokes (KeyStroke structures) are equal.
            </summary>
            <param name="lhs">First keystroke (left hand side of equality operator)</param>
            <param name="rhs">Second keystroke (right hand side of equality operator)</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Keystroke.op_Inequality(FarPoint.Win.Spread.Keystroke,FarPoint.Win.Spread.Keystroke)">
            <summary>
            Determines whether two keystrokes (KeyStroke structures) are not equal.
            </summary>
            <param name="lhs">First keystroke (left hand side of inequality operator)</param>
            <param name="rhs">Second keystroke (right hand side of inequality operator)</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Keystroke.GetHashCode">
            <summary>
            Returns a value that can used as an index in a hash table.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Keystroke.ToString">
            <summary>
            Returns a string that represents the keystroke.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Keystroke.KeyChar">
            <summary>
            Gets the character defined by this keystroke.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Keystroke.KeyCode">
            <summary>
            Gets the key code defined by this keystroke.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Keystroke.Modifiers">
            <summary>
            Gets the modifier keys defined by this keystroke.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Keystroke.OnKeyRelease">
            <summary>
            Gets whether the keystroke is active on key release.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.KeystrokeFactory">
            <summary>
            Provides a means of creating <see cref="T:FarPoint.Win.Spread.Keystroke"/> objects in environments
            that do not support parameterized constructors. 
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.KeystrokeFactory.#ctor">
            <summary>
            Creates a new KeystrokeFactory object. 
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.KeystrokeFactory.CreateKeystroke(System.Char)">
            <summary>
            Creates a <see cref="T:FarPoint.Win.Spread.Keystroke"/> object from a character.
            </summary>
            <param name="keyChar">Character for the keystroke</param>
        </member>
        <member name="M:FarPoint.Win.Spread.KeystrokeFactory.CreateKeystroke(System.Windows.Forms.Keys,System.Windows.Forms.Keys)">
            <summary>
            Creates a <see cref="T:FarPoint.Win.Spread.Keystroke"/> object from a key code and modifiers.
            </summary>
            <param name="keyCode">Key code for the keystroke</param>
            <param name="modifiers">Modifier keys for the keystroke</param>
        </member>
        <member name="M:FarPoint.Win.Spread.KeystrokeFactory.CreateKeystroke(System.Windows.Forms.Keys,System.Windows.Forms.Keys,System.Boolean)">
            <summary>
            Creates a <see cref="T:FarPoint.Win.Spread.Keystroke"/> object from a key code and modifiers.
            </summary>
            <param name="keyCode">Key code for the keystroke</param>
            <param name="modifiers">Modifier keys for the keystroke</param>
            <param name="onKeyRelease">Whether the keystroke is active on key release</param>
        </member>
        <member name="T:FarPoint.Win.Spread.ColumnLayoutModel">
            <summary>
            Class represents a collection of columns along with their
            locations and sizes.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.ColumnLayoutModel.#ctor">
            <summary>
            Creates a new column layout model that is initially empty.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.ColumnLayoutModel.Add(FarPoint.Win.Spread.ColumnLayout)">
            <summary>
            Adds a layout to the model.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.ColumnLayoutModel.FindColumn(System.Int32)">
            <summary>
            Finds the layout for the specified column.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.ColumnLayoutModel.FindX(System.Int32)">
            <summary>
            Finds the layout that contains the specified point.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.ColumnLayoutModel.FindNearX(System.Int32)">
            <summary>
            Finds the layout that contains or is near the specified point.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.ColumnLayoutModel.Item(System.Int32)">
            <summary>
            Gets the element at the specified index.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.ColumnLayoutModel.Count">
            <summary>
            Gets the number of layouts in the model.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.Model.SparseArray">
            <summary>
            Summary description for SparseArray.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SparseArray.#ctor">
            <summary>
            Constructs a SparseArray object with 0 Length.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SparseArray.#ctor(System.Int32)">
            <summary>
            Constructs a SparseArray object with the specified length.
            </summary>
            <param name="length">
            Specifies the bounds of the SparseArray.  If length > 0, then length - 1
            is the maximum index allowed; if length = 0 then no index is legal.
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SparseArray.#ctor(System.Int32,System.Boolean)">
            <summary>
            Constructs a SparseArray object with the specified length and AutoPack turned off.
            </summary>
            <param name="length">
            Specifies the bounds of the SparseArray.  If length > 0, then nLength - 1
            is the maximum index allowed; if length = 0 then no index is legal.
            </param>
            <param name="packed">
            Specifies whether the SparseArray should be initially packed.
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SparseArray.#ctor(System.Int32,System.Array)">
            <summary>
            Constructs a SparseArray object with the specified length and AutoPack turned off.
            </summary>
            <param name="length">
            Specifies the bounds of the SparseArray.  If length > 0, then nLength - 1
            is the maximum index allowed; if length = 0 then no index is legal.
            </param>
            <param name="data">Specifies the initial data for the SparseArray.</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SparseArray.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Loads the state of the SparseArray from the SerializationInfo.
            </summary>
            <param name="info">SerializationInfo</param>
            <param name="context">StreamingContext</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SparseArray.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Saves the state of the SparseArray to the SerializationInfo.
            </summary>
            <param name="info">SerializationInfo</param>
            <param name="context">StreamingContext</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SparseArray.Resize(System.Int32,System.Boolean)">
            <summary>
            Reallocates the internal array to accomodate the specified number of elements.
            Also packs or unpacks the data when required.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SparseArray.DoAutoPack(System.Boolean,System.Int32,System.Int32)">
            <summary>
            Packs or unpacks the data as needed.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SparseArray.BinaryInsertEx(System.Int32)">
            <summary>
            Performs the binary search part of the binary insert.
            </summary>
            <param name="index">
            Specifies the external array index to search for.
            </param>
            <returns>
            Returns the internal array index of the element with the specified
            external array index if it exists, or the internal array index of
            the insertion point for a new item with the specified external array
            index.
            </returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SparseArray.BinaryInsert(System.Int32,System.Object)">
            <summary>
            Inserts an item into the sorted array using a binary insert.
            </summary>
            <param name="index">
            Specifies the external index of the item being added or changed.
            </param>
            <param name="o">
            o specifies the new data value for the element.
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SparseArray.BinarySearch(System.Int32)">
            <summary>
            Performs a binary search for an Element in the array.
            </summary>
            <param name="index">
            Specifies the external index of the item to find.
            </param>
            <returns>
            Returns the internal index of the item found, or -1 is the item was
            not found.
            </returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SparseArray.InternalGet(System.Int32)">
            <summary>
            Returns the element in the SparseArray at the specified internal array index.
            The specified index must be greater than or equal to 0 and less than the
            current value of the InternalLength property, or an IndexOutOfRangeException
            is thrown.
            This method is used by the enumerator class to enumerate non-null data items.
            </summary>
            <param name="index">
            Specifies the internal array index of the element to get.
            </param>
            <returns>
            Returns the data item associated with the specified internal array index.
            </returns>
            <see cref="T:FarPoint.Win.Spread.Model.SparseArray.SparseArrayEnumerator"/>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SparseArray.InternalGetIndex(System.Int32)">
            <summary>
            Returns the index of the element in the SparseArray at the specified internal 
            array index.  The specified index must be greater than or equal to 0 and less 
            than the current value of the InternalLength property, or an IndexOutOfRangeException
            is thrown.
            This method is used by the index enumerator class to enumerate non-null data indecis.
            </summary>
            <param name="index">
            Specifies the internal array index of the element to get.
            </param>
            <returns>
            Returns the external index of the specified internal array element.
            </returns>
            <see cref="T:FarPoint.Win.Spread.Model.SparseArray.SparseArrayEnumerator"/>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SparseArray.Clear">
            <summary>
            Clears all items from the SparseArray.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SparseArray.Clear(System.Int32,System.Int32)">
            <summary>
            Clears the specified range of items from the SparseArray.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SparseArray.Copy(FarPoint.Win.Spread.Model.SparseArray,FarPoint.Win.Spread.Model.SparseArray,System.Int32,System.Boolean)">
            <summary>
            Copies the contents of a SparseArray to another SparseArray.
            </summary>
            <param name="src">
            Specifies the source SparseArray.
            </param>
            <param name="dest">
            Specifies the destination SparseArray.
            </param>
            <param name="count">
            Specifies the number of elements to copy from the source to the destination.
            </param>
            <param name="cloneElements">
            Specifies whether to clone the elements while copying (if the elements support IClonable) 
            or copy the references or values.
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SparseArray.Copy(FarPoint.Win.Spread.Model.SparseArray,System.Int32,FarPoint.Win.Spread.Model.SparseArray,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Copies a range of elements from a SparseArray to another SparseArray.
            </summary>
            <param name="src">
            Specifies the source SparseArray.
            </param>
            <param name="srcIndex">
            Specifies the starting index in src where copying begins.
            </param>
            <param name="dest">
            Specifies the destination SparseArray.
            </param>
            <param name="destIndex">
            Specifies the starting index in dest where items are copied to.
            </param>
            <param name="count">
            Specifies the number of items to copy.
            </param>
            <param name="cloneElements">
            Specifies whether to clone the elements while copying (if the elements support IClonable) 
            or copy the references or values.
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SparseArray.Move(FarPoint.Win.Spread.Model.SparseArray,FarPoint.Win.Spread.Model.SparseArray,System.Int32)">
            <summary>
            Moves the contents of a SparseArray to another SparseArray.
            </summary>
            <param name="src">
            Specifies the source SparseArray.
            </param>
            <param name="dest">
            Specifies the destination SparseArray.
            </param>
            <param name="count">
            Specifies the number of elements to move from the source to the destination.
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SparseArray.Move(FarPoint.Win.Spread.Model.SparseArray,System.Int32,FarPoint.Win.Spread.Model.SparseArray,System.Int32,System.Int32)">
            <summary>
            Moves a range of elements from a SparseArray to another SparseArray.
            </summary>
            <param name="src">
            Specifies the source SparseArray.
            </param>
            <param name="srcIndex">
            Specifies the starting index in src where moving begins.
            </param>
            <param name="dest">
            Specifies the destination SparseArray.
            </param>
            <param name="destIndex">
            Specifies the starting index in dest where items are moved to.
            </param>
            <param name="count">
            Specifies the number of items to move.
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SparseArray.Swap(FarPoint.Win.Spread.Model.SparseArray,FarPoint.Win.Spread.Model.SparseArray,System.Int32)">
            <summary>
            Swaps the contents of two SparseArrays.
            </summary>
            <param name="src">
            Specifies the source SparseArray.
            </param>
            <param name="dest">
            Specifies the destination SparseArray.
            </param>
            <param name="count">
            Specifies the number of items to swap.
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SparseArray.Swap(FarPoint.Win.Spread.Model.SparseArray,System.Int32,FarPoint.Win.Spread.Model.SparseArray,System.Int32,System.Int32)">
            <summary>
            Swaps a range of elements in two SparseArrays.
            </summary>
            <param name="src">
            Specifies the source SparseArray.
            </param>
            <param name="srcIndex">
            Specifies the starting index in src where swapping begins.
            </param>
            <param name="dest">
            Specifies the destination SparseArray.
            </param>
            <param name="destIndex">
            Specifies the starting index in dest where swapping begins.
            </param>
            <param name="count">
            Specifies the number of elements to swap.
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SparseArray.InternalCopy(FarPoint.Win.Spread.Model.SparseArray,System.Int32,FarPoint.Win.Spread.Model.SparseArray,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Copies a range of elements from a SparseArray to another SparseArray.
            </summary>
            <param name="src">
            Specifies the source SparseArray.
            </param>
            <param name="srcIndex">
            Specifies the starting index in src where copying begins.
            </param>
            <param name="dest">
            Specifies the destination SparseArray.
            </param>
            <param name="destIndex">
            Specifies the starting index in dest where items are copies to.
            </param>
            <param name="count">
            Specifies the number of items to copy.
            </param>
            <param name="cloneElements">
            Specifies whether to clone the elements while copying (if the elements support IClonable) 
            or copy the references or values.
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SparseArray.InsertRange(System.Int32,System.Int32)">
            <summary>
            Inserts the specified number of new null items into the SparseArray at the specified index.
            </summary>
            <param name="index">
            Specifies the insertion point, and must be greater than or equal to 0
            and less than or equal to Length, or an IndexOutOfRangeException is thrown.
            </param>
            <param name="count">
            Specifies the number of null items to insert, and must be greater than 0,
            or an ArgumentOutOfRangeException is thrown.
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SparseArray.InternalInsertRange(System.Int32,System.Int32)">
            <summary>
            Inserts the specified number of new null items into the SparseArray at the specified index.
            </summary>
            <param name="index">
            Specifies the insertion point.
            </param>
            <param name="count">
            Specifies the number of null items to insert.
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SparseArray.RemoveRange(System.Int32,System.Int32)">
            <summary>
            Removes a range of items from the SparseArray.
            </summary>
            <param name="index">
            Specifies the index of the first item to remove, and must be greater than 
            or equal to 0 and less than Length, or an IndexOutOfRangeException is thrown.
            </param>
            <param name="count">
            Specifies the number of null items to remove, and must be greater than 0 and
            less than Length - index, or an ArgumentOutOfRangeException is thrown.
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SparseArray.InternalRemoveRange(System.Int32,System.Int32)">
            <summary>
            Removes a range of items from the SparseArray.
            </summary>
            <param name="index">
            Specifies the index of the first item to remove, and must be greater than 
            or equal to 0 and less than Length, or an IndexOutOfRangeException is thrown.
            </param>
            <param name="count">
            Specifies the number of null items to remove, and must be greater than 0 and
            less than Length - nIndex, or an ArgumentOutOfRangeException is thrown.
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SparseArray.GetEnumerator">
            <summary>
            Gets an enumerator that can iterate through the elements
            in the SparseArray.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SparseArray.GetNonNullEnumerator">
            <summary>
            Gets an enumerator that can iterate through the non-null
            elements in the SparseArray.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SparseArray.NextNonNull(System.Int32@)">
            <summary>
            Searches for the next non-null element in the SparseArray after the specified index.
            </summary>
            <param name="index">
            Specifies the starting point for searching for the next non-null element (nIndex + 1)
            and also returns the index of the next non-null element found, or -1 if no non-null
            element was found.
            </param>
            <returns>
            Returns the next non-null element in the SparseArray after the specified index.
            </returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SparseArray.NextNonNullIndex(System.Int32@)">
            <summary>
            Searches for the next non-null element in the SparseArray after the specified index.
            </summary>
            <param name="index">
            Specifies the starting point for searching for the next non-null element (nIndex + 1)
            and also returns the index of the next non-null element found, or -1 if no non-null
            element was found.
            </param>
            <returns>
            Returns the next non-null index in the SparseArray after the specified index.
            </returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SparseArray.NextNullIndex(System.Int32@)">
            <summary>
            Searches for the next null element in the SparseArray after the specified index.
            </summary>
            <param name="index">
            Specifies the starting point for searching for the next non-null element (nIndex + 1)
            and also returns the index of the next non-null element found, or -1 if no non-null
            element was found.
            </param>
            <returns>
            Returns the next null index in the SparseArray after the specified index.
            </returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SparseArray.FirstNonEmptyIndex(System.Int32)">
            <summary>
            Returns the index of the first non-empty element.
            </summary>
            <param name="index">Index to start searching</param>
            <returns>Index of the first non-empty element</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SparseArray.NextNonEmptyIndex(System.Int32)">
            <summary>
            Returns the index of the next non-empty element.
            </summary>
            <param name="index">Index to start searching</param>
            <returns>Index of the next non-empty element</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SparseArray.Contains(System.Object)">
            <summary>
            Searches the SparseArray for the specified value and returns its index.
            </summary>
            <param name="value">
            Value to search for.
            </param>
            <returns>
            Index of the first occurance of the specified value,
            or -1 if the value was not found.
            </returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SparseArray.op_Implicit(System.Object[])~FarPoint.Win.Spread.Model.SparseArray">
            <summary>
            Converts an array into a new SparseArray object.
            </summary>
            <param name="array">
            Array to convert.
            </param>
            <returns>
            SparseArray object containing the same elements 
            as the array.
            </returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SparseArray.op_Implicit(FarPoint.Win.Spread.Model.SparseArray)~System.Object[]">
            <summary>
            Converts a SparseArray object into an array of objects.
            </summary>
            <param name="array">
            SparseArray to convert.
            </param>
            <returns>
            Array containing the same elements as the SparseArray.
            </returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SparseArray.OnDeserialized(System.EventArgs)">
            <summary>
            Fires the Deserialized event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.SparseArray.IsEmpty">
            <summary>
            Returns a valud indicating whether the SparseArray is empty.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.SparseArray.Item(System.Int32)">
            <summary>
            Sets or returns an object from the SparseArray at the specified index.
            The specified index must be greater than or equal to 0 and less than the 
            current value of the Length property, or an IndexOutOfRangeException is thrown.
            </summary>
            <value>
            Element in the SparseArray at the specified index.
            </value>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.SparseArray.InternalLength">
            <summary>
            Returns the internal length of the array.
            This property is used by the enumerator class to enumerate non-null data items.
            </summary>
            <see cref="T:FarPoint.Win.Spread.Model.SparseArray.SparseArrayEnumerator"/>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.SparseArray.AutoPack">
            <summary>
            Sets or returns whether the SparseArray automatically determines the best
            way to store the data in the internal array.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.SparseArray.Length">
            <summary>
            Returns or sets the bounds of the SparseArray.  Items in the SparseArray
            can be indexes between 0 and Length - 1, if Length > 0.
            If the specified Length is greater than the MaxCapacity property, an
            ArgumentOutOfRangeException is thrown.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.SparseArray.DataLength">
            <summary>
            Returns the length of the non-null data currently in the SparseArray, which is
            one higher than the external index of the last element, or 0 if mnelements == 0.
            This is used by SparseMatrix.DataRows.
            </summary>
            <see cref="P:FarPoint.Win.Spread.Model.SparseMatrix.DataRows"/>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.SparseArray.MaxCapacity">
            <summary>
            Returns the maximum length supported by the SparseArray.
            This is the largest possible value for the Length property.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.SparseArray.Packed">
            <summary>
            Sets or returns whether the data is currently packed to optimize memory usage, or
            unpacked to optimize speed.  If AutoPack is true, then this property is read-only.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.Model.SparseArray.Deserialized">
            <summary>
            Event that fires on completion of deserialization.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.SparseArray.ElementCount">
            <summary>
            Returns the number of elements in the SparseArray.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.Model.SparseArray.Element">
            <summary>
            Element in the SparseArray (when packed).
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.Model.SparseArray.SparseArrayEnumerator">
            <summary>
            Implements IEnumerator for all of the various types of enumerators 
            (default, NonNull, NonNullIndexes, NonNullRange, and NonNullRangeIndexes).
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SparseArray.SparseArrayEnumerator.#ctor(FarPoint.Win.Spread.Model.SparseArray,System.Boolean,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Constructs a SparseArrayEnumerator for the specified array.
            </summary>
            <param name="array">
            array specifies the SparseArray to enumerate.
            </param>
            <param name="includeNull">
            Specifies whether to include null values in the enumeration.
            </param>
            <param name="returnIndex">
            Specifies whether to return the external array index or data.
            This parameter is ignored if includeNull == true.
            </param>
            <param name="start">
            Specifies the starting external array index for the enumeration.
            </param>
            <param name="end">
            Specifies the ending external array index for the enumeratotion.
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SparseArray.SparseArrayEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element in the SparseArray.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SparseArray.SparseArrayEnumerator.Reset">
            <summary>
            Resets the enumerator to its initial position, which is
            before the first element in the SparseArray.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.SparseArray.SparseArrayEnumerator.Current">
            <summary>
            Gets the current element in the enumerator.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.Model.ParseException">
            <summary>
            Represents the exception that is thrown when an error is encountered 
            during the parsing of a text representation of an expression.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.ParseException.#ctor">
            <summary>
            Constructs a new instance of the ParseException class.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.ParseException.#ctor(System.String)">
            <summary>
            Constructs a new instance of the ParseException class 
            with the specified message.
            </summary>
            <param name="message">Message that describes this exception</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.ParseException.#ctor(System.String,System.Exception)">
            <summary>
            Constructs a new instance of the ParseException class 
            with the specified message and inner exception.
            </summary>
            <param name="message">Message that describes this exception</param>
            <param name="innerException">Earlier exception that causes this exception</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.ParseException.#ctor(System.String,System.Int32)">
            <summary>
            Constructs a new instance of the ParseException class 
            with the specified message and offset.
            </summary>
            <param name="message">Message that describes this exception</param>
            <param name="errorOffset">Position where the error is found</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.ParseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ParseException class with
            serialized data.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.ParseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the SerializationInfo with information about the exception.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.ParseException.Message">
            <summary>
            Gets a message that describes the current exception. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.ParseException.ErrorOffset">
            <summary>
            Gets the position were the error was found.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.Model.Parser">
            <summary>
            Converts strings to/from Expresions objects
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.Model.Parser.errors">
            <summary>
            Lists error values allowed in expressions.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.Model.Parser.prefixOperators">
            <summary>
            Lists prefix unary operators allowed in expressions.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.Model.Parser.infixOperators">
            <summary>
            Lists infix binary operators allowed in expressions.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.Model.Parser.postfixOperators">
            <summary>
            Lists postfix unary operators allowed in expressions.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.Model.Parser.precedenceLevel0">
            <summary>
            Lists operators with a precedence level of 0.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.Model.Parser.precedenceLevel1">
            <summary>
            Lists operators with a precedence level of 1.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.Model.Parser.precedenceLevel2">
            <summary>
            Lists operators with a precedence level of 2.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.Model.Parser.precedenceLevel3">
            <summary>
            Lists operators with a precedence level of 3.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.Model.Parser.precedenceLevel4">
            <summary>
            Lists operators with a precedence level of 4.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.Model.Parser.precedenceLevel5">
            <summary>
            Lists operators with a precedence level of 5.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.Model.Parser.precedenceLevel6">
            <summary>
            Lists operators with a precedence level of 6.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.Model.Parser.precedenceLevels">
            <summary>
            Lists the precedence level for all the operators.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.Model.Parser.functions">
            <summary>
            Lists built-in functions allowed in expressions.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.Parser.IsDouble(System.String)">
            <summary>
            Determines whether or not the string represents a double.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.Parser.IsString(System.String)">
            <summary>
            Determines whether or not the string represents a string.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.Parser.IsValidFirstChar(System.Char)">
            <summary>
            Determines whether or not the character is valid as
            the first character in a name.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.Parser.IsValidRemainingChar(System.Char)">
            <summary>
            Determines whether or not the character is valid as
            a non-first character in a name.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.Parser.IsName(System.String)">
            <summary>
            Determines whether or not the string represents a name.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.Parser.LookupError(System.String)">
            <summary>
            Determines whether or not the string represents an error.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.Parser.LookupPrefixOperator(System.String)">
            <summary>
            Determines whether or not the string represents a prefix
            unary operator.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.Parser.LookupInfixOperator(System.String)">
            <summary>
            Determines whether or not the string represents an infix
            binary operator.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.Parser.LookupPostfixOperator(System.String)">
            <summary>
            Determines whether or not the string represents a postfix
            unary operator.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.Parser.LookupFunction(System.String)">
            <summary>
            Determines whether or not the string represents a built-in
            function.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.Parser.IsPrefixOperator(FarPoint.CalcEngine.UnaryOperatorInfo)">
            <summary>
            Determines whether or not the unary operator is a prefix
            unary operator.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.Parser.GetPrecedenceLevel(FarPoint.CalcEngine.OperatorInfo)">
            <summary>
            Returns the precedence level of the operator.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.Parser.AppendExternalName(System.Text.StringBuilder,System.Object)">
            <summary>
            Appends the sheet name.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.Parser.AppendA1Letter(System.Text.StringBuilder,System.Int32,System.Boolean,System.Int32)">
            <summary>
            Appends the A1 text representation of the column coordinate.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.Parser.AppendA1Number(System.Text.StringBuilder,System.Int32,System.Boolean,System.Int32)">
            <summary>
            Appends the A1 text representation of the row coordinate.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.Parser.AppendR1C1Number(System.Text.StringBuilder,System.String,System.Int32,System.Boolean)">
            <summary>
            Appends the R1C1 text representation of the cell coordinate.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.Parser.ParseCellReference(System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Converts the string to a CellExpression.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.Parser.ParseRowReference(System.String,System.Int32,System.Boolean)">
            <summary>
            Converts the string to a RangeExpression.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.Parser.ParseColumnReference(System.String,System.Int32,System.Boolean)">
            <summary>
            Converts the string to a RangeExpression.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.Parser.ParseReference(System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Converts the string to a ReferenceExpression.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.Parser.ParseExternalReference(System.String,System.Int32,System.Int32,System.Boolean,System.Collections.ArrayList)">
            <summary>
            Converts the string to a ReferenceExpression.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.Parser.TransferOperators(System.Collections.Stack,System.Collections.Stack,System.Int32)">
            <summary>
            Transfers operators with precedence levels greater than or equal
            to the specified precedence level from the operator stack to the
            expression stack.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.Parser.Parse(System.String,System.Int32,System.Int32,System.Boolean,System.Collections.Hashtable,System.Collections.Hashtable,System.Collections.ArrayList)">
            <summary>
            Converts the string to an Expression object.
            </summary>
            <param name="text">String to convert</param>
            <param name="baseRow">Base row position</param>
            <param name="baseColumn">Base column position</param>
            <param name="useR1C1">Whether to use R1C1 notation</param>
            <param name="customFunctions">Table of custom functions</param>
            <param name="customNames">Table of custom names</param>
            The operator stack holds unary prefix operators, binary infix operators,
            functions, commas, and left parentheses until their corresponding
            operands are parsed.  The expression stack holds sub-expressions while the
            text is being parsed.
        </member>
        <member name="M:FarPoint.Win.Spread.Model.Parser.Unparse(FarPoint.CalcEngine.Expression,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Converts an Expression object to a string.
            </summary>
            <param name="expr">Expression to convert</param>
            <param name="baseRow">Base row position</param>
            <param name="baseColumn">Base column position</param>
            <param name="useR1C1">Whether to use R1C1 notation</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.Parser.Unparse(FarPoint.CalcEngine.Expression,System.Text.StringBuilder,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Converts an Expression object to a string.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.Model.ReferenceStyle">
            <summary>
            Specifies the reference style in formulas and custom names in the sheet.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.Model.ReferenceStyle.A1">
            <summary>
            Uses letters and numbers for column and row coordinates; 
            uses dollar sign ($) for absolute coordinates
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.Model.ReferenceStyle.R1C1">
            <summary>
            Uses "R" and number for row, "C" and number for column coordinates; 
            uses brackets [ ] for relative coordinates
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.Model.IUnboundRowSupport">
            <summary>
            Interface that supports unbound rows when the model is bound to a data source.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.IUnboundRowSupport.AddUnboundRows(System.Int32,System.Int32)">
            <summary>
            Adds unbound rows to the data model.
            </summary>
            <param name="row">Start index to add the new rows</param>
            <param name="count">Number of rows to add</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.IUnboundRowSupport.AddRowToDataSource(System.Int32,System.Boolean)">
            <summary>
            Adds the unbound row to the data source.
            </summary>
            <param name="row">Index of unbound row</param>
            <param name="autoFillData">Whether to automatically fill the row with data </param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.IUnboundRowSupport.GetUnboundValue(System.Int32,System.Int32)">
            <summary>
            Gets the unbound value for the cell.
            </summary>
            <param name="row">Row index</param>
            <param name="column">Column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.IUnboundRowSupport.IsRowBound(System.Int32)">
            <summary>
            Determines whether the row is bound.
            </summary>
            <param name="row">Row to check</param>
        </member>
        <member name="T:FarPoint.Win.Spread.Model.IDataSourceSupport">
            <summary>
            Interface that supports data binding and data relations in the data model.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.IDataSourceSupport.GetDataColumnName(System.Int32)">
            <summary>
            Gets the column name at the specified position.
            </summary>
            <param name="column">Column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.IDataSourceSupport.GetDataView(System.Boolean)">
            <summary>
            Gets the DataView object.
            </summary>
            <param name="create">Whether to re-create the DataView</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.IDataSourceSupport.SetModelDataColumn(System.Int32,System.String)">
            <summary>
            Binds the model column with the data source column.
            </summary>
            <param name="column">Model column to be bounded</param>
            <param name="columnName">Data source column name of the column to which to bind</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.IDataSourceSupport.GetDataRowFromModelRow(System.Int32)">
            <summary>
            Converts the model row index to the data source row index.
            </summary>
            <param name="row">Model row index to be converted</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.IDataSourceSupport.GetModelRowFromDataRow(System.Int32)">
            <summary>
            Converts the data source row index to the model row index.
            </summary>
            <param name="row">Data source row index to be converted</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.IDataSourceSupport.GetDataColumnFromModelColumn(System.Int32)">
            <summary>
            Converts the model column index to the data source column index.
            </summary>
            <param name="column">Model column index to be converted</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.IDataSourceSupport.GetModelColumnFromDataColumn(System.Int32)">
            <summary>
            Converts the data source column index to the model column index.
            </summary>
            <param name="column">Data source column index to be converted</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.IDataSourceSupport.IsColumnBound(System.Int32)">
            <summary>
            Determines whether the column is bound to a data source column.
            </summary>
            <param name="column">Index of a column in the model for which to return the status </param>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.IDataSourceSupport.DataSource">
            <summary>
            Gets or sets the data source.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.IDataSourceSupport.DataMember">
            <summary>
            Gets or sets the data member (table name).
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.IDataSourceSupport.AutoGenerateColumns">
            <summary>
            Gets or sets whether to generate the columns automatically based on the data source.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.Model.IChildModelSupport">
            <summary>
            Interface that supports a child data model in the data model.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.IChildModelSupport.GetChildRelation(System.Int32)">
            <summary>
            Gets the name of the child data relation at the specified position.
            </summary>
            <param name="index">Index to the child relation</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.IChildModelSupport.GetChildDataModel(System.Int32,System.String)">
            <summary>
            Gets the child data model for the specified row and data relation.
            </summary>
            <param name="row">Row whose child data model is to be returned</param>
            <param name="relation">Data relation name</param>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.IChildModelSupport.ParentRowIndex">
            <summary>
            Gets or sets the index of the parent row.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.IChildModelSupport.ParentRelationName">
            <summary>
            Gets or sets the name of the data relation.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.IChildModelSupport.ChildRelationCount">
            <summary>
            Gets the number of child data relations.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.IChildModelSupport.Parent">
            <summary>
            Gets the parent data source.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.Model.ISuspendFormulaParsing">
            <summary>
            Interface that supports suspension of formula parsing during deserialization.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.ISuspendFormulaParsing.SuspendFormulaParsing">
            <summary>
            Suspends formula parsing until ResumeFormulaParsing is called.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.ISuspendFormulaParsing.ResumeFormulaParsing">
            <summary>
            Resumes formula parsing and parses all formulas set while parsing was suspended.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.Model.DefaultSheetDataModel">
            <summary>
            Represents the full (concrete) implementation of the ISheetDataModel interface for a data model for a sheet, 
            which represents tabular data on a sheet. 
            </summary>  
        </member>
        <member name="T:FarPoint.Win.Spread.Model.BaseSheetDataModel">
            <summary>
            Represents the partial (abstract) implementation of the ISheetDataModel interface 
            for a data model for a sheet.  
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.Model.ISheetDataModel">
            <summary>
            Interface that supports creating a model that represents tabular data. 
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.ISheetDataModel.IsRowUsed(System.Int32)">
            <summary>
            Determines whether the specified row contains data. 
            </summary>
            <param name="row">Row index</param>
            <returns>True if the row contains data; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.ISheetDataModel.IsEmpty">
            <summary>
            Determines whether the model is empty of data. 
            </summary>
            <returns>True if the cell has no data; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.ISheetDataModel.IsEditable(System.Int32,System.Int32)">
            <summary>
            Checks to see if the contents are editable for the cell at the specified row and column. 
            </summary>
            <param name="row">Row index</param>
            <param name="column">Column index</param>
            <returns>True if the cell contents can be edited; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.ISheetDataModel.GetValue(System.Int32,System.Int32)">
            <summary>
            Gets the value in a cell at the specified row and column. 
            </summary>
            <param name="row">Row index</param>
            <param name="column">Column index</param>
            <returns>Object with value in cell</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.ISheetDataModel.SetValue(System.Int32,System.Int32,System.Object)">
            <summary>
            Sets data in a cell at the specified row and column. 
            </summary>
            <param name="row">Row index</param>
            <param name="column">Column index</param>
            <param name="value">Object containing data to set in cell</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.ISheetDataModel.GetNote(System.Int32,System.Int32)">
            <summary>
            Gets the note for a cell of the specified row and column. 
            </summary>
            <param name="row">Row index</param>
            <param name="column">Column index</param>
            <returns>String with the note text</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.ISheetDataModel.SetNote(System.Int32,System.Int32,System.String)">
            <summary>
            Sets the note for a cell at the specified row and column. 
            </summary>
            <param name="row">Row index</param>
            <param name="column">Column index</param>
            <param name="value">String for note</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.ISheetDataModel.GetTag(System.Int32,System.Int32)">
            <summary>
            Gets the application data for a cell at the specified row and column. 
            </summary>
            <param name="row">Row index</param>
            <param name="column">Column index</param>
            <returns>Object with application data</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.ISheetDataModel.SetTag(System.Int32,System.Int32,System.Object)">
            <summary>
            Sets the application data associated with the cell 
            at the specified row and column. 
            </summary>
            <param name="row">Row index</param>
            <param name="column">Column index</param>
            <param name="value">Data to associate with cell</param>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.ISheetDataModel.ColumnCount">
            <summary>
            Gets or sets the number of columns. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.ISheetDataModel.RowCount">
            <summary>
            Gets or sets the number of rows. 
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.Model.ISheetDataModel.Changed">
            <summary>
            Occurs when the data model has changed.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.Model.INonEmptyCells">
            <summary>
            Interface that supports determining the number of columns and rows 
            with data in the data model.  
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.INonEmptyCells.NonEmptyRowCount">
            <summary>
            Gets the number of rows with data. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.INonEmptyCells.NonEmptyColumnCount">
            <summary>
            Gets the number of columns with data. 
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.Model.IOptimizedEnumerationSupport2">
            <summary>
            Interface that supports additional optimization for retrieval of data 
            in the data model beyond IOptimizedEnumerationSupport.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.Model.IOptimizedEnumerationSupport">
            <summary>
            Interface that supports optimization for retrieval of data 
            in the data model.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.IOptimizedEnumerationSupport.IsRowUsed(System.Int32)">
            <summary>
            Determines whether a row had data in any of the cells in that row.
            </summary>
            <param name="row">Row index</param>
            <returns>true if the row has data; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.IOptimizedEnumerationSupport.NextNonEmptyColumnInRow(System.Int32,System.Int32)">
            <summary>
            Returns the index of the next column in this row that has data.
            </summary>
            <param name="row">Index of the row through which to look</param>
            <param name="column">Index of the column at which to start looking</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.IOptimizedEnumerationSupport2.NextNonEmptyRow(System.Int32)">
            <summary>
            Returns the index of the next row that has data.
            </summary>
            <param name="row">Index of the row at which to start looking</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.BaseSheetDataModel.IsRowUsed(System.Int32)">
            <summary>
            Determines whether the specified row contains data.
            </summary>
            <param name="row">Row index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.BaseSheetDataModel.NextNonEmptyColumnInRow(System.Int32,System.Int32)">
            <summary>
            Gets the index of the next column in a specified row that contains data.
            </summary>
            <param name="row">Row index to search</param>    
            <param name="column">Column index before the column to start searching (-1 to start at column 0)</param>    
        </member>
        <member name="M:FarPoint.Win.Spread.Model.BaseSheetDataModel.NextNonEmptyRow(System.Int32)">
            <summary>
            Gets the index of the next row that contains data.
            </summary>
            <param name="row">Row index after which to start searching (-1 to start at row 0)</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.BaseSheetDataModel.IsEmpty">
            <summary>
            Determines whether the model is empty of data.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.BaseSheetDataModel.IsEditable(System.Int32,System.Int32)">
            <summary>
            Determines whether the contents of a cell 
            at a specified row and column are editable. 
            </summary>
            <param name="row">Row index</param>
            <param name="column">Column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.BaseSheetDataModel.GetValue(System.Int32,System.Int32)">
            <summary>
            Gets the value for a cell at a specified row and column. 
            </summary>
            <param name="row">Row index</param>
            <param name="column">Column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.BaseSheetDataModel.SetValue(System.Int32,System.Int32,System.Object)">
            <summary>
            Sets data for a cell at a specified row and column. 
            </summary>
            <param name="row">Row index</param>
            <param name="column">Column index</param>
            <param name="value">Value to set in cell</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.BaseSheetDataModel.GetNote(System.Int32,System.Int32)">
            <summary>
            Gets the note for a cell at a specified row and column. 
            </summary>
            <param name="row">Row index</param>
            <param name="column">Column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.BaseSheetDataModel.SetNote(System.Int32,System.Int32,System.String)">
            <summary>
            Sets the note for a cell at a specified row and column. 
            </summary>
            <param name="row">Row index</param>
            <param name="column">Column index</param>
            <param name="value">String for note</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.BaseSheetDataModel.GetTag(System.Int32,System.Int32)">
            <summary>
            Gets the application data for a cell 
            at a specified row and column.
            </summary>
            <param name="row">Row index</param>
            <param name="column">Column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.BaseSheetDataModel.SetTag(System.Int32,System.Int32,System.Object)">
            <summary>
            Sets the application data for a cell 
            at a specified row and column. 
            </summary>
            <param name="row">Row index</param>
            <param name="column">Column index</param>
            <param name="value">Data to associate with cell</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.BaseSheetDataModel.OnChanged(FarPoint.Win.Spread.Model.SheetDataModelEventArgs)">
            <summary>
            Raises the Changed event, and permits derived classes to handle
            the event without attaching a delegate.
            </summary>
            <param name="e">SheetSpanModelEventArgs object that contains event data</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.BaseSheetDataModel.FireChanged(System.Int32,System.Int32)">
            <summary>
            Raises the Changed event.
            </summary>
            <param name="row">Row index</param>
            <param name="column">Column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.BaseSheetDataModel.FireChanged(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Raises the Changed event.
            </summary>
            <param name="row">Row index</param>
            <param name="column">Column index</param>
            <param name="rowCount">Number of rows</param>
            <param name="columnCount">Number of columns</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.BaseSheetDataModel.FireChanged(System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.Model.SheetDataModelEventType)">
            <summary>
            Raises the Changed event.
            </summary>
            <param name="row">Row index</param>
            <param name="column">Column index</param>
            <param name="rowCount">Number of rows</param>
            <param name="columnCount">Number of columns</param>
            <param name="type">Type of event raised</param>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.BaseSheetDataModel.ColumnCount">
            <summary>
            Gets or sets the number of columns.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.BaseSheetDataModel.RowCount">
            <summary>
            Gets or sets the number of rows.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.BaseSheetDataModel.NonEmptyColumnCount">
            <summary>
            Gets the number of columns that contain data. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.BaseSheetDataModel.NonEmptyRowCount">
            <summary>
            Gets the number of rows that contain data. 
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.Model.BaseSheetDataModel.Changed">
            <summary>
            Occurs when the user makes a change to the model 
            that affects the data of the sheet.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.Model.IArraySupport">
            <summary>
            Interface that supports arrays of values in a range of cells 
            in the data model.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.IArraySupport.GetArray(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets an object array from a specified range of cells.
            </summary>
            <param name="row">
            Starting model row index
            </param>
            <param name="column">
            Starting model column index
            </param>
            <param name="rowCount">
            Number of rows to copy
            </param>
            <param name="columnCount">
            Number of columns to copy
            </param>
            <returns>
            Two-dimensional object array[row,column] containing tabular data
            </returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.IArraySupport.SetArray(System.Int32,System.Int32,System.Object[0:,0:])">
            <summary>
            Sets an object array into a specified range of cells.
            </summary>
            <param name="row">
            Starting model row index
            </param>
            <param name="column">
            Starting model column index
            </param>
            <param name="value">
            Two-dimensional object array[row,column] containing tabular data
            </param>
        </member>
        <member name="T:FarPoint.Win.Spread.Model.IExpressionSupport">
            <summary>
            Interface that supports formulas as values and as expressions 
            in the data model. 
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.IExpressionSupport.GetFormula(System.Int32,System.Int32)">
            <summary>
            Gets the formula, as a string, in the cell 
            at the specified row and column.
            </summary>
            <param name="row">Row index</param>
            <param name="column">Column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.IExpressionSupport.SetFormula(System.Int32,System.Int32,System.String)">
            <summary>
            Sets the formula, as a string, in the cell 
            at the specified row and column. 
            </summary>
            <param name="row">Row index</param>
            <param name="column">Column index</param>
            <param name="value">Formula</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.IExpressionSupport.GetExpression(System.Int32,System.Int32)">
            <summary>
            Gets the formula, as an expression, in the cell 
            at the specified row and column.
            </summary>
            <param name="row">Row index</param>
            <param name="column">Column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.IExpressionSupport.SetExpression(System.Int32,System.Int32,FarPoint.CalcEngine.Expression)">
            <summary>
            Sets the formula, as an expression, in the cell 
            at the specified row and column. 
            </summary>
            <param name="row">Row index</param>
            <param name="column">Column index</param>
            <param name="value">Formula</param>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.IExpressionSupport.ReferenceStyle">
            <summary>
            Gets or sets the cell reference style.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.Model.IExpressionSupport2">
            <summary>
            Interface that supports additional formula functionality 
            in the data model including conditional cell formats.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.IExpressionSupport2.ParseFormula(System.Int32,System.Int32,System.String)">
            <summary>
            Parses the string value and returns the expression  
            for the cell at the specified row and column.
            </summary>
            <param name="row">Row index of the cell</param>
            <param name="column">Column index of the cell</param>
            <param name="value">Formula to be parsed to a string</param>
            <exception cref="T:FarPoint.Win.Spread.Model.ParseException">
            Value is not a valid formula.
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.IExpressionSupport2.UnparseFormula(System.Int32,System.Int32,FarPoint.CalcEngine.Expression)">
            <summary>
            Gets the formula, as a string value, for the specified expression 
            for the cell at the specified row and column.
            </summary>
            <param name="row">Row index of the cell</param>
            <param name="column">Column index of the cell</param>
            <param name="expression">Expression to be unparsed</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.IExpressionSupport2.EvaluateExpression(System.Int32,System.Int32,FarPoint.CalcEngine.Expression)">
            <summary>
            Evaluates the expression and returns the resulting object 
            for the cell at the specified row and column.
            </summary>
            <param name="row">Row index of the base cell</param>
            <param name="column">Column index of the base cell</param>
            <param name="expression">Expression to be evaluated</param>
        </member>
        <member name="T:FarPoint.Win.Spread.Model.ICalculationSupport">
            <summary>
            Interface that supports recalculation of formulas in the cells 
            in the data model.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.ICalculationSupport.Recalculate">
            <summary>
            Evaluates the formulas in the sheet that have changed since the last calculation cycle. 
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.ICalculationSupport.RecalculateAll">
            <summary>
            Evaluates all the formulas in the sheet (including those that have not changed 
            since the last calculation cycle). 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.ICalculationSupport.AutoCalculation">
            <summary>
            Gets or sets whether the control automatically recalculates each
            formula in the sheet when the contents of dependent cells change.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.Model.IIterationSupport">
            <summary>
            Interface that supports recursive formulas (with circular references) 
            in the data model. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.IIterationSupport.Iteration">
            <summary>
            Gets or sets whether circular references are evaluated.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.IIterationSupport.MaximumIterations">
            <summary>
            Gets or sets the maximum number of iterations.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.IIterationSupport.MaximumChange">
            <summary>
            Gets or sets the maximum amount of change below which
            iterations stop.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.Model.ICustomFunctionSupport">
            <summary>
            Interface that supports user-defined functions in formulas 
            in the data model.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.ICustomFunctionSupport.AddCustomFunction(FarPoint.CalcEngine.FunctionInfo)">
            <summary>
            Adds a new user-defined function to the model for use in formulas.
            </summary>
            <param name="functionInfo">Function to add</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.ICustomFunctionSupport.RemoveCustomFunction(System.String)">
            <summary>
            Removes a user-defined function from the model.
            </summary>
            <param name="name">Name of function to remove</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.ICustomFunctionSupport.GetCustomFunction(System.String)">
            <summary>
            Gets a user-defined function from the model.
            </summary>
            <param name="name">Name of function</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.ICustomFunctionSupport.GetCustomFunctionEnumerator">
            <summary>
            Gets an IEnumerator that enumerates through the names of the user-defined functions in the model.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.Model.ICustomFunctionSupport2">
            <summary>
            Interface that supports user-defined functions in formulas 
            in the data model.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.ICustomFunctionSupport2.ClearCustomFunctions">
            <summary>
            Removes all user-defined functions from the model.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.Model.ICustomNameSupport">
            <summary>
            Interface that supports user-defined names in formulas 
            in the data model.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.ICustomNameSupport.AddCustomName(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Adds a new user-defined name for the specified value, as string, to the model.
            </summary>
            <param name="name">Name to add</param>
            <param name="value">Value for name, as string</param>
            <param name="baseRow">Base row index for calculating relative row references in the value</param>
            <param name="baseColumn">Base column index for calculating relative column references in the value</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.ICustomNameSupport.AddCustomName(System.String,FarPoint.CalcEngine.Expression)">
            <summary>
            Adds a new user-defined name for the specified value, as expression, to the model.
            </summary>
            <param name="name">Name to add</param>
            <param name="value">Value for name, as expression</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.ICustomNameSupport.RemoveCustomName(System.String)">
            <summary>
            Removes a user-defined name from the model.
            </summary>
            <param name="name">Name to remove</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.ICustomNameSupport.GetCustomName(System.String,System.Int32,System.Int32)">
            <summary>
            Gets the user-defined name, as a string, from the model.
            </summary>
            <param name="name">Name, as a string</param>
            <param name="baseRow">Base row index for calculating relative row references in the value</param>
            <param name="baseColumn">Base column index for calculating relative column references in the value</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.ICustomNameSupport.GetCustomName(System.String)">
            <summary>
            Gets the user-defined name, as an expression, in the model.
            </summary>
            <param name="name">Name, as an expression</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.ICustomNameSupport.GetCustomNameEnumerator">
            <summary>
            Gets an IEnumerator that enumerates through the custom names defined in the model.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.Model.ICustomNameSupport2">
            <summary>
            Interface that supports user-defined names in formulas 
            in the data model.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.ICustomNameSupport2.ClearCustomNames">
            <summary>
            Removes all user-defined names from the model.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.Model.INameSupport">
            <summary>
            Interface that supports a name of a data model. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.INameSupport.Name">
            <summary>
            Gets or sets the name of the data model.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.Model.INameSupport.NameChanged">
            <summary>
            Occurs when the name of the data model changes.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.#ctor">
            <summary>
            Creates a default data model with zero rows and columns. 
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.#ctor(System.Int32,System.Int32)">
            <summary>
            Creates a default data model with the specified number of rows and columns.
            </summary>
            <param name="columnCount">Number of columns in the model</param>
            <param name="rowCount">Number of rows in the model</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new DefaultSheetDataModel from the SerializationInfo.
            </summary>
            <param name="info">SerializationInfo</param>
            <param name="context">StreamingContext</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.LoadFormulas(System.Boolean)">
            Loads formulas that are deserialized during deserialization. But, not parsing yet.
            This method is called after all the sheets has been created and deserialized.
            <summary>
            Loads formulas that are deserialized but not parsed yet, 
            to be used after all sheets have been created and deserialized.
            </summary>
            <param name="recalculate">Whether to recalculate all the formulas in cells that have changed</param>
            <remarks>This method will enable formula parsing if it is not already enabled.</remarks>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the DefaultSheetDataModel to the SerializationInfo.
            </summary>
            <param name="info">SerializationInfo</param>
            <param name="context">StreamingContext</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.#ctor(System.Data.DataTable)">
            <summary>
            Creates a default data model with the specified data table.
            </summary>
            <param name="dataSource">Data source to be used for this model</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.#ctor(System.Data.DataSet)">
            <summary>
            Creates a default data model with the specified data set.
            </summary>
            <param name="dataSource">Data source to be used for this model</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.#ctor(System.Data.DataSet,System.String)">
            <summary>
            Creates a default data model with the specified data set.
            </summary>
            <param name="dataSource">Data source to be used for this model</param>
            <param name="dataMember">Data table name</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.#ctor(System.ComponentModel.IListSource,System.Type)">
            <summary>
            Creates a default data model with the specified data set (IListSource object).
            </summary>
            <param name="dataSource">Data source to be used</param>
            <param name="itemType">Element type in the data source</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.#ctor(System.Collections.IList,System.Type)">
            <summary>
            Creates a default data model with the specified data set (IList object).
            </summary>
            <param name="dataSource">Data source to be used</param>
            <param name="itemType">Element type in the data source</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.GetChildDataModel(System.Int32,System.String)">
            <summary>
            Gets the data model (ISheetDataModel object) for the specified row and data relation.
            </summary>
            <param name="row">Row whose child data model is to be returned</param>
            <param name="relation">Data relation name</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.GetChildRelation(System.Int32)">
            <summary>
            Gets the name of the child data relation at the specified position.
            </summary>
            <param name="index">Index of the child data relation</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.GetDataRowFromModelRow(System.Int32)">
            <summary>
            Gets the data source row index for the specified row in the model.
            </summary>
            <param name="row">Index of row in the model</param>
            Converts the model row index to the data source row index.
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.GetModelRowFromDataRow(System.Int32)">
            <summary>
            Gets the row in the model for the specified data source row.
            </summary>
            <param name="row">Row index of data source</param>
            Converts the data source row index to the model row index.
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.GetDataView">
            <summary>
            Gets the DataView object associated with this model.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.GetDataView(System.Boolean)">
            <summary>
            Gets the DataView object associated with this model.
            </summary>
            <param name="create">Whether to re-create the DataView</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.GetDataTable">
            <summary>
            Gets the data table associated with this model.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.GetDataColumnName(System.Int32)">
            <summary>
            Gets the column name at the specified position.
            </summary>
            <param name="column">Column index for which name is requested</param>
            <exception cref="T:System.IndexOutOfRangeException">
            Specified index is out of range; must be between 0 and the total number of columns
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.GetListSource">
            <summary>
            Returns the IList data source for this model or null if the data source is not an IList.
            </summary>
            <returns>IList object</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.IsEmpty">
            <summary>
            Determines whether the data model is empty.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.IsEditable(System.Int32,System.Int32)">
            <summary>
            Determines whether the value in the cell of the specified row and colum can be edited.
            </summary>
            <param name="row">Row index of the cell</param>
            <param name="column">Column index of the cell</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.GetValue(System.Int32,System.Int32)">
            <summary>
            Gets the value of the cell for the specified row and column.
            </summary>
            <param name="row">Row index of the cell in the model</param>
            <param name="column">Column index of the cell in the model</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.SetValue(System.Int32,System.Int32,System.Object)">
            <summary>
            Sets the value for the cell of the specified row and column.
            </summary>
            <param name="row">Row index of cell in model</param>
            <param name="column">Column index of cell in model</param>
            <param name="value">Value to set</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.GetTag(System.Int32,System.Int32)">
            <summary>
            Gets an application-defined tag value for the cell of the specified row and column.
            </summary>
            <param name="row">Row index of cell in model</param>
            <param name="column">Column index of cell in model</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.SetTag(System.Int32,System.Int32,System.Object)">
            <summary>
            Sets an application-defined tag value for the cell of the specified row and column.
            </summary>
            <param name="row">Row index of cell in model</param>
            <param name="column">Column index of cell in model</param>
            <param name="value">Value to set</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.GetNonEmptyNotesRowCount">
            <summary>
            Gets a count of rows containing notes.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.GetNonEmptyNotesColumnCount">
            <summary>
            Gets a count of columns containing notes.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.GetNote(System.Int32,System.Int32)">
            <summary>
            Gets a user-defined note value for the cell of the specified row and column.
            </summary>
            <param name="row">Row index of cell (in model)</param>
            <param name="column">Column index of cell (in model)</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.SetNote(System.Int32,System.Int32,System.String)">
            <summary>
            Sets a user-defined note value for the cell at the specified row and column.
            </summary>
            <param name="row">Row index of cell in the model</param>
            <param name="column">Column index of cell in the model</param>
            <param name="value">Note value to set</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.GetArray(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets an object array from a specified range of cells.
            </summary>
            <param name="row">Row index of the cell from which to read into the array</param>
            <param name="column">Column index of the cell from which to read into the array</param>
            <param name="rowCount">Number of rows in the array</param>
            <param name="columnCount">Number of columns in the array</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.SetArray(System.Int32,System.Int32,System.Object[0:,0:])">
            <summary>
            Sets an object array into a specified range of cells.
            </summary>
            <param name="row">Row index of the start of the range of cells</param>
            <param name="column">Column index of the start of the range of cells</param>
            <param name="value">Two-dimensional object array[row,column] containing the values</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.ParseFormula(System.Int32,System.Int32,System.String)">
            <summary>
            Parses the string value and returns the expression for the cell at the specified row and column.
            </summary>
            <param name="row">Row index of the cell</param>
            <param name="column">Column index of the cell</param>
            <param name="value">Formula to be parsed to a string</param>
            <exception cref="T:FarPoint.Win.Spread.Model.ParseException">
            Specified value is not a valid formula
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.UnparseFormula(System.Int32,System.Int32,FarPoint.CalcEngine.Expression)">
            <summary>
            Gets the formula, as a string value, from the specified expression for the cell at the specified row and column.
            </summary>
            <param name="row">Row index of the cell</param>
            <param name="column">Column index of the cell</param>
            <param name="expression">Expression to be unparsed</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.EvaluateExpression(System.Int32,System.Int32,FarPoint.CalcEngine.Expression)">
            <summary>
            Evaluates the expression in the cell at the specified row and column and returns the resulting object.
            </summary>
            <param name="row">Row index of the base cell</param>
            <param name="column">Column index of the base cell</param>
            <param name="expression">Expression to be evaluated</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.GetFormula(System.Int32,System.Int32)">
            <summary>
            Gets the formula, as a string value, for the cell of the specified row and column.
            </summary>
            <param name="row">Row index of the cell</param>
            <param name="column">Column index of the cell</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.SetFormula(System.Int32,System.Int32,System.String)">
            <summary>
            Sets the formula, as a string value, for the cell of the specified row and column.
            If you pass null, it will clear the expression from that cell.
            </summary>
            <param name="row">Row index of the cell</param>
            <param name="column">Column index of the cell</param>
            <param name="value">Formula to be set, as a string</param>
            <exception cref="T:FarPoint.Win.Spread.Model.ParseException">
            Specified value is not a valid formula
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.GetExpression(System.Int32,System.Int32)">
            <summary>
            Gets the formula, as an expression value, for the cell of the specified row and column.
            </summary>
            <param name="row">Row index of the cell</param>
            <param name="column">Column index of the cell</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.SetExpression(System.Int32,System.Int32,FarPoint.CalcEngine.Expression)">
            <summary>
            Sets the formula, as an expression value, for the cell of the specified row and column. 
            </summary>
            <param name="row">Row index of the cell</param>
            <param name="column">Column index of the cell</param>
            <param name="value">Formula to be set as an expression</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.SetCellExpression(System.Int32,System.Int32,FarPoint.CalcEngine.Expression)">
            <summary>
            Internal method to set cell expression without triggering auto calculation.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.SetRowExpression(System.Int32,FarPoint.CalcEngine.Expression)">
            <summary>
            Internal method to set row expression without triggering auto calculation.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.SetColumnExpression(System.Int32,FarPoint.CalcEngine.Expression)">
            <summary>
            Internal method to set column expression without triggering auto calculation.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.Model.DefaultSheetDataModel.nameChanged">
            <summary>
            Occurs when the name of the data model changes.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.AddColumn">
            <summary>
            Adds a column to the data model after the last column.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.AddColumn(System.Int32)">
            <summary>
            Adds a column to the data model at the specified position. 
            </summary>
            <param name="column">Index of column at which to add new column</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.AddColumns(System.Int32,System.Int32)">
            <summary>
            Adds one or more columns to the data model at the specified position.
            </summary>
            <param name="column">Index of column at which to add new column</param>
            <param name="count">Number of columns to add</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified index of column is out of range; must be between zero and the number of columns
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified number of columns is out of range; must be greater than zero
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.GetDataRow(System.Int32)">
            <summary>
            Gets the view of a specified row of data.
            </summary>
            <param name="row">Row index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.AddUnboundRows(System.Int32,System.Int32)">
            <summary>
            Adds unbound rows to the data model.
            </summary>
            <param name="row">Row index at which to add the new rows</param>
            <param name="count">Number of rows to add</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.AddRowToDataSource(System.Int32,System.Boolean)">
            <summary>
            Adds the unbound row to the data source.
            </summary>
            <param name="row">Row index at which to add row</param>
            <param name="autoFillData">Whether to automatically fill the row with data</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.GetUnboundValue(System.Int32,System.Int32)">
            <summary>
            Gets the unbound value for the cell for the specified row and column.
            </summary>
            <param name="row">Row index of cell</param>
            <param name="column">Column index of cell</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.IsRowBound(System.Int32)">
            <summary>
            Determines whether the specified row is bound to a data source row.
            </summary>
            <param name="row">Index of row to check</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.AddRow">
            <summary>
            Adds a row to the data model after the last row.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.AddRow(System.Int32)">
            <summary>
            Adds a row to the data model at the specified position.
            </summary>
            <param name="row">Row index at which to add new row</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.AddRows(System.Int32,System.Int32)">
            <summary>
            Adds rows to the data model at the specified position.
            </summary>
            <param name="row">Row index at which to add new rows</param>
            <param name="count">Number of rows to add</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified index of row is out of range; must be between zero and the number of columns
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified number of rows is out of range; must be greater than zero
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.RemoveRow(System.Int32)">
            <summary>
            Removes a row at the specified position.
            </summary>
            <param name="row">Index of row to remove</param>    
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified row is out of range; must be between 0 and total number of rows
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.RemoveRows(System.Int32,System.Int32)">
            <summary>
            Removes one or more rows, starting with the specified row.
            </summary>
            <param name="row">Index of first row to remove</param>
            <param name="count">Number of rows to remove</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified row is out of range; must be between 0 and total number of rows
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified number of rows is out of range; must be between 1 and total number of rows beyond the specified starting row
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.RemoveRows(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Removes the rows from the specified position and updates the data source if so specified.
            </summary>
            <param name="row">Index of first row to remove</param>
            <param name="count">Number of rows to remove</param>
            <param name="updateDataSource">Whether to update the data source</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.RemoveColumn(System.Int32)">
            <summary>
            Removes a column at the specified position.
            </summary>
            <param name="column">Index of column to remove</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified column is out of range; must be between 0 and total number of columns
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.RemoveColumns(System.Int32,System.Int32)">
            <summary>
            Removes one or more columns starting with the column at the specified position.
            </summary>
            <param name="column">Index of first column to remove</param>
            <param name="count">Number of columns to remove</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified column is out of range; must be between 0 and total number of columns
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified number of columns is out of range; must be between 1 and total number of columns beyond the specified starting column
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.Clear(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Removes all the data and formulas from the specified range of cells.
            </summary>
            <param name="row">Row index of start of range to clear</param>
            <param name="column">Column index of start of range to clear</param>
            <param name="rowCount">Number of rows to clear</param>
            <param name="columnCount">Number of columns to clear</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.ClearData(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Removes all the data from the specified range of cells.
            </summary>
            <param name="row">Row index of start of range to clear</param>
            <param name="column">Column index of start of range to clear</param>
            <param name="rowCount">Number of rows to clear</param>
            <param name="columnCount">Number of columns to clear</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.ClearFormulas(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Removes all of the formulas from the specified range of cells.
            </summary>
            <param name="row">Row index of start of range to clear</param>
            <param name="column">Column index of start of range to clear</param>
            <param name="rowCount">Number of rows to clear</param>
            <param name="columnCount">Number of columns to clear</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.Copy(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Copies the data from a range of cells to a specified range of cells.
            </summary>
            <param name="fromRow">Row index of start of range from which to copy</param>
            <param name="fromColumn">Column index of start of range from which to copy</param>
            <param name="toRow">Row index of start of range to which to copy</param>
            <param name="toColumn">Column index of start of range to which to copy</param>
            <param name="rowCount">Number of rows to copy</param>
            <param name="columnCount">Number of columns to copy</param>
            <exception cref="T:System.ArgumentException">
            Specified starting and ending row or row count is not valid
            </exception>
            <exception cref="T:System.ArgumentException">
            Specified starting and ending column or column count is not valid
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.Move(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Moves the data from a range of cells to the specified location.
            </summary>
            <param name="fromRow">Row index of starting position of range to move</param>
            <param name="fromColumn">Column index of starting position of range to move</param>
            <param name="toRow">Row index of starting position of destination</param>
            <param name="toColumn">Column index of starting position of destination</param>
            <param name="rowCount">Number of rows in range</param>
            <param name="columnCount">Number of columns in range</param>
            <exception cref="T:System.ArgumentException">
            Specified starting and ending row or row count is not valid
            </exception>
            <exception cref="T:System.ArgumentException">
            Specified starting and ending column or column count is not valid
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.Swap(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Swaps the specified ranges of cells.
            </summary>
            <param name="fromRow">Row index of starting position of range to move</param>
            <param name="fromColumn">Column index of starting position of range to move</param>
            <param name="toRow">Row index of starting position of destination</param>
            <param name="toColumn">Column index of starting position of destination</param>
            <param name="rowCount">Number of rows in range</param>
            <param name="columnCount">Number of columns in range</param>
            <exception cref="T:System.ArgumentException">
            Specified starting and ending row or row count is not valid
            </exception>
            <exception cref="T:System.ArgumentException">
            Specified starting and ending column or column count is not valid
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.IsRowUsed(System.Int32)">
            <summary>
            Determines whether the specified row is not empty.
            </summary>
            <param name="row">Index of row to check</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.NextNonEmptyRow(System.Int32)">
            <summary>
            Gets the index of the next non-empty row after the specified row index.
            </summary>
            <param name="row">Row index to start searching after (-1 to start at row 0)</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.NextNonEmptyColumnInRow(System.Int32,System.Int32)">
            <summary>
            Gets the index of the next column in a specified row that contains data.
            </summary>
            <param name="row">Row index to search</param>    
            <param name="column">Column index before the column to start searching (-1 to start at column 0)</param>    
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.Serialize(System.Xml.XmlTextWriter)">
            <summary>
            Saves the object to XML.
            </summary>
            <param name="w">XmlTextWriter object to which to save the object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.Serialize(System.Xml.XmlTextWriter,System.Boolean)">
            <summary>
            Saves the object to XML and 
            specifies whether to save the data source and bound data.
            </summary>
            <param name="w">XmlTextWriter object to which to save the object</param>
            <param name="saveDataSource">Whether to save the data source and bound data</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.Deserialize(System.Xml.XmlNodeReader)">
            <summary>
            Loads the object from XML.
            </summary>
            <param name="r">XmlNodeReader from which to load the object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.GetDataColumnFromModelColumn(System.Int32)">
            <summary>
            Gets the data source column index for the specified column in the model.
            </summary>
            <param name="column">Index of the column in the model</param>
            Converts the model column index to the data source column index.
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.GetModelColumnFromDataColumn(System.Int32)">
            <summary>
            Gets the column in the model for the specified data source column. 
            </summary>
            <param name="datacolumn">Index of the column in the data source</param>
            Converts the data source column index to the model column index.
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.IsColumnBound(System.Int32)">
            <summary>
            Determines whether the specified column is bound to a data source column.
            </summary>
            <param name="column">Column index to check</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.SetModelDataColumn(System.Int32,System.String)">
            <summary>
            Binds a model column to a specified data source column.
            </summary>
            <param name="column">Index of column in the model</param>
            <param name="columnName">Name of the data source column</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.SetModelDataColumn(System.Int32,System.Int32)">
            <summary>
            Binds the model column to a specified data source column.
            </summary>
            <param name="column">Column index in the model</param>
            <param name="value">Data source column</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.RecalculateCell(System.Int32,System.Int32)">
            <summary>
            Recalculates an individual cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.Recalculate">
            <summary>
            Evaluates the formulas in the sheet that have changed since the last calculation cycle.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.RecalculateAll">
            <summary>
            Evaluates all the formulas in the entire sheet 
            (including those that have not changed since the last calculation cycle).
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.AddCustomFunction(FarPoint.CalcEngine.FunctionInfo)">
             <summary>
             Adds a new user-defined custom function to the model for use in formulas.
             </summary>
             <param name="functionInfo">FunctionInfo object containing the user-defined function to add</param>
             <exception cref="T:System.ArgumentNullException">
             No function specified; function is a null reference (Nothing in Visual Basic)
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.RemoveCustomFunction(System.String)">
            <summary>
            Removes a user-defined custom function from the model.
            </summary>
            <param name="name">Name of the user-defined custom function to remove</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.ClearCustomFunctions">
            <summary>
            Removes all user-defined custom functions from the model.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.GetCustomFunction(System.String)">
            <summary>
            Gets a user-defined custom function from the model.
            </summary>
            <param name="name">Name of the user-defined custom function to get</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.GetCustomFunctionEnumerator">
            <summary>
            Gets an IEnumerator that enumerates through the names of the custom functions in the model.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.AddCustomName(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Adds a named expression to the model for use in formulas.
            </summary>
            <param name="name">Name of the expression to add (used in formulas to reference the value)</param>
            <param name="value">Value of the expression (used in formulas for evaluation)</param>
            <param name="baseRow">Base row index for computing relative cell references</param>
            <param name="baseColumn">Base column index for computing relative cell references</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.AddCustomName(System.String,FarPoint.CalcEngine.Expression)">
            <summary>
            Adds a named expression to the model for use in formulas.
            </summary>
            <param name="name">Name of the expression to add (used in formulas to reference the value)</param>
            <param name="value">Expression object to add</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.RemoveCustomName(System.String)">
            <summary>
            Removes a named expression from the model.
            </summary>
            <param name="name">User-defined custom name to remove</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.ClearCustomNames">
            <summary>
            Removes all named expressions from the model.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.GetCustomName(System.String,System.Int32,System.Int32)">
            <summary>
            Gets a named expression from the model with the specified base index for relative cell references.
            </summary>
            <param name="name">Custom name to get</param>
            <param name="baseRow">Base row index for computing relative cell references</param>
            <param name="baseColumn">Base column index for computing relative cell references</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.GetCustomName(System.String)">
            <summary>
            Gets a named expression from the model.
            </summary>
            <param name="name">Custom name to get</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.GetCustomNameEnumerator">
            <summary>
            Gets an IEnumerator that enumerates through the names of the named expressions in the model.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.SuspendFormulaParsing">
            <summary>
            Suspends parsing of formulas.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.ResumeFormulaParsing">
            <summary>
            Resumes parsing of formulas and parses all formulas set while parsing was suspended.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.DefaultSheetDataModel.Parent">
            <summary>
            Gets the parent data source support object.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.DefaultSheetDataModel.ParentRowIndex">
            <summary>
            Gets the index of the row in the parent data model associated with this child data model.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.DefaultSheetDataModel.ParentRelationName">
            <summary>
            Gets the name of the data relation being used for a hierarchical display of data.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.DefaultSheetDataModel.ChildRelationCount">
            <summary>
            Gets the number of the child data relations for a hierarchical display of data.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.DefaultSheetDataModel.DataSource">
            <summary>
            Gets or sets the data source.
            </summary>
            <exception cref="T:System.ArgumentException">Data source is empty</exception>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.DefaultSheetDataModel.DataMember">
            <summary>
            Gets or sets the data member (table name) to use for data. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.DefaultSheetDataModel.ItemType">
            <summary>
            Gets or sets the type of the object in the list for the list data source.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.DefaultSheetDataModel.RowCount">
            <summary>
            Gets or sets the number of rows in the model.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.DefaultSheetDataModel.ColumnCount">
            <summary>
            Gets or sets the number of columns in the model.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.DefaultSheetDataModel.NonEmptyColumnCount">
            <summary>
            Gets the number of columns in the model containing data (bound or unbound).
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.DefaultSheetDataModel.NonEmptyRowCount">
            <summary>
            Gets the number of rows in the model containing data (bound or unbound).
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.DefaultSheetDataModel.Name">
             <summary>
             Gets or sets the name of the data model.
             </summary>
             <exception cref="T:System.ArgumentNullException">
             No name is specified; name is a null reference (Nothing in Visual Basic)
            </exception>
        </member>
        <member name="E:FarPoint.Win.Spread.Model.DefaultSheetDataModel.NameChanged">
            <summary>
            Occurs when the name of the data model changes.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.DefaultSheetDataModel.ReferenceStyle">
            <summary>
            Gets or sets the cell reference style 
            for cells with formulas.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.DefaultSheetDataModel.AutoCalculation">
            <summary>
            Gets or sets whether the control automatically recalculates each formula in the sheet 
            when the contents of dependent cells change. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.DefaultSheetDataModel.Iteration">
            <summary>
            Gets or sets whether circular references are evaluated.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.DefaultSheetDataModel.MaximumIterations">
            <summary>
            Gets or sets the maximum number of iterations for calculations with circular references.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified number of iterations is out of range; must be an integer between 1 and 32767
            </exception>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.DefaultSheetDataModel.MaximumChange">
            <summary>
            Gets or sets the maximum amount of change below which to stop iterating
            for caclulations with circular references.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified amount is out of range; must be zero or more
            </exception>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.DefaultSheetDataModel.CanSerializeXml">
            <summary>
            Gets whether the object in its entirety can be rendered with XML without losing any information.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.DefaultSheetDataModel.AutoGenerateColumns">
            <summary>
            Gets or sets whether to generate the columns automatically based on the data source.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.CalculationController.IsDirtyCell(FarPoint.Win.Spread.Model.CellCalc)">
            <summary>
            Determines whether the given cell is on the list of cells
            that need to be recalculated.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.CalculationController.AddDirtyCell(FarPoint.Win.Spread.Model.CellCalc)">
            <summary>
            Adds the specified cell to the list of cells that
            need to be recalculated.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.CalculationController.RemoveDirtyCell(FarPoint.Win.Spread.Model.CellCalc)">
            <summary>
            Removes the specified cell from the list of cells to be recalculated.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.CalculationController.IsDirtyRow(FarPoint.Win.Spread.Model.RowCalc)">
            <summary>
            Determines whether the specified row is on the list of rows
            that need to be recalculated. 
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.CalculationController.AddDirtyRow(FarPoint.Win.Spread.Model.RowCalc)">
            <summary>
            Adds the specified row to the list of rows that
            need to be recalculated. 
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.CalculationController.RemoveDirtyRow(FarPoint.Win.Spread.Model.RowCalc)">
            <summary>
            Removes the specified row from the list of rows to be recalculated.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.CalculationController.IsDirtyColumn(FarPoint.Win.Spread.Model.ColumnCalc)">
            <summary>
            Determines whether the specified column is on the list of columns
            that need to be recalculated.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.CalculationController.AddDirtyColumn(FarPoint.Win.Spread.Model.ColumnCalc)">
            <summary>
            Adds the specified column to the list of columns that
            need to be recalculated.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.CalculationController.RemoveDirtyColumn(FarPoint.Win.Spread.Model.ColumnCalc)">
            <summary>
            Removes the specified column from the list of columns to be recalculated.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.CalculationController.IsAdjustCell(FarPoint.Win.Spread.Model.CellCalc)">
            <summary>
            Determines whether the given cell is on the list of cells
            that need to be adjusted.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.CalculationController.AddAdjustCell(FarPoint.Win.Spread.Model.CellCalc)">
            <summary>
            Adds the specified cell to the list of cells that
            need to be adjusted.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.CalculationController.RemoveAdjustCell(FarPoint.Win.Spread.Model.CellCalc)">
            <summary>
            Removes the specified cell from the list of cells to be adjusted.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.CalculationController.IsAdjustRow(FarPoint.Win.Spread.Model.RowCalc)">
            <summary>
            Determines whether the specified row is on the list of rows
            that need to be adjusted. 
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.CalculationController.AddAdjustRow(FarPoint.Win.Spread.Model.RowCalc)">
            <summary>
            Adds the specified row to the list of rows that
            need to be adjusted. 
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.CalculationController.RemoveAdjustRow(FarPoint.Win.Spread.Model.RowCalc)">
            <summary>
            Removes the specified row from the list of rows to be adjusted.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.CalculationController.IsAdjustColumn(FarPoint.Win.Spread.Model.ColumnCalc)">
            <summary>
            Determines whether the specified column is on the list of columns
            that need to be adjusted.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.CalculationController.AddAdjustColumn(FarPoint.Win.Spread.Model.ColumnCalc)">
            <summary>
            Adds the specified column to the list of columns that
            need to be adjusted.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.CalculationController.RemoveAdjustColumn(FarPoint.Win.Spread.Model.ColumnCalc)">
            <summary>
            Removes the specified column from the list of columns to be adjusted.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.CalculationController.IsVolatileCell(FarPoint.Win.Spread.Model.CellCalc)">
            <summary>
            Determines whether the given cell is on the list of cells
            that need to be recalculated.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.CalculationController.AddVolatileCell(FarPoint.Win.Spread.Model.CellCalc)">
            <summary>
            Adds the specified cell to the list of cells that
            need to be recalculated.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.CalculationController.RemoveVolatileCell(FarPoint.Win.Spread.Model.CellCalc)">
            <summary>
            Removes the specified cell from the list of cells to be recalculated.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.CalculationController.IterationChange(System.Object,System.Object)">
            <summary>
            Determines the amount of change during an iteration.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.CalculationController.Recalculate">
            <summary>
            Evaluates the formulas in the sheet that have changed since the last calculation cycle.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.CalculationController.AddCustomFunction(FarPoint.CalcEngine.FunctionInfo)">
             <summary>
             Adds a new user-defined custom function to the model for use in formulas.
             </summary>
             <param name="functionInfo">Specifies the user-defined Function object to add</param>
             <remarks>User-defined Function class must be marked with the Serializable attribute 
             or an exception occurs if the data model is saved to view state, a file, or otherwise serialized.</remarks>
             <exception cref="T:System.ArgumentNullException">
             No function is specified; function is a null reference (Nothing in Visual Basic)
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.CalculationController.RemoveCustomFunction(System.String)">
            <summary>
            Removes a user-defined custom function from the model.
            </summary>
            <param name="name">Name of the user-defined custom function to remove</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.CalculationController.ClearCustomFunctions">
            <summary>
            Removes all user-defined custom functions from the model.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.CalculationController.GetCustomFunction(System.String)">
            <summary>
            Gets a user-defined custom function from the model.
            </summary>
            <param name="name">Name of the user-defined custom function to get</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.CalculationController.GetCustomFunctionEnumerator">
            <summary>
            Gets an IEnumerator that enumerates through the names of the custom functions in the model.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.CalculationController.AddCustomName(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Adds a named expression to the model for use in formulas.
            </summary>
            <param name="name">Name of the expression to add (used in formulas to reference the value)</param>
            <param name="value">Value of the expression (used in formulas for evaluation)</param>
            <param name="baseRow">Base row index for computing relative cell references</param>
            <param name="baseColumn">Base column index for computing relative cell references</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.CalculationController.AddCustomName(System.String,FarPoint.CalcEngine.Expression)">
            <summary>
            Adds a named expression to the model for use in formulas.
            </summary>
            <param name="name">Name of the expression to add (used in formulas to reference the value)</param>
            <param name="value">Expression object to add</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.CalculationController.RemoveCustomName(System.String)">
            <summary>
            Removes a named expression from the model.
            </summary>
            <param name="name">User-defined custom name to remove</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.CalculationController.ClearCustomNames">
            <summary>
            Removes all named expression from the model.
            </summary>
            <param name="name">User-defined custom name to remove</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.CalculationController.GetCustomName(System.String,System.Int32,System.Int32)">
            <summary>
            Gets a named expression from the model with the specified base index for relative cell references.
            </summary>
            <param name="name">Custom name to get</param>
            <param name="baseRow">Base row index for computing relative cell references</param>
            <param name="baseColumn">Base column index for computing relative cell references</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.CalculationController.GetCustomName(System.String)">
            <summary>
            Gets a named expression from the model.
            </summary>
            <param name="name">Custom name to get</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.CalculationController.GetCustomNameEnumerator">
            <summary>
            Gets an IEnumerator that enumerates through the names of the named expressions in the model.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.DefaultSheetDataModel.CalculationController.ReferenceStyle">
            <summary>
            Gets or sets the cell reference style.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.DefaultSheetDataModel.CalculationController.AutoCalculation">
            <summary>
            Gets or sets whether the sheet recalculates each
            formula when the contents of dependent cells change.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.DefaultSheetDataModel.CalculationController.Iteration">
            <summary>
            Gets or sets whether circular references are evaluated.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.DefaultSheetDataModel.CalculationController.MaximumIterations">
            <summary>
            Gets or sets the maximum number of iterations.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified number of iterations is out of range; must be between 1 and 32767
            </exception>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.DefaultSheetDataModel.CalculationController.MaximumChange">
            <summary>
            Gets or sets the maximum amount of change below which
            iterations stop.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified amount is out of range; must be zero or more
            </exception>
        </member>
        <member name="T:FarPoint.Win.Spread.Model.ColumnInfo">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.ColumnInfo.#ctor(System.String,System.Type)">
            <summary>
            Creates a ColumnInfo object
            </summary>
            <param name="columnName"></param>
            <param name="dataType"></param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.ColumnInfo.#ctor(System.String,System.Type,System.Int32)">
            <summary>
            Creates a ColumnInfo object
            </summary>
            <param name="columnName"></param>
            <param name="dataType"></param>
        </member>
        <member name="T:FarPoint.Win.Spread.Model.RangesCalc">
            <summary>
            Represents table of ranges that have listeners.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.Model.RangesCalc.CellListenerEntry">
            <summary>
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.Model.RangesCalc.RowListenerEntry">
            <summary>
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.Model.RangesCalc.ColumnListenerEntry">
            <summary>
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.ColumnClipInfoRange">
            <summary>
            Represents a one-dimensional collection of ColumnClipInfo objects.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.ColumnClipInfoRange.Item(System.Int32)">
            <summary>
            Gets or sets a ColumnClipInfo object for the column specified.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.ColumnClipInfoRange.ColumnCount">
            <summary>
            Gets the number of columns in the one-dimensional collection.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.ColumnClipInfo">
            <summary>
            Represents the information for a column (not including the value or style information).
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.ColumnClipInfo.#ctor">
            <summary>
            Creates a new a set of column information (ColumnClipInfo object).
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.ColumnClipInfo.SortIndicator">
            <summary>
            Gets or sets the sort indicator of this column.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.ColumnClipInfo.Width">
            <summary>
            Gets or sets the width of cells in this column.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.ColumnClipInfo.Visible">
            <summary>
            Gets or sets whether the column is visible.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.ColumnClipInfo.ShowSortIndicator">
            <summary>
            Gets or sets whether the column shows a sort indicator when automatically sorted.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.ColumnClipInfo.Resizable">
            <summary>
            Gets or sets whether this column can be resized.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.ColumnClipInfo.PageBreak">
            <summary>
            Gets or sets whether a page break is inserted before this column when printing.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.ColumnClipInfo.MergePolicy">
            <summary>
            Gets or sets the whether to automatically merge adjacent identical cells in this column.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.ColumnClipInfo.AllowAutoFilter">
            <summary>
            Gets or sets whether the column allows automatic filtering.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.ColumnClipInfo.AllowAutoSort">
            <summary>
            Gets or sets whether the column allows automatic sorting.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.ColumnClipInfo.SheetName">
            <summary>
            Gets or sets the name of the sheet.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.ColumnClipInfo.DataField">
            <summary>
            Gets or sets the name of the data field.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.Columns">
            <summary>
            Represents a one-dimensional collection of Column objects. 
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Columns.#ctor(FarPoint.Win.Spread.SheetView,System.Boolean,System.Boolean)">
            <summary>
            Creates a new column for the specified sheet and whether in the header.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Columns.GetDataModel">
            <summary>
            Gets the data model for this column.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Columns.GetAxisModel">
            <summary>
            Gets the axis model for this column.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Columns.Add(System.Int32,System.Int32)">
            <summary>
            Adds a new column or range of columns.
            </summary>
            <param name="index">Column index at which to start</param>
            <param name="count">Number of columns to add</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Columns.Remove(System.Int32,System.Int32)">
            <summary>
            Removes a column or range of columns.
            </summary>
            <param name="index">Column index at which to start</param>
            <param name="count">Number of columns to remove</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Columns.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of the collection to the array.
            </summary>
            <param name="array">Array</param>
            <param name="index">int</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Columns.System#Collections#IList#Add(System.Object)">
            <summary>
            Not supported (throws InvalidOperationException).
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Columns.AddRange(System.Collections.ICollection)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Columns.Clear">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Columns.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether the collection contains the specified object.
            </summary>
            <param name="value">
            Object to check for in the collection.
            </param>
            <returns>
            True if the object is found in the collection; false otherwise.
            </returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Columns.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Returns the index of the specified object. 
            </summary>
            <param name="value">
            Object for which to search.
            </param>
            <returns>
            Index of the object in the collection, or -1 if the object was not found. 
            </returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Columns.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Not supported (throws InvalidOperationException).
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Columns.System#Collections#IList#Remove(System.Object)">
            <summary>
            Not supported (throws InvalidOperationException).
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Columns.System#Collections#IList#RemoveAt(System.Int32)">
            <summary>
            Not supported (throws InvalidOperationException).
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Columns.Get(System.Int32)">
            <summary>
            Gets a new column for the specified column.
            </summary>
            <exception cref="T:System.IndexOutOfRangeException">
            Specified column index is less than -1 or greater than or equal to the column count
            </exception>
            <param name="column">Index of column</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Columns.Get(System.Int32,System.Int32)">
            <summary>
            Gets a new column for the specified range of columns.
            </summary>
            <exception cref="T:System.IndexOutOfRangeException">
            Specified column index is less than -1 or greater than or equal to the column count
            </exception>
            <param name="column">Starting column index</param>
            <param name="column2">Ending colum index</param>
        </member>
        <member name="P:FarPoint.Win.Spread.Columns.Item(System.String)">
            <summary>
            Gets the column for the specified tag.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Columns.Item(System.Int32)">
            <summary>
            Gets a new column for the specified column.
            </summary>
            <exception cref="T:System.IndexOutOfRangeException">
            Specified column index is less than -1 or greater than or equal to the column count
            </exception>
        </member>
        <member name="P:FarPoint.Win.Spread.Columns.Item(System.Int32,System.Int32)">
            <summary>
            Gets a new column for the specified range of columns.
            </summary>
            <exception cref="T:System.IndexOutOfRangeException">
            Specified column index is less than -1 or greater than or equal to the column count
            </exception>
        </member>
        <member name="P:FarPoint.Win.Spread.Columns.Count">
            <summary>
            Gets or sets the number of columns in the collection.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Columns.Default">
            <summary>
            Gets a DefaultColumn object for the default column (-1).
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Columns.Parent">
            <summary>
            Gets the parent object containing this collection of columns.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Columns.System#Collections#ICollection#Count">
            <summary>
            Returns the number of elements in the collection.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Columns.System#Collections#ICollection#IsSynchronized">
            <summary>
            Gets a value indicating whether access to the collection
            is synchronized (this implementation always returns false).
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Columns.System#Collections#ICollection#SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the collection.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Columns.System#Collections#IList#IsFixedSize">
            <summary>
            Gets a value indicating whether the collection has a fixed size (this
            implementation always returns true).
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Columns.System#Collections#IList#IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read-only (this
            implementation always returns true).
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.Columns.DefaultColumn">
            <summary>
            Represents the default column in the component. 
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.Column">
            <summary>
            Represents a column in the component.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Column.#ctor(FarPoint.Win.Spread.SheetView,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Creates a new column for the specified sheet and column and whether it is a header.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Column.#ctor(FarPoint.Win.Spread.SheetView,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Creates a new column for the specified range of columns and whether it is in a header.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Column.Invalidate">
            <summary>
            Invalidates the displayed cells and sends the message to repaint them.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Column.GetAxisModel">
            <summary>
            Gets the sheet axis model for this column.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Column.GetDataModel">
            <summary>
            Gets the sheet data model for this column.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Column.GetStyleModel">
            <summary>
            Gets the sheet style model for this column.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Column.IsValid(System.Int32)">
            <summary>
            Determines whether the specified view column index is valid
            in the sheet's data model, and if so sets the column field
            to the model column index.
            </summary>
            <param name="viewcolumn">View column index</param>
            <returns>True if viewcolumn is defined in the data model; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Column.GetStyleInfo">
            <summary>
            Fills the styleInfo field with the current style properties for the column.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Column.SetStyleInfo">
            <summary>
            Sets the styleInfo field into the style model for the column.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Column.GetPreferredWidth">
            <summary>
            Gets the minimum width necessary to display all the text within the specified column.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Column.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equivalent to this column.
            </summary>
            <param name="o">Object to compare</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Column.GetHashCode">
            <summary>
            Gets the hash code of this object.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Column.Add">
            <summary>
            Adds a new column or range of columns before this column or range of columns.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Column.Remove">
            <summary>
            Removes this column or range of columns.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Column.ToString">
            <summary>
            Gets a string containing an absolute reference to this
            column in the current reference style.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Column.ToString(FarPoint.Win.Spread.Model.ReferenceStyle)">
            <summary>
            Gets a string containing a reference to this
            column in the specified reference style.
            </summary>
            <param name="referenceStyle">
            Reference style
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.Column.ToString(FarPoint.Win.Spread.Column)">
            <summary>
            Gets a string containing a relative reference to this 
            column in the current reference style.
            </summary>
            <param name="relativeTo">
            Column to use for computing the relative reference
            </param>
            <exception cref="T:System.ArgumentNullException">
            Column is not specified or is not valid; must provide a valid Column object
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.Column.ToString(FarPoint.Win.Spread.Column,FarPoint.Win.Spread.Model.ReferenceStyle)">
            <summary>
            Gets a string containing a relative reference to this
            column in the specified reference style.
            </summary>
            <param name="relativeTo">
            Column to use for computing the relative reference
            </param>
            <param name="referenceStyle">
            Reference style
            </param>
            <exception cref="T:System.ArgumentNullException">
            Column is not specified or is not valid; must provide a valid Column object
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.Column.ResetNoteIndicatorColor">
            <summary>
            Resets the color of the cell note indicator for the column to the default value.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Column.ResetCanFocus">
            <summary>
            Resets to its default value whether the cells in the column can receive focus.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Column.ResetTabStop">
            <summary>
            Resets to its default value whether the user can set focus to the cells 
            in this column using the Tab key.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Column.ResetSortIndicator">
            <summary>
            Resets the sort indicator for the column and makes the column inherit the sort indicator 
            from the default column.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Column.ResetVisible">
            <summary>
            Resets the visiblity for the column and makes the column inherit the visibility 
            from the default column.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Column.ResetResizable">
            <summary>
            Resets the resizability for the column and makes the column inherit the resizability 
            from the default column.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Column.ResetBackColor">
            <summary>
            Resets the background color for the column and makes the column inherit the background color 
            from the default column.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Column.ResetForeColor">
            <summary>
            Resets the foreground color for the column and makes the column inherit the foreground color 
            from the default column.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Column.ResetBorder">
            <summary>
            Resets the cell border for the column and makes the column inherit the cell border 
            from the default column.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Column.ResetFont">
            <summary>
            Resets the font for the column and makes the column inherit the font from the default column.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Column.ResetHorizontalAlignment">
            <summary>
            Resets the horizontal alignment for the column and makes the column inherit the horizontal alignment 
            from the default column.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Column.ResetVerticalAlignment">
            <summary>
            Resets the vertical alignment for the column and makes the column inherit the vertical alignment 
            from the default column.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Column.ResetLocked">
            <summary>
            Resets the locked state for the column and makes the column inherit the locked state 
            from the default column.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Column.ResetCellType">
            <summary>
            Resets the cell type for the column and makes the column inherit the cell type 
            from the default column.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Column.ResetParentStyleName">
            <summary>
            Resets the ParentStyleName for the column to an empty string.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Column.ResetLabel">
            <summary>
            Resets the label for the column and makes the column use the automatic text.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Column.ResetWidth">
            <summary>
            Resets the width for the column and makes the column inherit the width 
            from the default column.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Column.ResetMergePolicy">
            <summary>
            Resets the merge policy for the column and makes the column inherit the merge policy 
            from the default column.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Column.SheetView">
            <summary>
            Internal use only. used by Formula Editor.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Column.DataField">
            <summary>
            Gets or sets the data field for this column in the data source.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Column.Index">
            <summary>
            Gets the index of this column, or the starting index for this range of columns.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Column.Index2">
            <summary>
            Gets the ending index for this range of columns.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Column.Tag">
            <summary>
            Gets or sets the application-defined tag value associated with the cells in this column.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Column.Formula">
            <summary>
            Gets or sets the formula for cells in this column.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Column.Label">
            <summary>
            Gets or sets the header label for this column.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Column.Parent">
            <summary>
            Gets the collection of columns (Columns object) containing this column.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Column.Width">
            <summary>
            Gets or sets the width of cells in this column.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified width is out of range; must be between -1 and 9,999,999 pixels
            </exception>
        </member>
        <member name="P:FarPoint.Win.Spread.Column.Resizable">
            <summary>
            Gets or sets whether this column can be resized.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Column.SortIndicator">
            <summary>
            Gets or sets the sort indicator for this column.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Column.Visible">
            <summary>
            Gets or sets whether this column is visible.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Column.StyleName">
            <summary>
            Gets or sets the name of the custom style for cells in this column.  
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Column.ParentStyleName">
            <summary>
            Gets or sets the name of the parent style  
            from which style properties are inherited for this column.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Column.NoteIndicatorColor">
            <summary>
            Gets or sets the default note indicator color for cells in this column.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Column.CanFocus">
            <summary>
            Gets or sets whether the user can set focus to the cell using the keyboard or mouse for cells in this column.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Column.TabStop">
            <summary>
            Gets or sets whether the user can set focus to cells in this column using the Tab key.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Column.BackColor">
            <summary>
            Gets or sets the default background color for cells in this column.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Column.ForeColor">
            <summary>
            Gets or sets the default text color for cells in this column. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Column.Border">
            <summary>
            Gets or sets the default border for cells in this column. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Column.Font">
            <summary>
            Gets or sets the default font for text in cells in this column.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Column.HorizontalAlignment">
            <summary>
            Gets or sets the default horizontal alignment for cells in this column.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Column.VerticalAlignment">
            <summary>
            Gets or sets the default vertical alignment for cells in this column.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Column.PageBreak">
            <summary>
            Gets or sets whether a page break is inserted before this column when printing.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Column.AllowAutoSort">
            <summary>
            Gets or sets whether this column allows automatic sorting.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Column.ShowSortIndicator">
            <summary>
            Gets or sets whether the column shows a sort indicator when automatically sorted.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Column.AllowAutoFilter">
            <summary>
            Gets or sets whether this column allows automatic filtering.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Column.Editor">
            <summary>
            Gets or sets the default editor for cells in this column.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Column.Renderer">
            <summary>
            Gets or sets the default renderer for cells in this column.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Column.Formatter">
            <summary>
            Gets or sets the default formatter for cells in this column.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Column.Locked">
            <summary>
            Gets or sets whether cells in this column are marked as locked.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Column.MergePolicy">
            <summary>
            Gets or sets the whether to automatically merge adjacent identical cells in this column.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Column.CellType">
            <summary>
            Gets or sets the default cell type for cells in this column.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Columns.DefaultColumn.ToString">
            <summary>
            Gets a string containing a reference to the default column in the current reference style.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Columns.DefaultColumn.AllowAutoSort">
            <summary>
            This property is not applicable. It cannot be set for a default column. 
            </summary>
            Gets or sets whether the default for columns allows automatic sorting.
        </member>
        <member name="P:FarPoint.Win.Spread.Columns.DefaultColumn.ShowSortIndicator">
            <summary>
            This property is not applicable. It cannot be set for a default column. 
            </summary>
            Gets or sets whether the default for columns show a sort indicator when automatically sorted.
        </member>
        <member name="P:FarPoint.Win.Spread.Columns.DefaultColumn.AllowAutoFilter">
            <summary>
            This property is not applicable. It cannot be set for a default column. 
            </summary>
            Gets or sets whether the default for columns allows automatic filtering.
        </member>
        <member name="P:FarPoint.Win.Spread.Columns.DefaultColumn.Formula">
            <summary>
            This property is not applicable. It cannot be set for a default column. 
            </summary>
            Gets or sets the formula for the default column.
        </member>
        <member name="P:FarPoint.Win.Spread.Columns.DefaultColumn.Label">
            <summary>
            This property is not applicable. It cannot be set for a default column. 
            </summary>
            Gets or sets the label for the default column.
        </member>
        <member name="P:FarPoint.Win.Spread.Columns.DefaultColumn.DataField">
            <summary>
            This property is not applicable. It cannot be set for a default column. 
            </summary>
            Gets or sets the data field for the default column in the data source.
        </member>
        <member name="P:FarPoint.Win.Spread.Columns.DefaultColumn.BackColor">
            <summary>
            Gets or sets the default background color for cells in the default column. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Columns.DefaultColumn.Border">
            <summary>
            Gets or sets the default border for cells in the default column.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Columns.DefaultColumn.CellType">
            <summary>
            Gets or sets the default cell type for cells in the default column. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Columns.DefaultColumn.Editor">
            <summary>
            Gets or sets the default editor for cells in the default column.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Columns.DefaultColumn.Font">
            <summary>
            Gets or sets the default font for cells in the default column.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Columns.DefaultColumn.ForeColor">
            <summary>
            Gets or sets the default text color for cells in the default column.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Columns.DefaultColumn.Formatter">
            <summary>
            Gets or sets the default formatter for cells in the default column. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Columns.DefaultColumn.HorizontalAlignment">
            <summary>
            Gets or sets the default horizontal alignment for cells in this column. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Columns.DefaultColumn.Locked">
            <summary>
            Gets or sets whether cells in the default column are marked as locked.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Columns.DefaultColumn.ParentStyleName">
            <summary>
            Gets or sets the name of the parent style (NamedStyle) from which 
            style properties are inherited for the default column. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Columns.DefaultColumn.Renderer">
            <summary>
            Gets or sets the default renderer for cells in the default column. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Columns.DefaultColumn.StyleName">
            <summary>
            Gets or sets the custom style (NamedStyle object) for cells in the default column.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Columns.DefaultColumn.VerticalAlignment">
            <summary>
            Gets or sets the default vertical alignment for cells in the default column
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.TabStripButtonPolicy">
            <summary>
            Specifies the display policy for the tab strip buttons.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.TabStripButtonPolicy.Always">
            <summary>
            Always display the tab strip buttons
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.TabStripButtonPolicy.Never">
            <summary>
            Do not ever display the tab strip buttons
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.TabStripButtonPolicy.AsNeeded">
            <summary>
            Display the tab strip buttons only when needed
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.SheetTab">
            <summary>
            Represents an individual sheet name tab.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetTab.#ctor">
            <summary>
            Creates a new sheet name tab.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetTab.#ctor(System.Windows.Forms.Control)">
            <summary>
            Creates a new sheet name tab for the specified control.
            </summary>
            <param name="owner">Control that owns the new sheet tab (SheetTab object)</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetTab.#ctor(System.Windows.Forms.Control,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font)">
            <summary>
            Creates a new sheet name tab for the specified control 
            with the specified appearance settings.
            </summary>
            <param name="owner">Control that owns the new sheet tab (SheetTab object)</param>
            <param name="backColor">Background color of the sheet tab</param>
            <param name="foreColor">Text color of the sheet tab</param>
            <param name="font">Text font of the sheet tab</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetTab.#ctor(System.Windows.Forms.Control,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font,System.Int32)">
            <summary>
            Creates a new sheet name tab for the specified control 
            with the specified appearance and size settings.
            </summary>
            <param name="owner">Control that owns the new sheet tab (SheetTab object)</param>
            <param name="backColor">Background color of the sheet tab</param>
            <param name="foreColor">Text color of the sheet tab</param>
            <param name="font">Text font of the sheet tab</param>
            <param name="size">Integer width of the tab in pixels</param>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetTab.BackColor">
            <summary>
            Gets or sets the background color for the sheet name tab.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetTab.ForeColor">
            <summary>
            Gets or sets the foreground color (text color) for the sheet name tab.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetTab.Font">
            <summary>
            Gets or sets the font for the sheet name in the sheet name tab.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetTab.Size">
            <summary>
            Gets or sets the size for the sheet name tab. 
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.TabStrip">
            <summary>
            Represents the set of sheet tabs.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.TabStrip.#ctor">
            <summary>
            Creates a new tab strip for a set of sheet tabs.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.TabStrip.#ctor(FarPoint.Win.Spread.FpSpread)">
            <summary>
            Creates a new tab strip for a set of sheet tabs for the specified FpSpread control.
            </summary>
            <param name="owner">FpSpread control that owns the tab strip</param>
        </member>
        <member name="M:FarPoint.Win.Spread.TabStrip.GetCompositeSize(System.Int32)">
            <summary>
            Gets the size of the sheet tabs.
            </summary>
            <param name="sheetTabIndex">Index of the sheet tab (Sheet tabs are zero based)</param>
        </member>
        <member name="M:FarPoint.Win.Spread.TabStrip.GetActiveSize(System.Int32)">
            <summary>
            Gets the size of the active sheet tab.
            </summary>
            <param name="activeTabIndex">Index of the active sheet tab (Sheet tabs are zero based)</param>
        </member>
        <member name="M:FarPoint.Win.Spread.TabStrip.GetCompositeBackColor(System.Int32)">
            <summary>
            Gets the background color of the sheet tabs.
            </summary>
            <param name="sheetTabIndex">Zero-based index of the sheet tab</param>
        </member>
        <member name="M:FarPoint.Win.Spread.TabStrip.GetCompositeForeColor(System.Int32)">
            <summary>
            Gets the text color of the sheet tabs.
            </summary>
            <param name="sheetTabIndex">Zero-based index of the sheet tab</param>
        </member>
        <member name="M:FarPoint.Win.Spread.TabStrip.GetActiveBackColor(System.Int32)">
            <summary>
            Gets the background color of the active sheet tab.
            </summary>
            <param name="activeTabIndex">Zero-based index of the active sheet tab</param>
        </member>
        <member name="M:FarPoint.Win.Spread.TabStrip.GetActiveForeColor(System.Int32)">
            <summary>
            Gets the text color of the active sheet tab.
            </summary>
            <param name="activeTabIndex">Zero-based index of the active sheet tab</param>
        </member>
        <member name="M:FarPoint.Win.Spread.TabStrip.GetCompositeFont(System.Int32)">
            <summary>
            Gets the font settings of the sheet tabs.
            </summary>
            <param name="sheetTabIndex">Zero-based index of the sheet tab</param>
        </member>
        <member name="M:FarPoint.Win.Spread.TabStrip.GetActiveFont(System.Int32)">
            <summary>
            Gets the font setting of the active sheet tab.
            </summary>
            <param name="activeTabIndex">Zero-based index of the active sheet tab</param>
        </member>
        <member name="P:FarPoint.Win.Spread.TabStrip.Owner">
            <summary>
            Gets or sets the Spread control that owns the tab strip.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.TabStrip.Count">
            <summary>
            Gets the number of sheet tabs displayed.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.TabStrip.Item(System.Int32)">
            <summary>
            Gets the specified sheet tab.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.TabStrip.BackColor">
            <summary>
            Gets or sets the background color of the tab strip.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.TabStrip.Editable">
            <summary>
            Gets or sets whether users can edit the sheet tab text by double-clicking it.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.TabStrip.ActiveSheetTab">
            <summary>
            Gets the active sheet tab.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.TabStrip.DefaultSheetTab">
            <summary>
            Gets the default sheet tab.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.TabStrip.ButtonPolicy">
            <summary>
            Gets or sets whether the sheet tab buttons are displayed.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.IApplyEvents">
            <summary>
             Interface for apply events in Spread Designer
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.ScrollBarPolicy">
            <summary>
            Specifies when the component displays the scroll bars.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.ScrollBarPolicy.AsNeeded">
            <summary>
            Displays the scroll bars only when needed
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.ScrollBarPolicy.Always">
            <summary>
            Displays the scroll bars at all times
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.ScrollBarPolicy.Never">
            <summary>
            Does not display the scroll bars
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.ScrollBarTrackPolicy">
            <summary>
            Specifies whether the component scrolls the sheet when the user moves the scroll box.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.ScrollBarTrackPolicy.Off">
            <summary>
            Does not scroll the sheet when the user moves the scroll box
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.ScrollBarTrackPolicy.Vertical">
            <summary>
            Scrolls the sheet when the user moves the vertical scroll box
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.ScrollBarTrackPolicy.Horizontal">
            <summary>
            Scrolls the sheet when the user moves the horizontal scroll box
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.ScrollBarTrackPolicy.Both">
            <summary>
            Scrolls the sheet when the user moves either the horizontal or the vertical scroll box
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.ScrollTipPolicy">
            <summary>
            Specifies whether the component displays the text tip when the user moves the scroll box.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.ScrollTipPolicy.Off">
            <summary>
            Does not display the text tip when the user moves the scroll box
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.ScrollTipPolicy.Vertical">
            <summary>
            Displays the row number in a text tip when the user moves the vertical scroll box
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.ScrollTipPolicy.Horizontal">
            <summary>
            Displays the column number in a text tip when the user moves the horizontal scroll box
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.ScrollTipPolicy.Both">
            <summary>
            Displays the text tip when the user moves either the horizontal or the vertical scroll box
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.TabStripPlacement">
            <summary>
            Specifies the location of the tab strip in the component.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.TabStripPlacement.WithHorizontalScrollBar">
            <summary>
            The tab strip is located next to the horizontal scroll bar.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.TabStripPlacement.Top">
            <summary>
            The tab strip is located across the top of the component. 
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.TabStripPlacement.Bottom">
            <summary>
            The tab strip is located across the bottom of the component.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.TabStripPolicy">
            <summary>
            Specifies when the component displays the sheet name tabs.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.TabStripPolicy.Always">
            <summary>
            Always displays the sheet tabs
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.TabStripPolicy.Never">
            <summary>
            Does not display the sheet tabs
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.TabStripPolicy.AsNeeded">
            <summary>
            Displays the sheet tabs only when needed
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.SplitBoxPolicy">
            <summary>
            Specifies when the component displays the split boxes.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SplitBoxPolicy.Always">
            <summary>
            Displays the split box all the time
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SplitBoxPolicy.Never">
            <summary>
            Does not display the split box
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SplitBoxPolicy.AsNeeded">
            <summary>
            Displays the split box only when needed
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.SplitBoxAlignment">
            <summary>
            Specifies the placement of split boxes in the component 
            with respect to their alignment with the scroll bars.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SplitBoxAlignment.Leading">
            <summary>
            Displays the split boxes before (to the left or above) the scroll bars.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SplitBoxAlignment.Trailing">
            <summary>
            Displays the split boxes after (to the right or below) the scroll bars.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.ClipboardPastingEventArgs">
            <summary>
            Represents the event data for the ClipboardPastingEvent event for the fpSpread component, 
            which occurs when the user invokes the clipboard paste action.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.ClipboardPastingEventArgs.#ctor">
            <summary>
            Creates a new ClipboardPastingEventArgs object.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.ClipboardPastingEventArgs.Handled">
            <summary>
            Gets or sets whether the paste was handled or the default paste action should be performed.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.ClipboardPastingEventHandler">
            <summary>
            Represents a defined method that handles the ClipboardPasting event for the fpSpread component.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.TopChangeEventArgs">
            <summary>
            Represents the event data for the TopChange event in the fpSpread component, 
            which occurs when the top row changes.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.TopChangeEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a new TopChangeEventArgs object.
            </summary>
            <param name="view">View that contains the row</param>
            <param name="oldTop">Index of the previous top row</param>
            <param name="newTop">Index of the new top row</param>
            <param name="rowViewportIndex">Index of the viewport row in which the change occurred</param>
        </member>
        <member name="P:FarPoint.Win.Spread.TopChangeEventArgs.OldTop">
            <summary>
            Gets the index of the previous top row.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.TopChangeEventArgs.NewTop">
            <summary>
            Gets the index of the new top row.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.TopChangeEventArgs.RowViewportIndex">
            <summary>
            Gets the index of the viewport row in which the change occurred.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.TopChangeEventHandler">
            <summary>
            Represents a defined method that handles the TopChange event for the fpSpread component.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.LeftChangeEventArgs">
            <summary>
            Represents the event data for the LeftChange event for the fpSpread component, 
            which occurs when the left column in the view changes.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.LeftChangeEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a LeftChangeEventArgs object.
            </summary>
            <param name="view">View in which the change occurred</param>
            <param name="oldLeft">Index of the previous left column</param>
            <param name="newLeft">Index of the new left column</param>
            <param name="columnViewportIndex">Index of the viewport column in which the change occurred</param>
        </member>
        <member name="P:FarPoint.Win.Spread.LeftChangeEventArgs.OldLeft">
            <summary>
            Gets the index of the previous left column.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.LeftChangeEventArgs.NewLeft">
            <summary>
            Gets the index of the new left column.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.LeftChangeEventArgs.ColumnViewportIndex">
            <summary>
            Gets the index of the viewport column in which the change occurred.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.LeftChangeEventHandler">
            <summary>
            Represents a defined method that handles the LeftChange event for the fpSpread component.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.DragDropBlockEventArgs">
            <summary>
            Represents the event data for the DragDropBlock event for the fpSpread component,
            which occurs when a range of cells is being dragged and dropped.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DragDropBlockEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.Boolean)">
            <summary>
            Creates a new DragDropBlockEventArgs object.
            </summary>
            <param name="view">View from which to make a selection</param>
            <param name="rowBegin">Row index of the top left cell of the source range</param>
            <param name="columnBegin">Column index of the top left cell of the source range</param>
            <param name="rowEnd">Row index of the bottom right cell of the source range</param>
            <param name="columnEnd">Column index of the bottom right cell of the source range</param>
            <param name="destRowBegin">Row index of the top left cell of the destination range</param>
            <param name="destColumnBegin">Column index of the top left cell of the destination range</param>
            <param name="destRowEnd">Row index of the bottom right cell of the destination range</param>
            <param name="destColumnEnd">Column index of the bottom right cell of the destination range</param>
            <param name="overwrite">Whether the destination range contains data</param>
            <param name="action">Whether the source range is copied or moved</param>
            <param name="dataOnly">Whether data or formatting (or both) is copied or moved</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DragDropBlockEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Creates a new DragDropBlockEventArgs object.
            </summary>
            <param name="view">View from which to make a selection</param>
            <param name="rowBegin">Row index of the top left cell of the source range</param>
            <param name="columnBegin">Column index of the top left cell of the source range</param>
            <param name="rowEnd">Row index of the bottom right cell of the source range</param>
            <param name="columnEnd">Column index of the bottom right cell of the source range</param>
            <param name="destRowBegin">Row index of the top left cell of the destination range</param>
            <param name="destColumnBegin">Column index of the top left cell of the destination range</param>
            <param name="destRowEnd">Row index of the bottom right cell of the destination range</param>
            <param name="destColumnEnd">Column index of the bottom right cell of the destination range</param>
            <param name="overwrite">Whether the destination range contains data</param>
            <param name="action">Whether the source range is copied or moved</param>
            <param name="dataOnly">Whether data or formatting (or both) is copied or moved</param>
            <param name="cancel">Whether the copying or moving of data is cancelled</param>
        </member>
        <member name="P:FarPoint.Win.Spread.DragDropBlockEventArgs.RowBegin">
            <summary>
            Gets the row index of the top left cell of the source range (being dragged).
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DragDropBlockEventArgs.RowEnd">
            <summary>
            Gets the row index of the bottom right cell of the source range (being dragged).
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DragDropBlockEventArgs.ColumnBegin">
            <summary>
            Gets the column index of the top left cell of the source range (being dragged).
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DragDropBlockEventArgs.ColumnEnd">
            <summary>
            Gets the column index of the bottom right cell of the source range (being dragged).
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DragDropBlockEventArgs.DestinationRowBegin">
            <summary>
            Gets the row index of the top left cell of the destination range (where selection is dropped).
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DragDropBlockEventArgs.DestinationRowEnd">
            <summary>
            Gets the row index of the bottom right cell of the destination range (where selection is dropped).
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DragDropBlockEventArgs.DestinationColumnBegin">
            <summary>
            Gets the column index of the top left cell of the destination range (where selection is dropped).
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DragDropBlockEventArgs.DestinationColumnEnd">
            <summary>
            Gets the column index of the bottom right cell of the destination range (where selection is dropped).
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DragDropBlockEventArgs.Overwrite">
            <summary>
            Gets whether the destination range contains data (that is overwritten).
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DragDropBlockEventArgs.Action">
            <summary>
            Gets or sets whether the source range is copied or moved.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DragDropBlockEventArgs.Cancel">
            <summary>
            Gets or sets whether the copying or moving of data is cancelled.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DragDropBlockEventArgs.DataOnly">
            <summary>
            Gets or sets whether data or formatting (or both) is copied or moved.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.DragDropBlockEventHandler">
            <summary>
            Represents a defined method that handles the DragDropBlock event for the fpSpread component.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.DragDropBlockCompletedEventArgs">
            <summary>
            Represents the event data for the DragDropBlockCompleted event for the fpSpread component,
            which occurs when the dragging and dropping of a range of cells is completed.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DragDropBlockCompletedEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.Boolean)">
            <summary>
            Creates a new DragDropBlockCompletedEventArgs object.
            </summary>
            <param name="view">View from which to make a selection</param>
            <param name="rowBegin">Row index of the top left cell of the source range</param>
            <param name="columnBegin">Column index of the top left cell of the source range</param>
            <param name="rowEnd">Row index of the bottom right cell of the source range</param>
            <param name="columnEnd">Column index of the bottom right cell of the source range</param>
            <param name="destRowBegin">Row index of the top left cell of the destination range</param>
            <param name="destColumnBegin">Column index of the top left cell of the destination range</param>
            <param name="destRowEnd">Row index of the bottom right cell of the destination range</param>
            <param name="destColumnEnd">Column index of the bottom right cell of the destination range</param>
            <param name="overwrite">Whether the destination range contains data</param>
            <param name="action">Whether the source range is copied or moved</param>
            <param name="dataOnly">Whether data or formatting (or both) is copied or moved</param>
        </member>
        <member name="P:FarPoint.Win.Spread.DragDropBlockCompletedEventArgs.RowBegin">
            <summary>
            Gets the row index of the top left cell of the source range (being dragged).
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DragDropBlockCompletedEventArgs.RowEnd">
            <summary>
            Gets the row index of the bottom right cell of the source range (being dragged).
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DragDropBlockCompletedEventArgs.ColumnBegin">
            <summary>
            Gets the column index of the top left cell of the source range (being dragged).
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DragDropBlockCompletedEventArgs.ColumnEnd">
            <summary>
            Gets the column index of the bottom right cell of the source range (being dragged).
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DragDropBlockCompletedEventArgs.DestinationRowBegin">
            <summary>
            Gets the row index of the top left cell of the destination range (where selection is dropped).
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DragDropBlockCompletedEventArgs.DestinationRowEnd">
            <summary>
            Gets the row index of the bottom right cell of the destination range (where selection is dropped).
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DragDropBlockCompletedEventArgs.DestinationColumnBegin">
            <summary>
            Gets the column index of the top left cell of the destination range (where selection is dropped).
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DragDropBlockCompletedEventArgs.DestinationColumnEnd">
            <summary>
            Gets the column index of the bottom right cell of the destination range (where selection is dropped).
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DragDropBlockCompletedEventArgs.Overwrite">
            <summary>
            Gets whether the destination range contains data (that is overwritten).
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DragDropBlockCompletedEventArgs.Action">
            <summary>
            Gets whether the source range is copied or moved.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DragDropBlockCompletedEventArgs.DataOnly">
            <summary>
            Gets whether data or formatting (or both) is copied or moved.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.DragDropBlockCompletedEventHandler">
            <summary>
            Represents a defined method that handles the drag-drop event for the fpSpread component.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.DragFillBlockCompletedEventArgs">
            <summary>
            Represents the event data for the DragFillBlockCompleted event for the fpSpread component,
            which occurs when the dragging and filling of a range of cells is completed.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DragFillBlockCompletedEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.FillDirection,System.Boolean)">
            <summary>
            Creates a new DragDropBlockCompletedEventArgs object.
            </summary>
            <param name="view">View from which to make a selection</param>
            <param name="rowBegin">Row index of the top left cell of the range being used for the fill</param>
            <param name="columnBegin">Column index of the top left cell of the range being used for the fill</param>
            <param name="rowEnd">Row index of the bottom right cell of the range being used for the fill</param>
            <param name="columnEnd">Column index of the bottom right cell of the range being used for the fill</param>
            <param name="numberToCopy">Number of rows or columns being filled</param>
            <param name="direction">Direction of the fill</param>
            <param name="dataOnly">Whether only data is used</param>
        </member>
        <member name="P:FarPoint.Win.Spread.DragFillBlockCompletedEventArgs.RowBegin">
            <summary>
            Gets the row index of the top left cell of the range being used for the fill.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DragFillBlockCompletedEventArgs.RowEnd">
            <summary>
            Gets the row index of the bottom right cell of the range being used for the fill.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DragFillBlockCompletedEventArgs.ColumnBegin">
            <summary>
            Gets the column index of the top left cell of the range being used for the fill.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DragFillBlockCompletedEventArgs.ColumnEnd">
            <summary>
            Gets the column index of the bottom right cell of the range being used for the fill.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DragFillBlockCompletedEventArgs.NumberToCopy">
            <summary>
            Gets the number of rows or columns being filled.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DragFillBlockCompletedEventArgs.Direction">
            <summary>
            Gets the direction of the fill.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DragFillBlockCompletedEventArgs.DataOnly">
            <summary>
            Gets whether only data is used.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.DragFillBlockCompletedEventHandler">
            <summary>
            Represents a defined method that handles the DragFillBlockCompleted event for the fpSpread component.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.DragFillBlockEventArgs">
            <summary>
            Represents the event data for the DragFillBlock event for the fpSpread component,
            which occurs when the range of cells is being dragged and filled.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DragFillBlockEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.FillDirection,System.Boolean)">
            <summary>
            Creates a new DragFillBlockEventArgs object.
            </summary>
            <param name="view">View from which to make a selection</param>
            <param name="rowBegin">Row index of the top left cell of the range being used for the fill</param>
            <param name="columnBegin">Column index of the top left cell of the range being used for the fill</param>
            <param name="rowEnd">Row index of the bottom right cell of the range being used for the fill</param>
            <param name="columnEnd">Column index of the bottom right cell of the range being used for the fill</param>
            <param name="numberToCopy">Number of rows or columns being filled</param>
            <param name="direction">Direction of the fill</param>
            <param name="dataOnly">Data only flag</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DragFillBlockEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.FillDirection,System.Boolean,System.Boolean)">
            <summary>
            Creates a new DragFillBlockEventArgs object.
            </summary>
            <param name="view">View from which to make a selection</param>
            <param name="rowBegin">Row index of the top left cell of the range being used for the fill</param>
            <param name="columnBegin">Column index of the top left cell of the range being used for the fill</param>
            <param name="rowEnd">Row index of the bottom right cell of the block range used for the fill</param>
            <param name="columnEnd">Column index of the bottom right cell of the range being used for the fill</param>
            <param name="numberToCopy">Number of rows or columns being filled</param>
            <param name="direction">Direction of the fill</param>
            <param name="dataOnly">Data only flag</param>
            <param name="cancel">Whether to cancel the fill</param>
        </member>
        <member name="P:FarPoint.Win.Spread.DragFillBlockEventArgs.RowBegin">
            <summary>
            Gets the row index of the top left cell of the range being used for the fill.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DragFillBlockEventArgs.RowEnd">
            <summary>
            Gets the row index of the bottom right cell of the range being used for the fill.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DragFillBlockEventArgs.ColumnBegin">
            <summary>
            Gets the column index of the top left cell of the range being used for the fill.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DragFillBlockEventArgs.ColumnEnd">
            <summary>
            Gets the column index of the bottom right cell of the range being used for the fill.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DragFillBlockEventArgs.NumberToCopy">
            <summary>
            Gets the number of rows or columns being filled.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DragFillBlockEventArgs.Direction">
            <summary>
            Gets the direction of the fill.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DragFillBlockEventArgs.DataOnly">
            <summary>
            Gets the data only flag.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DragFillBlockEventArgs.Cancel">
            <summary>
            Gets or sets whether to cancel the fill.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.DragFillBlockEventHandler">
            <summary>
            Represents a defined method that handles the DragFillBlock event for the fpSpread component.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.DragMoveEventArgs">
            <summary>
            Represents the event data for the ColumnDragMove and RowDragMove events for the fpSpread component.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DragMoveEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Creates a new DragMoveEventArgs object.
            </summary>
            <param name="view">SpreadView view</param>
            <param name="index">Column or row index of the drag</param>
            <param name="moveContent">Whether to move content in models without re-mapping the indexes</param>
            <param name="cancel">Whether to cancel the drag opertation</param>
        </member>
        <member name="P:FarPoint.Win.Spread.DragMoveEventArgs.View">
            <summary>
            Gets the view in which the columns or row are being dragged.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DragMoveEventArgs.Index">
            <summary>
            Gets the column or row index of the drag.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DragMoveEventArgs.MoveContent">
            <summary>
            Gets or sets whether the move operation moves the contents
            of the rows or columns (and rows or columns in between) 
            without changing the index mapping.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DragMoveEventArgs.Cancel">
            <summary>
            Gets or sets whether to cancel the drag operation.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.DragMoveEventHandler">
            <summary>
            Represents a defined method that handles the ColumnDragMove or RowDragMove event 
            for the fpSpread component.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.DragMoveCompletedEventArgs">
            <summary>
            Represents the event data for the ColumnDragMoveCompleted and RowDragMoveCompleted event 
            for the fpSpread component.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DragMoveCompletedEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.Int32,System.Int32)">
            <summary>
            Creates a new DragMoveCompletedEventArgs object.
            </summary>
            <param name="view">SpreadView view</param>
            <param name="fromIndex">Column or row index of starting place of the drag</param>
            <param name="toIndex">Column or row index of the destination of the drag</param>
        </member>
        <member name="P:FarPoint.Win.Spread.DragMoveCompletedEventArgs.View">
            <summary>
            Gets the view in which the columns or row have been dragged.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DragMoveCompletedEventArgs.FromIndex">
            <summary>
            Gets the column or row index of the starting place of the drag.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DragMoveCompletedEventArgs.ToIndex">
            <summary>
            Gets the column or row index of the destination of the drag
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.DragMoveCompletedEventHandler">
            <summary>
            Represents a defined method that handles the ColumnDragMoveCompleted or RowDragMoveCompleted event 
            for the fpSpread component.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.AdvanceEventArgs">
            <summary>
            Represents the event data for the Advance event for the fpSpread component,
            which occurs when focus is advanced to another control.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.AdvanceEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.Boolean)">
            <summary>
            Creates an AdvanceEventArgs object.
            </summary>
            <param name="view">View of the current control from which to advance</param>
            <param name="advanceNext">Whether to move to the next control</param>
        </member>
        <member name="P:FarPoint.Win.Spread.AdvanceEventArgs.AdvanceNext">
            <summary>
            Gets whether to move to the next component.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.AdvanceEventArgs.Cancel">
            <summary>
            Gets or sets whether to cancel default processing.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.AdvanceEventHandler">
            <summary>
            Represents a defined method that handles the Advance event for the fpSpread component.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.ChildViewCreatedEventArgs">
            <summary>
            Represents the event data for a ChildViewCreated event for the fpSpread component,
            which occurs when a child sheet is created in a hierarchical spreadsheet. 
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.ChildViewCreatedEventArgs.#ctor(FarPoint.Win.Spread.SheetView)">
            <summary>
            Creates a new ChildViewCreatedEventArgs object.
            </summary>
            <param name="sheet">Child sheet (Sheetview object) being created</param>
        </member>
        <member name="P:FarPoint.Win.Spread.ChildViewCreatedEventArgs.SheetView">
            <summary>
            Gets the child SheetView object being created.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.ChildViewCreatedEventHandler">
            <summary>
            Represents a defined method that handles the ChildViewCreated event for the fpSpread component.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.TextTipFetchEventArgs">
            <summary>
            Represents the event data for the TextTipFetch event for the fpSpread component, 
            which occurs when the text tip is being fetched.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.TextTipFetchEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.String,System.Int32,System.Int32,System.Boolean,System.Int32,System.Boolean)">
            <summary>
            Creates an object with the TextTipFetch event arguments.
            </summary>
            <param name="view">View that contains the cell that is clicked</param>
            <param name="text">Text in the text tip</param>
            <param name="row">Row index of the cell that is clicked</param>
            <param name="column">Column index of the cell that is clicked</param>
            <param name="wrapText">Whether the text tip or cell note should wrap for multiple lines</param>
            <param name="width">Width of the text tip or cell note</param>
            <param name="showTip">Whether to show the text tip or cell note</param>
        </member>
        <member name="M:FarPoint.Win.Spread.TextTipFetchEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.String,System.Int32,System.Int32,System.Boolean,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Creates an object with the TextTipFetch event arguments.
            </summary>
            <param name="view">View that contains the cell that is clicked</param>
            <param name="text">Text in the text tip</param>
            <param name="row">Row index of the cell that is clicked</param>
            <param name="column">Column index of the cell that is clicked</param>
            <param name="wrapText">Whether the text tip or cell note should wrap for multiple lines</param>
            <param name="width">Width of the text tip or cell note</param>
            <param name="showTip">Whether to show the text tip or cell note</param>
            <param name="rowHeader">Whether the cell is in the row headers</param>
            <param name="columnHeader">Whether the cell is in the column headers</param>
            <param name="fetchCellNote">Whether to display the cell note</param>
        </member>
        <member name="P:FarPoint.Win.Spread.TextTipFetchEventArgs.View">
            <summary>
            Gets the view that contains the cell that is clicked.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.TextTipFetchEventArgs.Row">
            <summary>
            Gets the row index of the cell that is clicked.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.TextTipFetchEventArgs.Column">
            <summary>
            Gets the column index of the cell that is clicked.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.TextTipFetchEventArgs.TipText">
            <summary>
            Gets or sets the text in the text tip.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.TextTipFetchEventArgs.TipWidth">
            <summary>
            Gets or sets the width of the text tip or cell note.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.TextTipFetchEventArgs.WrapText">
            <summary>
            Gets or sets whether the text tip or cell note should wrap for multiple lines.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.TextTipFetchEventArgs.ShowTip">
            <summary>
            Gets or sets whether to show the text tip or cell note.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.TextTipFetchEventArgs.RowHeader">
            <summary>
            Gets whether the cell is in the row headers.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.TextTipFetchEventArgs.ColumnHeader">
            <summary>
            Gets whether the cell is in the column headers.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.TextTipFetchEventArgs.FetchCellNote">
            <summary>
            Gets whether to fetch the cell note.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.TextTipFetchEventHandler">
            <summary>
            Represents a defined method that handles the TextTipFetch event for the fpSpread component.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.ZoomEventArgs">
            <summary>
            Represents the event data for the UserZooming event for the fpSpread component, 
            which occurs when the user zooms.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.ZoomEventArgs.#ctor(System.Single,System.Single)">
            <summary>
            Creates a new ZoomEventArgs object.
            </summary>
            <param name="oldZoomFactor">Old zoom factor</param>
            <param name="newZoomFactor">New zoom factor</param>
        </member>
        <member name="P:FarPoint.Win.Spread.ZoomEventArgs.OldZoomFactor">
            <summary>
            Gets the old zoom factor of the spread.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.ZoomEventArgs.NewZoomFactor">
            <summary>
            Gets or sets the new zoom factor of the spread.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.UserZoomingEventHandler">
            <summary>
            Represents a defined method that handles the UserZooming event for the fpSpread component.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.ScrollTipFetchEventArgs">
            <summary>
            Represents the event data for the ScrollTipFetch event for the fpSpread component, 
            which occurs when the spread is scrolled.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.ScrollTipFetchEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Creates an object with the ScrollTipFetch event arguments.
            </summary>
            <param name="view">View that is scrolled</param>
            <param name="text">Text in the scroll tip</param>
            <param name="row">New top row</param>
            <param name="column">New left column</param>
            <param name="showTip">Whether to show the scroll tip</param>
        </member>
        <member name="P:FarPoint.Win.Spread.ScrollTipFetchEventArgs.View">
            <summary>
            Gets the view that is scrolled.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.ScrollTipFetchEventArgs.Row">
            <summary>
            Gets the new top row index. If user changes horizontal scrollbar, this value is -1.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.ScrollTipFetchEventArgs.Column">
            <summary>
            Gets the new left column index. If user changes vertical scrollbar, this value is -1.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.ScrollTipFetchEventArgs.TipText">
            <summary>
            Gets or sets the text in the scroll tip.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.ScrollTipFetchEventArgs.ShowTip">
            <summary>
            Gets or sets whether to show the scroll tip.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.ScrollTipFetchEventHandler">
            <summary>
            Represents a defined method that handles the ScrollTipFetch event for the fpSpread component.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.CellClickEventArgs">
            <summary>
            Represents the event data for the CellClick and CellDoubleClick events for the fpSpread component, 
            which occurs when the user clicks or double-clicks the mouse button with the pointer on a cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellClickEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.MouseButtons,System.Boolean,System.Boolean)">
            <summary>
            Creates an object with the CellClick event arguments.
            </summary>
            <param name="view">View (Spreadview object) that contains the cell clicked</param>
            <param name="row">Row index of cell clicked</param>
            <param name="column">Column index of cell clicked</param>
            <param name="x">X-coordinate of the pointer position</param>
            <param name="y">Y-coordinate of the pointer position</param>
            <param name="button">Which mouse button was pressed</param>
            <param name="columnHeader">Whether cell clicked is in column header</param>
            <param name="rowHeader">Whether cell clicked is in row header</param>
        </member>
        <member name="P:FarPoint.Win.Spread.CellClickEventArgs.View">
            <summary>
            Gets the view that contains the cell that is clicked.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellClickEventArgs.Row">
            <summary>
            Gets the row index of the cell that is clicked.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellClickEventArgs.Column">
            <summary>
            Gets the column index of the cell that is clicked.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellClickEventArgs.ColumnHeader">
            <summary>
            Gets whether the cell that is clicked is in the column headers.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellClickEventArgs.RowHeader">
            <summary>
            Gets whether the cell that is clicked is in the row headers.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellClickEventArgs.X">
            <summary>
            Gets the x-coordinate of the pointer position.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellClickEventArgs.Y">
            <summary>
            Gets the y-coordinate of the pointer position.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellClickEventArgs.Button">
            <summary>
            Gets which mouse button has been pressed.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.CellClickEventArgs.Cancel">
            <summary>
            Gets or sets whether to cancel default processing.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.CellClickEventHandler">
            <summary>
            Represents a defined method that handles the CellClick and CellDoubleClick events for the fpSpread component.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.ActiveSheetChangingEventArgs">
            <summary>
            Represents the event data for the ActiveSheetChanging event for the component, 
            which occurs when the component changes to another active sheet.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.ActiveSheetChangingEventArgs.#ctor(System.Int32)">
            <summary>
            Creates a new ActiveSheetChangingEventArgs object.
            </summary>
            <param name="newActiveSheetIndex">Sheet index for the new active sheet</param>
        </member>
        <member name="P:FarPoint.Win.Spread.ActiveSheetChangingEventArgs.ActivatedSheetIndex">
            <summary>
            Gets or sets the index of the new active sheet.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.ActiveSheetChangingEventArgs.Cancel">
            <summary>
            Gets or sets whether to cancel the active sheet change.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.ActiveSheetChangingEventHandler">
            <summary>
            Represents a defined method that handles the ActiveSheetChanging event for the fpSpread component.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.SheetTabClickEventArgs">
            <summary>
            Represents the event data for the SheetTabClick event for the fpSpread component, 
            which occurs when the user clicks the mouse button with the pointer on the sheet name tab.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetTabClickEventArgs.#ctor(System.Int32)">
            <summary>
            Creates a SheetTabClickedEventArgs object.
            </summary>
            <param name="sheetTabIndex">Index of the sheet tab that was clicked </param>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetTabClickEventArgs.SheetTabIndex">
            <summary>
            Gets the index of the sheet tab that is clicked.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.SheetTabDoubleClickEventArgs">
            <summary>
            Represents the event data for the SheetTabDoubleClick event for the fpSpread component,
            which occurs when the user double-clicks on a sheet name tab.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetTabDoubleClickEventArgs.#ctor(System.Int32)">
            <summary>
            Creates a new SheetTabDoubleClickEventArgs object.
            </summary>
            <param name="sheetTabIndex">Index of the sheet tab that was clicked</param>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetTabDoubleClickEventArgs.SheetTabIndex">
            <summary>
            Gets the index of the sheet tab that is clicked.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetTabDoubleClickEventArgs.Cancel">
            <summary>
            Gets or sets whether to cancel the default action (in-place editing).
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.SheetTabClickEventHandler">
            <summary>
            Represents a defined method that handles the SheetTabClick event for the fpSpread component.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.SheetTabDoubleClickEventHandler">
            <summary>
            Represents a defined method that handles the SheetTabDoubleClick event for the fpSpread component.
            which occurs when the user double-clicks the mouse button with the pointer on the sheet name tab.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.RowHeightChangeExtents">
            <summary>
            Represents an object that contains first and last rows in contiguous selection whose heights are changing.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.RowHeightChangeExtents.#ctor(System.Int32,System.Int32)">
            <summary>
            Creates a new RowHeightChangeExtents object.
            </summary>
            <param name="firstRow">First row of the contiguous selection</param>
            <param name="lastRow">Last row of the contiguous selection</param>
        </member>
        <member name="P:FarPoint.Win.Spread.RowHeightChangeExtents.FirstRow">
            <summary>
            Gets the index of the first row in the contiguous selection.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.RowHeightChangeExtents.LastRow">
            <summary>
            Gets the index of the last row in the contiguous selection.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.RowHeightChangedEventArgs">
            <summary>
            Represents the event data for the RowHeightChanged event for the fpSpread component, 
            which occurs when the height of a row is changed.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.RowHeightChangedEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.Collections.ArrayList)">
            <summary>
            Creates a new RowHeightChangedEventArgs object.
            </summary>
            <param name="view">View that contains the rows whose heights have changed </param>
            <param name="rowList">Array list of the rows whose heights have changed </param>
        </member>
        <member name="P:FarPoint.Win.Spread.RowHeightChangedEventArgs.View">
            <summary>
            Gets the view that contains the rows whose heights have changed.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.RowHeightChangedEventArgs.RowList">
            <summary>
            Gets the list of rows whose heights have changed.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.RowHeightChangedEventHandler">
            <summary>
            Represents a defined method that handles the RowHeightChanged event for the fpSpread component.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.ColumnWidthChangeExtents">
            <summary>
            Represents an object that contains first and last columns in a contiguous selection whose widths are changing.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.ColumnWidthChangeExtents.#ctor(System.Int32,System.Int32)">
            <summary>
            Creates a new ColumnWidthChangeExtents object.
            </summary>
            <param name="firstColumn">First column of the contiguous selection </param>
            <param name="lastColumn">Last column of the contiguous selection </param>
        </member>
        <member name="P:FarPoint.Win.Spread.ColumnWidthChangeExtents.FirstColumn">
            <summary>
            Gets the index of the first column in the contiguous selection.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.ColumnWidthChangeExtents.LastColumn">
            <summary>
            Gets the index of the last column in the contiguous selection.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.ColumnWidthChangedEventArgs">
            <summary>
            Represents the event data for the ColumnWidthChanged event for the fpSpread component, 
            which occures when the width of a column has changed.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.ColumnWidthChangedEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.Collections.ArrayList)">
            <summary>
            Creates a new ColumnWidthChangedEventArgs object.
            </summary>
            <param name="view">View (Spreadview object) that contains the columns that have changed</param>
            <param name="columnList">Array list of the columns whose widths have changed</param>
        </member>
        <member name="P:FarPoint.Win.Spread.ColumnWidthChangedEventArgs.View">
            <summary>
            Gets the view that contains the columns whose widths have changed.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.ColumnWidthChangedEventArgs.ColumnList">
            <summary>
            Gets the list of columns whose widths have changed.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.ColumnWidthChangedEventHandler">
            <summary>
            Represents a defined method that handles the ColumnWidthChanged event for the fpSpread component.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.RowViewportHeightChangedEventArgs">
            <summary>
            Represents the event data for the RowViewportHeightChanged event for the fpSpread component, 
            which occurs when the height of a viewport row has changed.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.RowViewportHeightChangedEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.Int32,System.Int32)">
            <summary>
            Creates a new RowViewportHeightChangedEventArgs object.
            </summary>
            <param name="view">View that contains the viewport whose height has changed</param>
            <param name="viewportIndex">Index of the viewport row whose height has changed</param>
            <param name="viewportHeight">Height of the viewport row whose height has changed</param>
        </member>
        <member name="P:FarPoint.Win.Spread.RowViewportHeightChangedEventArgs.View">
            <summary>
            Gets the view that contains the viewport row whose height has changed.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.RowViewportHeightChangedEventArgs.ViewportIndex">
            <summary>
            Gets the index of the viewport row whose height has changed.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.RowViewportHeightChangedEventArgs.ViewportHeight">
            <summary>
            Gets the height of the viewport row whose height has changed.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.RowViewportHeightChangedEventHandler">
            <summary>
            Represents a defined method that handles the RowViewportHeightChanged event for the fpSpread component.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.ColumnViewportWidthChangedEventArgs">
            <summary>
            Represents the event data for the ColumnViewportWidthChanged event for the fpSpread component,
            which occurs when the width of a viewport column has changed.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.ColumnViewportWidthChangedEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.Int32,System.Int32)">
            <summary>
            Creates a new ColumnViewportWidthChangedEventArgs object.
            </summary>
            <param name="view">Spreadview object</param>
            <param name="viewportIndex">Index of the viewport column that has changed</param>
            <param name="viewportWidth">Width of the viewport column that has changed</param>
        </member>
        <member name="P:FarPoint.Win.Spread.ColumnViewportWidthChangedEventArgs.View">
            <summary>
            Gets the view that contains the viewport column whose width has changed.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.ColumnViewportWidthChangedEventArgs.ViewportIndex">
            <summary>
            Gets the index of the viewport column whose width has changed.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.ColumnViewportWidthChangedEventArgs.ViewportWidth">
            <summary>
            Gets the width of the viewport column whose width has changed.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.ColumnViewportWidthChangedEventHandler">
            <summary>
            Represents a defined method that handles the ColumnViewportWidthChanged event for the fpSpread component.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.SelectionChangedEventArgs">
            <summary>
            Represents the event data for the SelectionChanged event for the fpSpread component, 
            which occurs when the user has changed selecting another range of cells.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SelectionChangedEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,FarPoint.Win.Spread.Model.CellRange)">
            <summary>
            Creates a new SelectionChangedEventArgs object.
            </summary>
            <param name="view">View that contains the selection </param>
            <param name="cellRange">Range of cells encompassing the selection </param>
        </member>
        <member name="P:FarPoint.Win.Spread.SelectionChangedEventArgs.View">
            <summary>
            Gets the view that contain the selection.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SelectionChangedEventArgs.Range">
            <summary>
            Gets the range of cells encompassing the selection.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.SelectionChangedEventHandler">
            <summary>
            Represents a defined method that handles the SelectionChanged events for the fpSpread component.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.SelectionChangingEventArgs">
            <summary>
            Represents the event data for the SelectionChanging event for the fpSpread component, 
            which occurs when the user is selecting another range of cells.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SelectionChangingEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,FarPoint.Win.Spread.Model.CellRange,System.Int32,System.Int32)">
            <summary>
            Creates a new SelectionChangedEventArgs object.
            </summary>
            <param name="view">View that contains the selection</param>
            <param name="cellRange">Range of cells encompassing the selection</param>
            <param name="currentRow">Row index of the cell that contains the pointer</param>
            <param name="currentColumn">Column index of the cell that contains the pointer</param>
        </member>
        <member name="P:FarPoint.Win.Spread.SelectionChangingEventArgs.View">
            <summary>
            Gets the view that contains the selection.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SelectionChangingEventArgs.Range">
            <summary>
            Gets the range of cells encompassing the selection.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SelectionChangingEventArgs.CurrentRow">
            <summary>
            Gets the row index of the cell that contains the mouse pointer.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SelectionChangingEventArgs.CurrentColumn">
            <summary>
            Gets the column index of the cell that contains the mouse pointer.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SelectionChangingEventArgs.Cancel">
            <summary>
            Gets or sets whether the selection action should be cancelled.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.SelectionChangingEventHandler">
            <summary>
            Represents a defined method that handles the SelectionChanging events for the fpSpread component.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.EditorNotifyEventArgs">
            <summary>
            Represents the event data for the EditorNotify event for the component, 
            which occurs when the editor notifies the component of one of several changes. 
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.EditorNotifyEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.Windows.Forms.Control,System.Int32,System.Int32)">
            <summary>
            Creates a new EditorNotifyEventArgs object.
            </summary>
            <param name="view">View that contains the cell with the editor that raised the event </param>
            <param name="editingControl">Control that raised the event </param>
            <param name="row">Row index of the cell with the editor that raised the event </param>
            <param name="column">Column index of the cell with the editor that raised the event </param>
        </member>
        <member name="P:FarPoint.Win.Spread.EditorNotifyEventArgs.View">
            <summary>
            Gets the view that contains the cell with the editor that raised the event.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.EditorNotifyEventArgs.EditingControl">
            <summary>
            Gets the Control object that raises the event.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.EditorNotifyEventArgs.Row">
            <summary>
            Gets the row index of the cell with the editor that raised the event.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.EditorNotifyEventArgs.Column">
            <summary>
            Gets the column index of the cell with the editor that raised the event.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.EditorNotifyEventHandler">
            <summary>
            Represents a defined method that handles the ButtonClicked, ComboCloseUp, 
            ComboDropDown, ComboSelChange, and EditChange events for the fpSpread component.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.SubEditorClosedEventArgs">
            <summary>
            Represents the event data for the SubEditorClosed event for the fpSpread component, 
            which occurs when the subeditor in a cell has closed. 
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SubEditorClosedEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.Windows.Forms.Control,System.Windows.Forms.Control,System.Int32,System.Int32)">
            <summary>
            Creates a new SubEditorClosedEventArgs object.
            </summary>
            <param name="view">View that contains the cell with the editor that raised the event </param>
            <param name="editingControl">Parent of control that raised the event </param>
            <param name="subEditor">Control that raised the event</param>
            <param name="row">Row index of the cell with the editor that raised the event </param>
            <param name="column">Column index of the cell with the editor that raised the event </param>
        </member>
        <member name="P:FarPoint.Win.Spread.SubEditorClosedEventArgs.View">
            <summary>
            Gets the view that contains the cell with the editor that raised the event.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SubEditorClosedEventArgs.EditingControl">
            <summary>
            Gets the parent of the control that raised the event.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SubEditorClosedEventArgs.SubEditor">
            <summary>
            Gets the Control object that raises the event.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SubEditorClosedEventArgs.Row">
            <summary>
            Gets the row index of the cell with the editor that raised the event.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SubEditorClosedEventArgs.Column">
            <summary>
            Gets the column index of the cell with the editor that raised the event.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.SubEditorClosedEventHandler">
            <summary>
            Represents a defined method that handles the SubEditorClosed event for the fpSpread component.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.SubEditorOpeningEventArgs">
            <summary>
            Represents the event data for the SubEditorOpening event in the fpSpread component, 
            which occurs when the subeditor in a cell is opening.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SubEditorOpeningEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.Windows.Forms.Control,System.Windows.Forms.Control,System.Int32,System.Int32)">
            <summary>
            Creates a new SubEditorOpeningEventArgs object.
            </summary>
            <param name="view">View that contains the cell with the editor that raised the event </param>
            <param name="editingControl">Parent of control that raised the event </param>
            <param name="subEditor">Control that raised the event</param>
            <param name="row">Row index of the cell with the editor that raised the event </param>
            <param name="column">Column index of the cell with the editor that raised the event </param>
        </member>
        <member name="P:FarPoint.Win.Spread.SubEditorOpeningEventArgs.View">
            <summary>
            Gets the view that contains the cell with the editor that raised the event.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SubEditorOpeningEventArgs.EditingControl">
            <summary>
            Gets the parent of the control that raised the event.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SubEditorOpeningEventArgs.SubEditor">
            <summary>
            Gets the Control object that raises the event.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SubEditorOpeningEventArgs.Row">
            <summary>
            Gets the row index of the cell with the editor that raised the event.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SubEditorOpeningEventArgs.Column">
            <summary>
            Gets the column index of the cell with the editor that raised the event.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SubEditorOpeningEventArgs.Cancel">
            <summary>
            Gets or sets whether to cancel the default processing of opening a subeditor.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.SubEditorOpeningEventHandler">
            <summary>
            Represents a defined method that handles the SubEditorOpening event for the fpSpread component.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.ChildWorkbookCreatedEventArgs">
            <summary>
            Represents the event data for a ChildWorkbookCreated event for the fpSpread component,
            which occurs when a child sheet is created in a hierarchical spreadsheet. 
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.ChildWorkbookCreatedEventArgs.#ctor(FarPoint.Win.Spread.SpreadView)">
            <summary>
            Creates a new ChildWorkbookCreatedEventArgs object.
            </summary>
            <param name="spreadView">Child workbook (Spreadview object) being created</param>
        </member>
        <member name="P:FarPoint.Win.Spread.ChildWorkbookCreatedEventArgs.Workbook">
            <summary>
            Gets the child SpreadView object being created.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.ChildWorkbookCreatedEventHandler">
            <summary>
            Represents a defined method that handles the ChildWorkbookCreated event for the fpSpread component.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.EditError">
            <summary>
            Specifies the possible editor messages based on user action.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.EditError.CellIsLocked">
            <summary>
            [1] Indicates the user attempted to interact with a locked cell.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.EditError.ColumnRestricted">
            <summary>
            Indicates the user attempted to move the focus to a restricted column.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.EditError.RowRestricted">
            <summary>
            Indicates the user attempted to move the focus to a restricted row.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.EditError.ColumnAndRowRestricted">
            <summary>
            Indicates the user attempted to move the focus to a cell 
            that is located in both a restricted row and column.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.EditError.InvalidCellData">
            <summary>
            Indicates the user typed invalid data into a cell 
            (sent when the user left the cell).
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.EditError.TypedInCheckbox">
            <summary>
            Indicates the user attempted to type in a check box cell.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.EditError.InvalidCellFormula">
            <summary>
            Indicates the user typed an invalid formula into a cell 
            (sent when the user left the cell).
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.EditError.InvalidHyperlink">
            <summary>
            Indicates the user clicked a link that is invalid.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.EditErrorEventArgs">
            <summary>
            Represents the event data for the EditError event for the fpSpread component, 
            which occurs when errors are generated when using the editor.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.EditErrorEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,FarPoint.Win.Spread.EditError,System.Int32,System.Int32)">
            <summary>
            Creates a new EditorNotifyEventArgs object.
            </summary>
            <param name="view">View that contains the cell with the editor that raised the event</param>
            <param name="editError">Type of edit error</param>
            <param name="row">Row index of the cell with the editor that raised the event</param>
            <param name="column">Column index of the cell with the editor that raised the event</param>
        </member>
        <member name="P:FarPoint.Win.Spread.EditErrorEventArgs.View">
            <summary>
            Gets the view that contains the cell with the editor that raised the event.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.EditErrorEventArgs.EditError">
            <summary>
            Gets the type of edit error.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.EditErrorEventArgs.Row">
            <summary>
            Gets the row index of the cell with the editor that raised the event.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.EditErrorEventArgs.Column">
            <summary>
            Gets the column index of the cell with the editor that raised the event.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.EditErrorEventHandler">
            <summary>
            Represents a defined method that handles the EditError events for the fpSpread component.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.ExpandEventArgs">
            <summary>
            Represents the event data for the Expand event for the fpSpread component, 
            which occurs when the hierarchy display is being expanded (showing child sheet views).
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.ExpandEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.Boolean,System.Int32)">
            <summary>
            Creates a ExpandEventArgs object. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.ExpandEventArgs.View">
            <summary>
            Gets the view that contains the row to expand or collapse.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.ExpandEventArgs.Expand">
            <summary>
            Gets whether the row is expanded.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.ExpandEventArgs.Row">
            <summary>
            Gets the row to expand or collapse.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.ExpandEventHandler">
            <summary>
            Represents a defined method that handles the Expand event for the fpSpread component.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.LeaveCellEventArgs">
            <summary>
            Represents the event data for the LeaveCell event for the fpSpread component, 
            which occurs when the focus leaves a cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.LeaveCellEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a new LeaveCellEventArgs object.
            </summary>
            <param name="view">View with the cell being left</param>
            <param name="row">Row index of the cell being left</param>
            <param name="column">Column index of the cell being left</param>
            <param name="newRow">Row index of the cell being entered</param>
            <param name="newColumn">Column index of the cell being entered</param>
        </member>
        <member name="P:FarPoint.Win.Spread.LeaveCellEventArgs.Column">
            <summary>
            Gets the column index of the cell being left.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.LeaveCellEventArgs.Row">
            <summary>
            Gets the row index index of the cell being left.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.LeaveCellEventArgs.NewColumn">
            <summary>
            Gets the column index of the cell being entered.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.LeaveCellEventArgs.NewRow">
            <summary>
            Gets the row index of the cell being entered.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.LeaveCellEventArgs.Cancel">
            <summary>
            Gets or sets whether to cancel the cell navigation.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.LeaveCellEventHandler">
            <summary>
            Represents a defined method that handles the LeaveCell event for the fpSpread component.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.EnterCellEventArgs">
            <summary>
            Represents the event data for the EnterCell event for the fpSpread component,
            which occurs when the focus enters a cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.EnterCellEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.Int32,System.Int32)">
            <summary>
            Creates an EnterCellEventArgs object.
            </summary>
            <param name="view">View that contains the cell being entered</param>
            <param name="row">Row index of the cell being entered</param>
            <param name="column">Column index of the cell being entered</param>
        </member>
        <member name="P:FarPoint.Win.Spread.EnterCellEventArgs.View">
            <summary>
            Gets the view that contains the cell being entered.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.EnterCellEventArgs.Column">
            <summary>
            Gets the column index of the cell being entered.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.EnterCellEventArgs.Row">
            <summary>
            Gets the row index of the cell being entered.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.EnterCellEventHandler">
            <summary>
            Represents a defined method that handles the EnterCell event for the fpSpread component.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.PrintPreviewShowingEventArgs">
            <summary>
            Represents the event data for the PrintPreviewShowing event for the fpSpread component,
            which occurs before the print preview dialog appears.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.PrintPreviewShowingEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.Windows.Forms.PrintPreviewDialog,System.Windows.Forms.PrintPreviewControl)">
            <summary>
            Creates a new PrintPreviewShowingEventArgs object.
            </summary>
            <param name="view">View that contains the sheet being printed</param>
            <param name="ppd">Print preview dialog</param>
            <param name="ppc">Print preview dialog control</param>
        </member>
        <member name="P:FarPoint.Win.Spread.PrintPreviewShowingEventArgs.PreviewDialog">
            <summary>
            Gets the print preview dialog to be displayed.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.PrintPreviewShowingEventArgs.PreviewControl">
            <summary>
            Gets the control associated with the print preview dialog.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.PrintPreviewShowingEventArgs.Cancel">
            <summary>
            Gets or sets whether to cancel the print preview.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.PrintPreviewShowingEventHandler">
            <summary>
            Represents a defined method that handles the PrintPreviewShowing event for the fpSpread component.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.PrintMessageBoxEventArgs">
            <summary>
            Represents the event data for the PrintMessageBox event for the fpSpread component,
            which occurs when the print message box is to be displayed.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.PrintMessageBoxEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.String,System.Int32,System.Boolean)">
            <summary>
            Creates a new PrintMessageBoxEventArgs object.
            </summary>
            <param name="view">View that contains the sheet being printed</param>
            <param name="abortMessage">Value of the PrintInfo.AbortMessage property for this sheet</param>
            <param name="id">Print job identifier</param>
            <param name="beginPrinting">Whether the print job is beginning</param>
        </member>
        <member name="P:FarPoint.Win.Spread.PrintMessageBoxEventArgs.AbortMessage">
            <summary>
            Gets the message displayed if the print job is canceled.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.PrintMessageBoxEventArgs.Id">
            <summary>
            Gets the print job identifier.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.PrintMessageBoxEventArgs.BeginPrinting">
            <summary>
            Gets whether the print job is beginning or ending.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.PrintMessageBoxEventArgs.Cancel">
            <summary>
            Gets or sets whether to cancel the default abort message box.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.PrintMessageBoxEventHandler">
            <summary>
            Represents a defined method that handles the PrintMessageBox event for the fpSpread component.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.PrintAbortEventArgs">
            <summary>
            Represents the event data for the PrintAbort event for the fpSpread component, 
            which allows the user to discontinue the printing at any time during a print job.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.PrintAbortEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.Boolean)">
            <summary>
            Creates a new PrintAbortEventArgs object.
            </summary>
            <param name="view">View that contains the sheet being printed </param>
            <param name="abort">Whether to discontinue the print job </param>
        </member>
        <member name="P:FarPoint.Win.Spread.PrintAbortEventArgs.Abort">
            <summary>
            Gets or sets whether to discontinue the print job.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.PrintAbortEventHandler">
            <summary>
            Represents a defined method that handles the PrintAbort event for the fpSpread component.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.PrintBackgroundEventArgs">
            <summary>
            Represents the event data for the PrintBackground event for the fpSpread component, 
            which occurs when the background is printing.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.PrintBackgroundEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32)">
            <summary>
            Creates a new PrintBackgroundEventArgs object.
            </summary>
            <param name="view">View that contains the sheet being printed</param>
            <param name="g">Graphics object used for printing</param>
            <param name="sheetRectangle">Rectangle area representing the area of the sheet to be printed</param>
            <param name="pageNum">Number of the current page being printed</param>
        </member>
        <member name="P:FarPoint.Win.Spread.PrintBackgroundEventArgs.Graphics">
            <summary>
            Gets or sets the graphics device that does the printing.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.PrintBackgroundEventArgs.SheetRectangle">
            <summary>
            Gets or sets the rectangle area representing the sheet.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.PrintBackgroundEventArgs.PageNumber">
            <summary>
            Gets or sets the current page being printed.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.PrintBackgroundEventHandler">
            <summary>
            Represents a defined method that handles the PrintBackground event for the fpSpread component.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.PrintCancelledEventArgs">
            <summary>
            Represents the event data for the PrintCancelled event for the fpSpread component, 
            which occurs when the printing is discontinued by the user.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.PrintCancelledEventArgs.#ctor(FarPoint.Win.Spread.SpreadView)">
            <summary>
            Creates a new PrintCancelledEventArgs object.
            </summary>
            <param name="view">View that contains the sheet being printed </param>
        </member>
        <member name="T:FarPoint.Win.Spread.PrintCancelledEventHandler">
            <summary>
            Represents a defined method that handles the PrintCancelled event for the fpSpread component.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.ChangeEventArgs">
            <summary>
            Represents the event data for the Change event for the fpSpread component, 
            which occurs when a cell changes. 
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.ChangeEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.Int32,System.Int32)">
            <summary>
            Creates a new ChangeEventArgs object.
            </summary>
            <param name="view">Spreadview object that contain the cell that is changed</param>
            <param name="row">Row index of the cell that is changed</param>
            <param name="column">Column index of the cell that is changed</param>
        </member>
        <member name="P:FarPoint.Win.Spread.ChangeEventArgs.View">
            <summary>
            Gets the view that contains the cell that is changed.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.ChangeEventArgs.Row">
            <summary>
            Gets the row index of the cell that is changed.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.ChangeEventArgs.Column">
            <summary>
            Gets the column index of the cell that is changed.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.ChangeEventHandler">
            <summary>
            Represents a defined method that handles the Change event for the fpSpread component.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.UserFormulaEnteredEventArgs">
            <summary>
            Represents the event data for the UserFormulaEntered event for the fpSpread component, 
            which occurs when the user has entered a formula in a cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.UserFormulaEnteredEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.Int32,System.Int32)">
            <summary>
            Creates a new UserFormulaEnteredEventArgs object.
            </summary>
            <param name="view">View that contains the entering of a formula</param>
            <param name="row">Row index of the cell in which user entered a formula</param>
            <param name="column">Column index of the cell in which user entered a formula</param>
        </member>
        <member name="P:FarPoint.Win.Spread.UserFormulaEnteredEventArgs.View">
            <summary>
            Gets the main view in which the user entered a formula.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.UserFormulaEnteredEventArgs.Row">
            <summary>
            Gets the row index of the cell in which user entered a formula.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.UserFormulaEnteredEventArgs.Column">
            <summary>
            Gets the column index of the cell in which user entered a formula.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.UserFormulaEnteredEventHandler">
            <summary>
            Represents a defined method that handles the UserFormulaEntered event for the fpSpread component.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.ViewportInfo">
            <summary>
            Represents the information about the location and size of a viewport.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.SearchFoundFlags">
            <summary>
            Specifies where the search string is found.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SearchFoundFlags.CellText">
            <summary>
            [1] Indicates that the string is found in the cell text
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SearchFoundFlags.CellNote">
            <summary>
            [2] Indicates that the string is found in the cell note
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SearchFoundFlags.CellTag">
            <summary>
            [4] Indicates that the string is found in the cell tag
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.FpSpread">
            <summary>
            Represents the FarPoint spreadsheet component.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.#ctor">
            <summary>
            Creates a FarPoint spreadsheet component.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.Dispose(System.Boolean)">
            <summary>
            Cleans up any resources being used.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.Reset">
            <summary>
            Resets the component to its original state.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.SearchWithDialogAdvanced(System.String)">
            <summary>
            Searches the text in the cells of the sheets for the search string  
            with the default criteria using a provided advanced search dialog. 
            </summary>
            <param name="searchString">String for which to search</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.SearchWithDialogAdvanced(System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Searches the text in the cells of the specified sheet range for the specified string  
            with the specified criteria using a provided advanced search dialog.
            </summary>
            <param name="sheetIndex">Index of sheet on which to search</param>
            <param name="searchString">String for which to search</param>
            <param name="caseSensitive">Whether search should consider the case of the letters in the search string</param>
            <param name="exactMatch">Whether the search should consider only an exact match</param>
            <param name="alternateSearch">Whether search goes by alternate coordinates of column, row (instead of row, column)</param>
            <param name="useWildcards">Whether search considers wildcard characters (*, ?) in the search string</param>
            <param name="startRowIndex">Index of row at which to start</param>
            <param name="startColumnIndex">Index of column at which to start</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.SearchWithDialog(System.String)">
            <summary>
            Searches the text in the cells of the active sheet for the search string  
            with the default criteria using a provided search dialog. 
            </summary>
            <param name="searchString">String for which to search</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.SearchWithDialog(System.Int32,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Searches the text in the cells of the specified sheet for the specified string  
            with the specified criteria using a provided search dialog.
            </summary>
            <param name="sheetIndex">Index of sheet on which to search</param>
            <param name="searchString">String for which to search</param>
            <param name="caseSensitive">Whether the search considers the case of the letters in the search string</param>
            <param name="exactMatch">Whether the search considers only an exact match</param>
            <param name="alternateSearch">Whether the search goes by alternate coordinates of column, row (instead of row, column)</param>
            <param name="useWildcards">Whether the search considers wildcard characters (*, ?) in the search string</param>
            <param name="startRowIndex">Index of row at which to start</param>
            <param name="startColumnIndex">Index of column at which to start</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.SearchWithDialog(System.Int32,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Searches the text in the cells of the specified sheet for the specified string  
            with the specified criteria using a provided search dialog.
            </summary>
            <param name="sheetIndex">Index of sheet on which to search</param>
            <param name="searchString">String for which to search</param>
            <param name="caseSensitive">Whether the search considers the case of the letters in the search string</param>
            <param name="exactMatch">Whether the search considers only an exact match</param>
            <param name="alternateSearch">Whether the search goes by alternate coordinates of column, row (instead of row, column)</param>
            <param name="useWildcards">Whether the search considers wildcard characters (*, ?) in the search string</param>
            <param name="startRowIndex">Index of row at which to start</param>
            <param name="startColumnIndex">Index of column at which to start</param>
            <param name="repeatFromStart">Whether the search starts from the beginning when the last match is found</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.Search(System.Int32,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Searches the text in the cells in the specified sheet for the specified string with the specified criteria.
            </summary>
            <param name="sheetIndex">Index of sheet on which to search</param>
            <param name="searchString">String for which to search</param>
            <param name="caseSensitive">Whether the search considers the case of the letters in the search string</param>
            <param name="exactMatch">Whether the search considers only an exact match</param>
            <param name="alternateSearch">Whether the search goes by alternate coordinates of column, row (instead of row, column)</param>
            <param name="useWildcards">Whether the search considers wildcard characters (*, ?) in the search string</param>
            <param name="startRowIndex">Index of row at which to start</param>
            <param name="startColumnIndex">Index of column at which to start</param>
            <param name="foundRowIndex">Index of row at which match is found</param>
            <param name="foundColumnIndex">Index of column at which match is found</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.Search(System.Int32,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Searches the text in the specified range of cells in the specified sheet  
            for the specified string with the specified criteria.
            </summary>
            <param name="sheetIndex">Index of sheet on which to search</param>
            <param name="searchString">String for which to search</param>
            <param name="caseSensitive">Whether the search considers the case of the letters in the search string</param>
            <param name="exactMatch">Whether the search considers only an exact match</param>
            <param name="alternateSearch">Whether the search goes by alternate coordinates of column, row (instead of row, column)</param>
            <param name="useWildcards">Whether the search considers wildcard characters (*, ?) in the search string</param>
            <param name="startRowIndex">Index of row at which to start</param>
            <param name="startColumnIndex">Index of column at which to start</param>
            <param name="endRowIndex">Index of row at which to end</param>
            <param name="endColumnIndex">Index of column at which to end</param>
            <param name="foundRowIndex">Index of row at which match is found</param>
            <param name="foundColumnIndex">Index of column at which match is found</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.Search(System.Int32,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Searches the text in the specified range of cells in the specified sheet  
            for the specified string with the specified criteria.
            </summary>
            <param name="sheetIndex">Index of sheet on which to search</param>
            <param name="searchString">String for which to search</param>
            <param name="caseSensitive">Whether the search considers the case of the letters in the search string</param>
            <param name="exactMatch">Whether the search considers only an exact match</param>
            <param name="alternateSearch">Whether the search goes by alternate coordinates of column, row (instead of row, column)</param>
            <param name="useWildcards">Whether the search considers wildcard characters (*, ?) in the search string</param>
            <param name="startRowIndex">Index of row at which to start</param>
            <param name="startColumnIndex">Index of column at which to start</param>
            <param name="endRowIndex">Index of row at which to end</param>
            <param name="endColumnIndex">Index of column at which to end</param>
            <param name="foundRowIndex">Index of row at which match is found</param>
            <param name="foundColumnIndex">Index of column at which match is found</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.Search(System.Int32,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Searches the text in the specified range of cells in the specified sheet  
            for the specified string with the specified criteria.
            </summary>
            <param name="sheetIndex">Index of sheet on which to search</param>
            <param name="searchString">String for which to search</param>
            <param name="caseSensitive">Whether the search considers the case of the letters in the search string</param>
            <param name="exactMatch">Whether the search considers only an exact match</param>
            <param name="alternateSearch">Whether the search goes by alternate coordinates of column, row (instead of row, column)</param>
            <param name="useWildcards">Whether the search considers wildcard characters (*, ?) in the search string</param>
            <param name="includeNotes">Whether the search includes the content in the cell notes</param>
            <param name="includeTags">Whether the search includes the content in the cell tags or their string representations</param>
            <param name="startRowIndex">Index of row at which to start</param>
            <param name="startColumnIndex">Index of column at which to start</param>
            <param name="endRowIndex">Index of row at which to end</param>
            <param name="endColumnIndex">Index of column at which to end</param>
            <param name="foundRowIndex">Index of row at which match is found</param>
            <param name="foundColumnIndex">Index of column at which match is found</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.Search(System.Int32,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Searches the text in the specified range of cells in the specified sheet  
            for the specified string with the specified criteria.
            </summary>
            <param name="sheetIndex">Index of sheet on which to search</param>
            <param name="searchString">String for which to search</param>
            <param name="caseSensitive">Whether the search considers the case of the letters in the search string</param>
            <param name="exactMatch">Whether the search considers only an exact match</param>
            <param name="alternateSearch">Whether the search goes by alternate coordinates of column, row (instead of row, column)</param>
            <param name="useWildcards">Whether the search considers wildcard characters (*, ?) in the search string</param>
            <param name="includeCellText">Whether the search includes the content in the cell</param>
            <param name="includeHeaders">Whether the search includes the content in the row and column headers</param>
            <param name="includeNotes">Whether the search includes the content in the cell notes</param>
            <param name="includeTags">Whether the search includes the content in the cell tags or their string representations</param>
            <param name="startRowIndex">Index of row at which to start</param>
            <param name="startColumnIndex">Index of column at which to start</param>
            <param name="endRowIndex">Index of row at which to end</param>
            <param name="endColumnIndex">Index of column at which to end</param>
            <param name="foundRowIndex">Index of row at which match is found</param>
            <param name="foundColumnIndex">Index of column at which match is found</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.Search(System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Searches the text in the specified range of cells in the specified sheet range 
            for the specified string with the specified criteria.
            </summary>
            <param name="startSheetIndex">Index of sheet on which to start search</param>
            <param name="endSheetIndex">Index of sheet on which to end search</param>
            <param name="searchString">String for which to search</param>
            <param name="caseSensitive">Whether the search considers the case of the letters in the search string</param>
            <param name="exactMatch">Whether the search considers only an exact match</param>
            <param name="alternateSearch">Whether the search goes by alternate coordinates of column, row (instead of row, column)</param>
            <param name="useWildcards">Whether the search considers wildcard characters (*, ?) in the search string</param>
            <param name="includeCellText">Whether the search includes the content in the cell</param>
            <param name="includeHeaders">Whether the search includes the content in the row and column headers</param>
            <param name="includeNotes">Whether the search includes the content in the cell notes</param>
            <param name="includeTags">Whether the search includes the content in the cell tags or their string representations</param>
            <param name="startRowIndex">Index of row at which to start</param>
            <param name="startColumnIndex">Index of column at which to start</param>
            <param name="endRowIndex">Index of row at which to end</param>
            <param name="endColumnIndex">Index of column at which to end</param>
            <param name="foundSheetIndex">Index of sheet at which match is found</param>
            <param name="foundRowIndex">Index of row at which match is found</param>
            <param name="foundColumnIndex">Index of column at which match is found</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.SearchPriv(System.Int32,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@)">
            <summary>
            Searches the text in the specified range of cells in the specified sheet  
            for the specified string with the specified criteria.
            </summary>
            <param name="sheetIndex">Index of sheet on which to search</param>
            <param name="searchString">String for which to search</param>
            <param name="caseSensitive">Whether the search considers the case of the letters in the search string</param>
            <param name="exactMatch">Whether the search considers only an exact match</param>
            <param name="alternateSearch">Whether the search goes by alternate coordinates of column, row (instead of row, column)</param>
            <param name="useWildcards">Whether the search considers wildcard characters (*, ?) in the search string</param>
            <param name="includeCellText">Whether the search includes the content in the cell</param>
            <param name="includeHeaders">Whether the search includes the content in the row and column headers</param>
            <param name="includeNotes">Whether the search includes the content in the cell notes</param>
            <param name="includeTags">Whether the search includes the content in the cell tags or their string representations</param>
            <param name="startRowIndex">Index of row at which to start</param>
            <param name="startColumnIndex">Index of column at which to start</param>
            <param name="endRowIndex">Index of row at which to end</param>
            <param name="endColumnIndex">Index of column at which to end</param>
            <param name="foundRowIndex">Index of row at which match is found</param>
            <param name="foundColumnIndex">Index of column at which match is found</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.SearchHeaders(System.Int32,System.String,System.Boolean,System.Int32@,System.Int32@)">
            <summary>
            Searches the text in the header cells in the specified sheet  
            for the specified string with the specified criteria.
            </summary>
            <param name="sheetIndex">Index of sheet on which to search</param>
            <param name="searchString">String for which to search</param>
            <param name="searchRowHeaders">Whether to search row headers instead of column headers</param>
            <param name="foundRowIndex">Index of row at which match is found</param>
            <param name="foundColumnIndex">Index of column at which match is found</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.SearchHeaders(System.Int32,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Searches the text in the specified range of header cells in the specified sheet  
            for the specified string with the specified criteria.
            </summary>
            <param name="sheetIndex">Index of sheet on which to search</param>
            <param name="searchString">String for which to search</param>
            <param name="searchRowHeaders">Whether to search row headers instead of column headers</param>
            <param name="caseSensitive">Whether the search considers the case of the letters in the search string</param>
            <param name="exactMatch">Whether the search considers only an exact match</param>
            <param name="alternateSearch">Whether the search goes by alternate coordinates of column, row (instead of row, column)</param>
            <param name="useWildcards">Whether the search considers wildcard characters (*, ?) in the search string</param>
            <param name="includeCellText">Whether the search includes the content in the cell</param>
            <param name="includeNotes">Whether the search includes the content in the cell notes</param>
            <param name="includeTags">Whether the search includes the content in the cell tags or their string representations</param>
            <param name="startRowIndex">Index of row at which to start</param>
            <param name="startColumnIndex">Index of column at which to start</param>
            <param name="endRowIndex">Index of row at which to end</param>
            <param name="endColumnIndex">Index of column at which to end</param>
            <param name="foundRowIndex">Index of row at which match is found</param>
            <param name="foundColumnIndex">Index of column at which match is found</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.PassString(System.String,System.String@)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.PassStringBytes(System.String,System.Byte[]@)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.ResetFocusRenderer">
            <summary>
            Resets the focus renderer to its original state.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OnEditModeStarting(FarPoint.Win.Spread.EditModeStartingEventArgs)">
            <summary>
            Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.EditModeStarting"/> event.
            </summary>
            <param name="e">EditModeStartingEventArgs object containing the event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OnEditModeOn(System.EventArgs)">
            <summary>
            Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.EditModeOn"/> event.
            </summary>
            <param name="e">EventArgs object containing the event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OnEditModeOff(System.EventArgs)">
            <summary>
            Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.EditModeOff"/> event.
            </summary>
            <param name="e">EventArgs object containing the event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.GetRootWorkbook">
            <summary>
            Gets the main workbook associated with the fpSpread component.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Processes KeyDown events.
            </summary>
            <param name="e">KeyEventArgs event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Processes KeyPress events.
            </summary>
            <param name="e">KeyPressEventArgs event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Processes KeyUp events.
            </summary>
            <param name="e">KeyEventArgs event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.IsInputChar(System.Char)">
            <summary>
            Determines whether the specified character is an input character that the component 
            can handle without preprocessing.
            </summary>
            <param name="charCode">Character to check</param>
            <returns>
            true if the character can be handled by the component without preprocessing; false otherwise
            </returns>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.IsInputKey(System.Windows.Forms.Keys)">
            <summary>
            Determines whether the specified key is an input key that the component 
            can handle without preprocessing.
            </summary>
            <param name="keyData">Key to check</param>
            <returns>
            true if the key can be handled by the component without preprocessing; false otherwise
            </returns>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.ProcessDialogChar(System.Char)">
            <summary>
            Processes the specified dialog character by the component.
            </summary>
            <param name="charCode">Character for the component to process</param>
            <returns>true if the character was processed by the component; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.ProcessDialogKey(System.Windows.Forms.Keys)">
            <summary>
            Processes the specified dialog key by the component.
            </summary>
            <param name="keyData">Key for the component to process</param>
            <returns>true if the key was processed by the component; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.ProcessKeyPreview(System.Windows.Forms.Message@)">
            <summary>
            Processes a key by the component by previewing the specified keyboard message.
            </summary>
            <param name="msg">Message object, passed by reference, containing the message to process</param>
            <returns>true if the message was processed by the component; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.AddViewport(System.Int32,System.Int32)">
            <summary>
            Adds a row or column of viewports.  
            </summary>
            <param name="rowViewportIndex">Index of viewport row to add</param>
            <param name="columnViewportIndex">Index of viewport column to add</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.AddViewport(System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds a row or column of viewports to the specified sheet.  
            </summary>
            <param name="sheetIndex">Index of sheet to which to add viewport</param>
            <param name="rowViewportIndex">Index of viewport row to add</param>
            <param name="columnViewportIndex">Index of viewport column to add</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified sheet index is out of range; must be between 0 and total number of sheets
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.GetCellFromPixel(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
             Gets the row and column indexes of the cell at the specified pointer location.
            </summary>
            <param name="rowViewportIndex">Index of the row of the viewport </param>
            <param name="columnViewportIndex">Index of the column of the viewport </param>
            <param name="x">X-coordinate of the pointer location </param>
            <param name="y">Y-coordinate of the pointer location </param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.GetCellRectangle(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the rectangle of the cell.
            </summary>
            <param name="rowViewportIndex">Index of the row of the viewport</param>
            <param name="columnViewportIndex">Index of the column of the viewport</param>
            <param name="row">Row index of the cell</param>
            <param name="column">Column index of the cell</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.RemoveViewport(System.Int32,System.Int32)">
            <summary>
            Removes a row or column of viewports.
            </summary>
            <param name="rowViewportIndex">Index of viewport row to remove</param>
            <param name="columnViewportIndex">Index of viewport column to remove</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.RemoveViewport(System.Int32,System.Int32,System.Int32)">
            <summary>
            Removes a row or column of viewports.
            </summary>
            <param name="sheetIndex">Sheet index</param>
            <param name="rowViewportIndex">Index of viewport row to remove</param>
            <param name="columnViewportIndex">Index of viewport column to remove</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified sheet index is out of range; must be between 0 and total number of sheets
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.SetCursor(FarPoint.Win.Spread.CursorType,System.Windows.Forms.Cursor)">
            <summary>
            Sets the pointer displayed over different areas of the component.
            </summary>
            <param name="index">Pointer type index (for a specific part of the component)</param>
            <param name="cursor">Image used to paint the pointer</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.GetInputMap(FarPoint.Win.Spread.InputMapMode)">
            <summary>
            Gets the input map defined for the specified focus mode.
            </summary>
            <param name="inputMapMode">Focus mode (control or child of the component)</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.SetInputMap(FarPoint.Win.Spread.InputMapMode,FarPoint.Win.Spread.InputMap)">
            <summary>
            Sets the input map for the specified focus mode.
            </summary>
            <param name="inputMapMode">Focus mode (control or child of the component)</param>
            <param name="value">Input map (<see cref="T:FarPoint.Win.Spread.InputMap"/> object)</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.GetInputMap(FarPoint.Win.Spread.InputMapMode,FarPoint.Win.Spread.OperationMode)">
            <summary>
            Gets the input map defined for the specified focus mode and operation mode. 
            </summary>
            <param name="inputMapMode">Focus mode (control or child of the component)</param>
            <param name="operationMode">Operation mode</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.SetInputMap(FarPoint.Win.Spread.InputMapMode,FarPoint.Win.Spread.OperationMode,FarPoint.Win.Spread.InputMap)">
            <summary>
            Sets the input map for the specified focus mode and operation mode.
            </summary>
            <param name="inputMapMode">Focus mode (control or child of the component)</param>
            <param name="operationMode">Operation mode</param>
            <param name="value"><see cref="T:FarPoint.Win.Spread.InputMap"/> object containing the input map</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.GetInputMapWhenShapeHasFocus">
            <summary>
            Gets the input map when a shape has keyboard focus.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.SetInputMapWhenShapeHasFocus(FarPoint.Win.Spread.InputMap)">
            <summary>
            Sets the input map when a shape has keyboard focus.
            </summary>
            <param name="value">Input map (<see cref="T:FarPoint.Win.Spread.InputMap"/> object)</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.GetActionMap">
            <summary>
            Gets the action map, that maps action identifiers (for keystrokes) to particular actions.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.SetActionMap(FarPoint.Win.Spread.ActionMap)">
            <summary>
            Sets the action map, that maps action identifiers (for keystrokes) to particular actions.
            </summary>
            <param name="value">New action map</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.GetCursor(FarPoint.Win.Spread.CursorType)">
            <summary>
            Gets the pointer displayed over different areas of the component.
            </summary>
            <param name="index">Pointer type index (for a specific part of the component)</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.GetMaximumCellOverflowWidth">
            <summary>
            Gets the maximum cell overflow width in pixels.   
            </summary>
            Default value is 1200 pixels.
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.SetMaximumCellOverflowWidth(System.Int32)">
            <summary>
            Sets the maximum cell overflow width in pixels.
            </summary>
            <param name="width">Width in pixels</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.GetSheetTabRectangle(System.Int32)">
            <summary>
            Gets the rectangle of the tab associated with a sheet.
            </summary>
            <param name="sheetIndex">Index of the sheet from which to retrieve a tab rectangle</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.GetViewportRectangle(System.Int32,System.Int32)">
            <summary>
            Gets the rectangle for the specified viewport on the active sheet.
            </summary>
            <param name="rowViewportIndex">Index of the viewport row from which to retrieve the rectangle</param>
            <param name="columnViewportIndex">Index of the viewport column from which to retrieve the rectangle</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.GetRowViewportCount">
            <summary>
            Gets the number of viewport rows.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.GetRowViewportCount(System.Int32)">
            <summary>
            Gets the number of viewport rows for the specified sheet.
            </summary>
            <param name="sheetIndex">Sheet index</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified sheet index is out of range; must be between 0 and total number of sheets
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.GetColumnViewportCount">
            <summary>
            Gets the number of viewport columns in the active sheet.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.GetColumnViewportCount(System.Int32)">
            <summary>
            Gets the number of viewport columns in the specified sheet.
            </summary>
            <param name="sheetIndex">Sheet index</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified sheet index is out of range; must be between 0 and total number of sheets
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.GetRowViewportIndexFromY(System.Int32)">
            <summary>
            Gets the index of the viewport row for the specified coordinate for the active sheet.
            </summary>
            <param name="y">Y coordinate</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.GetColumnViewportIndexFromX(System.Int32)">
            <summary>
            Gets the index of the viewport column for the specified coordinate for the active sheet.
            </summary>
            <param name="x">X coordinate</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.GetActiveRowViewportIndex">
            <summary>
            Gets the index of the active viewport row for the active sheet.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.GetActiveRowViewportIndex(System.Int32)">
            <summary>
            Gets the index of the active viewport row for the specified sheet.
            </summary>
            <param name="sheetIndex">Sheet index</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified sheet index is out of range; must be between 0 and total number of sheets
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.GetActiveColumnViewportIndex">
            <summary>
            Gets the index of the active viewport column for the active sheet.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.GetActiveColumnViewportIndex(System.Int32)">
            <summary>
            Gets the index of the active viewport column for the specified sheet.
            </summary>
            <param name="sheetIndex">Sheet index</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified sheet index is out of range; must be between 0 and total number of sheets
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.SetActiveViewport(System.Int32,System.Int32)">
            <summary>
            Sets the active viewport for the active sheet.
            </summary>
            <param name="rowViewportIndex">Viewport row index</param>
            <param name="columnViewportIndex">Viewport column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.SetActiveViewport(System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the active viewport for the specified sheet.
            </summary>
            <param name="sheetIndex">Sheet index</param>
            <param name="rowViewportIndex">Viewport row index</param>
            <param name="columnViewportIndex">Viewport column index</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified sheet index is out of range; must be between 0 and total number of sheets
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.GetViewportPreferredWidth(System.Int32)">
            <summary>
            Gets the maximum width of the specified viewport column.
            </summary>
            <param name="columnViewportIndex">Column index of viewport</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.GetViewportPreferredWidth(System.Int32,System.Int32)">
            <summary>
            Gets the maximum width of the specified viewport column for the specified sheet.
            </summary>
            <param name="sheetIndex">Sheet index</param>
            <param name="columnViewportIndex">Column index of viewport</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified sheet index is out of range; must be between 0 and total number of sheets
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.SetViewportPreferredWidth(System.Int32,System.Int32)">
            <summary>
            Sets the maximum width of the specified viewport column for the active sheet.
            </summary>
            <param name="columnViewportIndex">Column index of viewport</param>
            <param name="value">Width of the viewport in pixels</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.SetViewportPreferredWidth(System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the maximum width of the specified viewport column for the specified sheet.
            </summary>
            <param name="sheetIndex">Sheet index</param>
            <param name="columnViewportIndex">Column index of viewport</param>
            <param name="value">Width of the viewport in pixels</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified sheet index is out of range; must be between 0 and total number of sheets
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.GetViewportPreferredHeight(System.Int32)">
            <summary>
            Gets the maximum height of the viewport row for the active sheet.
            </summary>
            <param name="rowViewportIndex">Viewport row index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.GetViewportPreferredHeight(System.Int32,System.Int32)">
            <summary>
            Gets the maximum height of the viewport row for the specified sheet.
            </summary>
            <param name="sheetIndex">Sheet index</param>
            <param name="rowViewportIndex">Viewport row index</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified sheet index is out of range; must be between 0 and total number of sheets
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.SetViewportPreferredHeight(System.Int32,System.Int32)">
            <summary>
            Sets the maximum height of the specified viewport row for the active sheet.
            </summary>
            <param name="rowViewportIndex">Row index of viewport</param>
            <param name="value">Height value in pixels</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.SetViewportPreferredHeight(System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the maximum height of the specified viewport row for the specified sheet.
            </summary>
            <param name="sheetIndex">Sheet index</param>
            <param name="rowViewportIndex">Row index of viewport</param>
            <param name="value">Height value in pixels</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified sheet index is out of range; must be between 0 and total number of sheets
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.GetViewportLeftColumn(System.Int32)">
            <summary>
            Gets the leftmost column of cells of the specified viewport column for the active sheet.
            </summary>
            <param name="columnViewportIndex">Viewport column index </param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.GetViewportLeftColumn(System.Int32,System.Int32)">
            <summary>
            Gets the leftmost column of cells of the specified viewport column for the specified sheet.
            </summary>
            <param name="sheetIndex">Sheet index</param>
            <param name="columnViewportIndex">Viewport column index </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified sheet index is out of range; must be between 0 and total number of sheets
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.GetViewportRightColumn(System.Int32)">
            <summary>
            Gets the rightmost column of cells of the specified viewport column for the active sheet.
            </summary>
            <param name="columnViewportIndex">Viewport column index </param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.GetViewportRightColumn(System.Int32,System.Int32)">
            <summary>
            Gets the rightmost column of cells of the specified viewport column for the specified sheet.
            </summary>
            <param name="sheetIndex">Sheet index</param>
            <param name="columnViewportIndex">Viewport column index </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified sheet index is out of range; must be between 0 and total number of sheets
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.GetViewportBottomRow(System.Int32)">
            <summary>
            Gets the bottom row of cells of the specified viewport row for the active sheet.
            </summary>
            <param name="rowViewportIndex">Viewport row index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.GetViewportBottomRow(System.Int32,System.Int32)">
            <summary>
            Gets the bottom row of cells of the specified viewport row for the specified sheet.
            </summary>
            <param name="sheetIndex">Index of sheet</param>
            <param name="rowViewportIndex">Index of viewport row</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified sheet index is out of range; must be between 0 and total number of sheets
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.SetViewportLeftColumn(System.Int32,System.Int32)">
            <summary>
            Sets the leftmost column of cells of the specified viewport column for the active sheet.
            </summary>
            <param name="columnViewportIndex">Index of the viewport column</param>
            <param name="value">Index of the column to set as the leftmost of that viewport</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.SetViewportLeftColumn(System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the leftmost column of cells of the specified viewport column for the specified sheet.
            </summary>
            <param name="sheetIndex">Index of sheet</param>
            <param name="columnViewportIndex">Index of the viewport column</param>
            <param name="value">Index of the column to set as the leftmost of that viewport</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified sheet index is out of range; must be between 0 and total number of sheets
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.GetViewportTopRow(System.Int32)">
            <summary>
            Gets the top row of cells of the specified viewport row for the specified sheet.
            </summary>
            <param name="rowViewportIndex">Index of the viewport row</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.GetViewportTopRow(System.Int32,System.Int32)">
            <summary>
            Gets the top row of cells of the specified viewport row for the specified sheet.
            </summary>
            <param name="sheetIndex">Sheet index</param>
            <param name="rowViewportIndex">Viewport row index</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified sheet index is out of range; must be between 0 and total number of sheets
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.SetViewportTopRow(System.Int32,System.Int32)">
            <summary>
            Sets the top row of cells of the specified viewport row for the active sheet.
            </summary>
            <param name="rowViewportIndex">Index of the viewport row</param>
            <param name="value">Index of the row to set as the top of that viewport</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.SetViewportTopRow(System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the top row of cells of the specified viewport row for the specified sheet.
            </summary>
            <param name="sheetIndex">Index of the sheet</param>
            <param name="rowViewportIndex">Index of the viewport row</param>
            <param name="value">Index of the row to set as the top of that viewport</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified sheet index is out of range; must be between 0 and total number of sheets
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.ShowActiveCell(FarPoint.Win.Spread.VerticalPosition,FarPoint.Win.Spread.HorizontalPosition)">
            <summary>
            Moves the active cell to the specified position in the component.
            </summary>
            <param name="verticalPosition">New position (vertical coordinate) of active cell </param>
            <param name="horizontalPosition">New position (horizontal coordinate) of active cell </param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.ShowCell(System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.VerticalPosition,FarPoint.Win.Spread.HorizontalPosition)">
            <summary>
            Moves the specified cell in the specified viewport to the specified position 
            in the component.
            </summary>
            <param name="rowViewportIndex">Row index of viewport</param>
            <param name="columnViewportIndex">Column index of viewport</param>
            <param name="row">Index of row of cell</param>
            <param name="column">Index of column of cell</param>
            <param name="verticalPosition">New position (vertical coordinate) of cell </param>
            <param name="horizontalPosition">New position (horizontal coordinate) of cell </param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.ShowRow(System.Int32,System.Int32,FarPoint.Win.Spread.VerticalPosition)">
            <summary>
            Moves a row in the specified viewport to the specified position in the component.
            </summary>
            <param name="rowViewportIndex">Row index of viewport that has row </param>
            <param name="row">Index of row to move</param>
            <param name="verticalPosition">New vertical position of row</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.ShowColumn(System.Int32,System.Int32,FarPoint.Win.Spread.HorizontalPosition)">
            <summary>
            Moves a column of cells in the specified viewport to the specified position 
            in the component.
            </summary>
            <param name="columnViewportIndex">Column index of viewport that has column</param>
            <param name="column">Index of column to move </param>
            <param name="horizontalPosition">New position of column</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.StartCellEditing(System.EventArgs,System.Boolean)">
            <summary>
             Starts cell editing.
            </summary>
            <param name="e">Event </param>
            <param name="formula">Whether there is a formula </param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.StopCellEditing">
            <summary>
            Stops cell editing.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.CancelCellEditing">
            <summary>
            Cancels cell editing.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.GetSheetFromTag(FarPoint.Win.Spread.SheetView,System.Object)">
            <summary>
            Gets a sheet with a specific tag.
            </summary>
            <param name="sheetToStart">Sheet from which to start (null to start from beginning)</param>
            <param name="tagToFind">Tag object to identify the sheet</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OnMouseEnter(System.EventArgs)">
            <summary>
            Raises the <see cref="!:FarPoint.Win.Spread.FpSpread.MouseEnter"/> event.
            </summary>
            <param name="e">EventArgs event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OnMouseLeave(System.EventArgs)">
            <summary>
            Raises the <see cref="!:FarPoint.Win.Spread.FpSpread.MouseLeave"/> event.
            </summary>
            <param name="e">EventArgs event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OnHandleDestroyed(System.EventArgs)">
            <summary>
            Raises the HandleDestroyed event.
            </summary>
            <param name="e">EventArgs event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OnDoubleClick(System.EventArgs)">
            <summary>
            Raises the <see cref="!:FarPoint.Win.Spread.FpSpread.DoubleClick"/> event.
            </summary>
            <param name="e">EventArgs event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="!:FarPoint.Win.Spread.FpSpread.MouseDown"/> event.
            </summary>
            <param name="e">MouseEventArgs event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="!:FarPoint.Win.Spread.FpSpread.MouseMove"/> event.
            </summary>
            <param name="e">MouseEventArgs event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="!:FarPoint.Win.Spread.FpSpread.MouseUp"/> event.
            </summary>
            <param name="e">MouseEventArgs event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="!:FarPoint.Win.Spread.FpSpread.MouseWheel"/> event.
            </summary>
            <param name="e">MouseEventArgs event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints the background of the component.
            </summary>
            <param name="e">PaintEventArgs event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the <see cref="!:FarPoint.Win.Spread.FpSpread.Paint"/> event.
            </summary>
            <param name="e">PaintEventArgs event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OnResize(System.EventArgs)">
            <summary>
            Raises the <see cref="!:FarPoint.Win.Spread.FpSpread.Resize"/> event.
            </summary>
            <param name="e">EventArgs event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.ScaleCore(System.Single,System.Single)">
            <summary>
            Performs the work of scaling the entire component and any child controls.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OnGotFocus(System.EventArgs)">
            <summary>
            Raises the <see cref="!:FarPoint.Win.Spread.FpSpread.GotFocus"/> event.
            </summary>
            <param name="e">EventArgs event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OnLostFocus(System.EventArgs)">
            <summary>
            Raises the <see cref="!:FarPoint.Win.Spread.FpSpread.LostFocus"/> event.
            </summary>
            <param name="e">EventArgs event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.GetPrintPreview">
            <summary>
            Gets the print preview dialog.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.SetPrintPreview(System.Windows.Forms.PrintPreviewDialog)">
            <summary>
            Sets the print preview dialog.
            </summary>
            <param name="dialog">Print preview dialog</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.PrintSheet(System.Int32)">
            <summary>
            Prints the specified sheet.
            </summary>
            <param name="sheet">Index of sheet to print; -1 for all sheets</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified sheet index is out of range; must be between 0 and total number of sheets
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.PrintSheet(FarPoint.Win.Spread.SheetView)">
            <summary>
            Prints the supplied sheet.
            </summary>
            <param name="sheet">Sheet to be printed</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.SetPrintInfo(FarPoint.Win.Spread.PrintInfo,System.Int32)">
            <summary>
            Sets the <see cref="T:FarPoint.Win.Spread.PrintInfo"/> object for the specfied sheet.
            </summary>
            <param name="pi"><see cref="T:FarPoint.Win.Spread.PrintInfo"/> object</param>
            <param name="sheet">Sheet for which to set PrintInfo; -1 to specify all sheets</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.GetOwnerPrintPageCount(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32)">
            <summary>
            Gets the number of pages required to print a given sheet into the supplied rectangle.
            </summary>
            <param name="g">Graphics object used for printing</param>
            <param name="rect">Rectangle area representing the area for printing</param>
            <param name="sheet">Sheet to print</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.GetOwnerPrintColumnPageBreaks(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Boolean)">
             <summary>
             Gets the column page breaks for the specified sheet under the current printing conditions.
             </summary>
            <param name="g">Graphics object used for printing</param>
            <param name="rect">Rectangle area representing the area for printing</param>
            <param name="sheet">Sheet for which to calculate page breaks</param>
            <param name="reCalc">Whether to recalcuate the page break</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.GetOwnerPrintRowPageBreaks(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Boolean)">
             <summary>
             Gets the row page breaks for the specified sheet under the current printing conditions.
             </summary>
            <param name="g">Graphics object used for printing</param>
            <param name="rect">Rectangle area representing the area for printing</param>
            <param name="sheet">Sheet for which to calculate page breaks</param>
            <param name="reCalc">Whether to recalcuate page break</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OwnerPrintDraw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Int32)">
            <summary>
            Prints the specified page of the specified sheet to a specified graphics interface with the specified size.
            </summary>
            <param name="g">Graphics device interface</param>
            <param name="rect">Location and size of a rectangular region</param>
            <param name="sheet">Sheet from which to print</param>
            <param name="page">Specific page of the sheet to print</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified sheet index is out of range; must be between zero and the total number of sheets
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified page index is out of range; must be greater than one
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.GetPrintPageCount(System.Int32)">
            <summary>
            Gets the number of pages required to print the specified sheet.
            </summary>
            <param name="sheet">Index of sheet to print</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.GetColumnPageBreaks(System.Int32)">
            <summary>
            Gets the column page breaks for the specified sheet 
            under the current printing conditions.
            </summary>
            <param name="sheet">Index of sheet for which to return column page breaks</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.GetColumnPageBreaks(System.Int32,System.Boolean)">
            <summary>
            Gets the column page breaks for the specified sheet 
            under the current printing conditions with the option to recalculate.
            </summary>
            <param name="sheet">Index of sheet for which to return column page breaks</param>
            <param name="reCalc">Whether to recalculate the page break</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.GetRowPageBreaks(System.Int32)">
            <summary>
            Gets the row page breaks for the specified sheet 
            under the current printing conditions.
            </summary>
            <param name="sheet">Index of sheet for which to return row page breaks</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.GetRowPageBreaks(System.Int32,System.Boolean)">
            <summary>
            Gets the row page breaks for the specified sheet 
            under the current printing conditions with the option to recalculate.
            </summary>
            <param name="sheet">Index of sheet for which to return row page breaks</param>
            <param name="reCalc">Whether to recalculate the page break</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.Open(System.String)">
            <summary>
            Opens a saved XML file.
            </summary>
            <param name="fileName">Path and name of file from which to load the data</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.Open(System.IO.Stream)">
            <summary>
            Opens saved XML from a stream.
            </summary>
            <param name="stream">Stream from which to load the data</param>
            <exception cref="T:System.ArgumentNullException">
            No stream specified or specified stream is null
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OpenSpreadFile(System.String,System.Int32)">
            <summary>
            Opens a saved Spread file.
            </summary>
            <param name="fileName">Path and name of the Spread-compatible file from which to load the contents </param>
            <param name="sheetIndex">Index of sheet into which to load the data</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.IsSpreadXmlFile(System.String)">
            <summary>
            Opens the specified file and determines whether it meets the minimal requirements 
            to be considered a Spread XML file.
            </summary>
            <param name="fileName">String containing path and name of file</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.IsSpreadSSFile(System.String)">
            <summary>
            Opens the specified file and determines whether it meets the minimal requirements 
            to be considered a Spread SS file.
            </summary>
            <param name="fileName">String containing path and name of file</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.IsExcelFile(System.String)">
            <summary>
            Opens the specified file and determines whether it meets the minimal requirements  
            to be considered a structured storage file containing an Excel workbook.
            </summary>
            <param name="fileName">Path and name of file </param>
            <exception cref="T:System.IO.FileNotFoundException">Specified file is not found</exception>
            <exception cref="T:System.ArgumentNullException">No file name is specified (or specified file name is null)</exception>
            <exception cref="T:System.ArgumentException">No file name is specified (or specified file name is empty)</exception>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.IsExcelStream(System.IO.Stream)">
            <summary>
            Opens the specified file and determines whether it meets the minimal requirements  
            to be considered a structured storage file containing an Excel workbook.
            </summary>
            <param name="stream">Stream</param>
            <exception cref="T:System.ArgumentNullException">No stream specified or specified stream is null</exception>
            <exception cref="T:System.ArgumentException">No stream specified or specified stream is empty</exception>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OpenExcel(System.IO.Stream,FarPoint.Excel.ExcelOpenFlags)">
            <summary>
            Opens an Excel Compound Document File and loads it into Spread.
            </summary>
            <param name="stream">Stream</param>
            <param name="openFlags">Open flag</param>
            <exception cref="T:System.ArgumentNullException">No stream specified or specified stream is null</exception>
            <exception cref="T:System.ArgumentException">No stream specified or specified stream is empty</exception>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OpenExcel(System.IO.Stream,FarPoint.Excel.ExcelOpenFlags,FarPoint.Excel.ExcelWarningList)">
            <summary>
            Opens an Excel Compound Document File and loads it into Spread with a list of warnings.
            </summary>
            <param name="openFlags">Open flag</param>
            <param name="stream">Stream</param>
            <param name="warningList">List of Excel warnings</param>
            <exception cref="T:System.ArgumentNullException">No stream specified or specified stream is null</exception>
            <exception cref="T:System.ArgumentException">No stream specified or specified stream is empty</exception>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OpenExcel(System.IO.Stream)">
            <summary>
            Opens an Excel Compound Document File and loads it into Spread.
            </summary>
            <param name="stream">Stream containing an Excel Compound Document File</param>
            <exception cref="T:System.ArgumentNullException">No stream specified or specified stream is null</exception>
            <exception cref="T:System.ArgumentException">No stream specified or specified stream is empty</exception>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OpenExcel(System.IO.Stream,FarPoint.Excel.ExcelWarningList)">
            <summary>
            Opens an Excel Compound Document File and loads it into Spread with a list of warnings.
            </summary>
            <param name="stream">Stream</param>
            <param name="warningList">List of Excel warnings</param>
            <exception cref="T:System.ArgumentNullException">No stream specified or specified stream is null</exception>
            <exception cref="T:System.ArgumentException">No stream specified or specified stream is empty</exception>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.GetExcelSheetNames(System.IO.Stream)">
            <summary>
            Gets an array of sheet names from the specified Excel stream.
            </summary>
            <param name="stream">Stream containing an Excel Compound Document File</param>
            <exception cref="T:System.ArgumentNullException">No stream specified or specified stream is null</exception>
            <exception cref="T:System.ArgumentException">No stream specified or specified stream is empty</exception>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.SaveExcel(System.IO.Stream)">
            <summary>
            Saves the contents of the Spread component to the specified stream.
            </summary>
            <param name="stream">Stream to which to save the data</param>
            <exception cref="T:System.ArgumentNullException">No stream specified or specified stream is null</exception>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.SaveExcel(System.IO.Stream,FarPoint.Excel.ExcelWarningList)">
            <summary>
            Saves the contents of the Spread component to the specified stream
            with a list of warnings.
            </summary>
            <param name="stream">Stream</param>
            <param name="warningList">List of Excel warnings</param>
            <exception cref="T:System.ArgumentNullException">No stream specified or specified stream is null</exception>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.SaveExcel(System.IO.Stream,FarPoint.Excel.ExcelSaveFlags)">
            <summary>
            Saves the contents of the Spread component to the specified stream
            with the headers exported as data.
            </summary>
            <param name="stream">Stream</param>
            <param name="saveFlags">Save flag</param>
            <exception cref="T:System.ArgumentNullException">No stream specified or specified stream is null</exception>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.SaveExcel(System.IO.Stream,FarPoint.Excel.ExcelSaveFlags,FarPoint.Excel.ExcelWarningList)">
            <summary>
            Saves the contents of the Spread component to the specified stream 
            with headers and a list of warnings.
            </summary>
            <param name="stream">Stream</param>
            <param name="saveFlags">Save flag</param>
            <param name="warningList">Warning list</param>
            <exception cref="T:System.ArgumentNullException">No stream specified or specified stream is null</exception>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.SaveExcel(System.String,FarPoint.Excel.ExcelSaveFlags)">
            <summary>
            Saves the contents of the Spread component to the specified Excel-compatible file 
            with the headers exported as data.
            </summary>
            <param name="filename">Path and name of file</param>
            <param name="saveFlags">Save flag</param>
            <exception cref="T:System.IO.FileNotFoundException">Specified file is not found</exception>
            <exception cref="T:System.ArgumentNullException">No file name is specified (or specified file name is null)</exception>
            <exception cref="T:System.ArgumentException">No file name is specified (or specified file name is empty)</exception>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.SaveExcel(System.String,FarPoint.Excel.ExcelSaveFlags,FarPoint.Excel.ExcelWarningList)">
            <summary>
            Saves the contents of the Spread component to the specified Excel-compatible file 
            with headers and a list of warnings.
            </summary>
            <param name="fileName">Path and name of file </param>
            <param name="saveFlags">Save flag</param>
            <param name="warningList">Warning list</param>
            <exception cref="T:System.IO.FileNotFoundException">Specified file is not found</exception>
            <exception cref="T:System.ArgumentNullException">No file name is specified (or specified file name is null)</exception>
            <exception cref="T:System.ArgumentException">No file name is specified (or specified file name is empty)</exception>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OpenExcel(System.String,FarPoint.Excel.ExcelOpenFlags)">
            <summary>
            Opens an Excel-compatible file and loads it into Spread.
            </summary>
            <param name="fileName">Path and name of file </param>
            <param name="openFlags">Open flag</param>
            <exception cref="T:System.IO.FileNotFoundException">Specified file is not found</exception>
            <exception cref="T:System.ArgumentNullException">No file name is specified (or specified file name is null)</exception>
            <exception cref="T:System.ArgumentException">No file name is specified (or specified file name is empty)</exception>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OpenExcel(System.String,FarPoint.Excel.ExcelOpenFlags,FarPoint.Excel.ExcelWarningList)">
            <summary>
            Opens an Excel-compatible file and loads it into Spread with a list of warnings.
            </summary>
            <param name="fileName">Path and name of file </param>
            <param name="openFlags">Open flag</param>
            <param name="warningList">Warning list</param>
            <exception cref="T:System.IO.FileNotFoundException">Specified file is not found</exception>
            <exception cref="T:System.ArgumentNullException">No file name is specified (or specified file name is null)</exception>
            <exception cref="T:System.ArgumentException">No file name is specified (or specified file name is empty)</exception>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OpenExcel(System.String)">
            <summary>
            Opens an Excel-compatible file and loads it into Spread.
            </summary>
            <param name="fileName">Path and name of file </param>
            <exception cref="T:System.IO.FileNotFoundException">Specified file is not found</exception>
            <exception cref="T:System.ArgumentNullException">No file name is specified (or specified file name is null)</exception>
            <exception cref="T:System.ArgumentException">No file name is specified (or specified file name is empty)</exception>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OpenExcel(System.String,FarPoint.Excel.ExcelWarningList)">
            <summary>
            Opens an Excel-compatible file and loads it into Spread with a list of warnings.
            </summary>
            <param name="fileName">Path and name of file </param>
            <param name="warningList">Warning list</param>
            <exception cref="T:System.IO.FileNotFoundException">Specified file is not found</exception>
            <exception cref="T:System.ArgumentNullException">No file name is specified (or specified file name is null)</exception>
            <exception cref="T:System.ArgumentException">No file name is specified (or specified file name is empty)</exception>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.GetExcelSheetNames(System.String)">
            <summary>
            Gets an array of sheet names from the specified Excel-compatible file.
            </summary>
            <param name="fileName">Path and name of file </param>
            <exception cref="T:System.IO.FileNotFoundException">Specified file is not found</exception>
            <exception cref="T:System.ArgumentNullException">No file name is specified (or specified file name is null)</exception>
            <exception cref="T:System.ArgumentException">No file name is specified (or specified file name is empty)</exception>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.SaveExcel(System.String)">
            <summary>
            Saves the contents of the Spread component to the specified Excel-compatible file.
            </summary>
            <param name="fileName">Path and name of file </param>
            <exception cref="T:System.IO.FileNotFoundException">Specified file is not found</exception>
            <exception cref="T:System.ArgumentNullException">No file name is specified (or specified file name is null)</exception>
            <exception cref="T:System.ArgumentException">No file name is specified (or specified file name is empty)</exception>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.SaveExcel(System.String,FarPoint.Excel.ExcelWarningList)">
            <summary>
            Saves the contents of the Spread component to the specified Excel-compatible file
            with a list of warnings.
            </summary>
            <param name="fileName">Path and name of file </param>
            <param name="warningList">Warning list</param>
            <exception cref="T:System.IO.FileNotFoundException">Specified file is not found</exception>
            <exception cref="T:System.ArgumentNullException">No file name is specified (or specified file name is null)</exception>
            <exception cref="T:System.ArgumentException">No file name is specified (or specified file name is empty)</exception>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.SaveExcel(System.String,FarPoint.Win.Spread.Model.IncludeHeaders)">
            <summary>
            Saves the contents of the Spread component to the specified Excel-compatible file 
            with the headers exported as data.
            </summary>
            <param name="fileName">Path and name of file</param>
            <param name="includeHeaders">Whether to include headers</param>
            <exception cref="T:System.IO.FileNotFoundException">Specified file is not found</exception>
            <exception cref="T:System.ArgumentNullException">No file name is specified (or specified file name is null)</exception>
            <exception cref="T:System.ArgumentException">No file name is specified (or specified file name is empty)</exception>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.SaveExcel(System.String,FarPoint.Win.Spread.Model.IncludeHeaders,FarPoint.Excel.ExcelWarningList)">
            <summary>
            Saves the contents of the Spread component to the specified Excel-compatible file 
            with headers and a list of warnings.
            </summary>
            <param name="fileName">Path and name of file </param>
            <param name="includeHeaders">Whether to include headers</param>
            <exception cref="T:System.IO.FileNotFoundException">Specified file is not found</exception>
            <exception cref="T:System.ArgumentNullException">No file name is specified (or specified file name is null)</exception>
            <exception cref="T:System.ArgumentException">No file name is specified (or specified file name is empty)</exception>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.Save(System.String,System.Boolean)">
            <summary>
            Saves the contents of the Spread component to the specified file. 
            </summary>
            <param name="fileName">Path and name of file to which to save </param>
            <param name="dataOnly">Whether to save data only</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.Save(System.IO.Stream,System.Boolean)">
            <summary>
            Saves the contents of the Spread component to the specified stream. 
            </summary>
            <param name="stream">Stream</param>
            <param name="dataOnly">Whether to save data only</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OnClipboardPasting(FarPoint.Win.Spread.ClipboardPastingEventArgs)">
            <summary>
            Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.ClipboardPasting"/> event.
            </summary>
            <param name="e">ClipboardPastingEventArgs object containing the event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OnSheetTabClick(FarPoint.Win.Spread.SheetTabClickEventArgs)">
            <summary>
            Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.SheetTabClick"/> event.
            </summary>
            <param name="e">SheetTabClickEventArgs object containing the event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OnSheetTabDoubleClick(FarPoint.Win.Spread.SheetTabDoubleClickEventArgs)">
            <summary>
            Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.SheetTabDoubleClick"/> event.
            </summary>
            <param name="e">SheetTabDoubleClickEventArgs object containing the event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OnActiveSheetChanging(FarPoint.Win.Spread.ActiveSheetChangingEventArgs)">
            <summary>
            Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.ActiveSheetChanging"/> event.
            </summary>
            <param name="e">ActiveSheetChangingEventArgs object containing the event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OnActiveSheetChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.ActiveSheetChanged"/> event.
            </summary>
            <param name="e">EventArgs object containing the event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OnRowHeightChanged(FarPoint.Win.Spread.RowHeightChangedEventArgs)">
            <summary>
            Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.RowHeightChanged"/> event.
            </summary>
            <param name="e">RowHeightChangedEventArgs object containing the event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OnColumnWidthChanged(FarPoint.Win.Spread.ColumnWidthChangedEventArgs)">
            <summary>
            Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.ColumnWidthChanged"/> event.
            </summary>
            <param name="e">ColumnWidthChangedEventArgs object containing the event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OnRowViewportHeightChanged(FarPoint.Win.Spread.RowViewportHeightChangedEventArgs)">
            <summary>
            Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.RowViewportHeightChanged"/> event.
            </summary>
            <param name="e">RowViewportHeightChangedEventArgs object containing the event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OnColumnViewportWidthChanged(FarPoint.Win.Spread.ColumnViewportWidthChangedEventArgs)">
            <summary>
            Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.ColumnViewportWidthChanged"/> event.
            </summary>
            <param name="e">ColumnViewportWidthChangedEventArgs containing the event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OnSelectionChanged(FarPoint.Win.Spread.SelectionChangedEventArgs)">
            <summary>
            Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.SelectionChanged"/> event.
            </summary>
            <param name="e">SelectionChangedEventArgs containing the event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OnSelectionChanging(FarPoint.Win.Spread.SelectionChangingEventArgs)">
            <summary>
            Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.SelectionChanging"/> event.
            </summary>
            <param name="e">SelectionChangingEventArgs object containing the event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OnUserFormulaEntered(FarPoint.Win.Spread.UserFormulaEnteredEventArgs)">
            <summary>
            Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.UserFormulaEntered"/> event.
            </summary>
            <param name="e">UserFormulaEnteredEventArgs object containing the event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OnChildWorkbookCreated(FarPoint.Win.Spread.ChildWorkbookCreatedEventArgs)">
            <summary>
            Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.ChildWorkbookCreated"/> event.
            </summary>
            <param name="e">ChildWorkbookCreatedEventArgs object containing the event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OnClipboardChanging(System.EventArgs)">
            <summary>
            Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.ClipboardChanging"/> event.
            </summary>
            <param name="e">EventArgs object containing the event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OnUserZooming(FarPoint.Win.Spread.ZoomEventArgs)">
            <summary>
            Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.UserZooming"/> event.
            </summary>
            <param name="e">ZoomEventArgs object containing the event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OnShapeActivated(System.EventArgs)">
            <summary>
            Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.ShapeActivated"/> event.
            </summary>
            <param name="e">EventArgs object containing the event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OnChildViewCreated(FarPoint.Win.Spread.ChildViewCreatedEventArgs)">
            <summary>
            Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.ChildViewCreated"/> event.
            </summary>
            <param name="e">ChildViewCreatedEventArgs object containing the event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OnTextTipFetch(FarPoint.Win.Spread.TextTipFetchEventArgs)">
            <summary>
            Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.TextTipFetch"/> event.
            </summary>
            <param name="e">TextTipFetchEventArgs object containing the event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OnScrollTipFetch(FarPoint.Win.Spread.ScrollTipFetchEventArgs)">
            <summary>
            Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.ScrollTipFetch"/> event.
            </summary>
            <param name="e">ScrollTipFetchEventArgs object containing the event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OnCellClick(FarPoint.Win.Spread.CellClickEventArgs)">
            <summary>
            Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.CellClick"/> event.
            </summary>
            <param name="e">CellClickEventArgs object containing the event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OnCellDoubleClick(FarPoint.Win.Spread.CellClickEventArgs)">
            <summary>
            Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.CellDoubleClick"/> event.
            </summary>
            <param name="e">CellClickEventArgs object containing the event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OnAdvance(FarPoint.Win.Spread.AdvanceEventArgs)">
            <summary>
            Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.Advance"/> event.
            </summary>
            <param name="e">AdvanceEventArgs object containing the event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OnChange(FarPoint.Win.Spread.ChangeEventArgs)">
            <summary>
            Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.Change"/> event.
            </summary>
            <param name="e">ChangeEventArgs object containing the event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OnLeaveCell(FarPoint.Win.Spread.LeaveCellEventArgs)">
            <summary>
            Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.LeaveCell"/> event.
            </summary>
            <param name="e">LeaveCellEventArgs object containing the event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OnEnterCell(FarPoint.Win.Spread.EnterCellEventArgs)">
            <summary>
            Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.EnterCell"/> event.
            </summary>
            <param name="e">EnterCellEventArgs object containing the event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OnDragDropBlock(FarPoint.Win.Spread.DragDropBlockEventArgs)">
            <summary>
            Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.DragDropBlock"/> event.
            </summary>
            <param name="e">DragDropBlockEventArgs object containing the event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OnDragDropBlockCompleted(FarPoint.Win.Spread.DragDropBlockCompletedEventArgs)">
            <summary>
            Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.DragDropBlockCompleted"/> event.
            </summary>
            <param name="e">DragDropBlockCompletedEventArgs object containing the event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OnDragFillBlockCompleted(FarPoint.Win.Spread.DragFillBlockCompletedEventArgs)">
            <summary>
            Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.DragFillBlockCompleted"/> event.
            </summary>
            <param name="e">DragFillBlockEventArgs object containing the event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OnColumnDragMove(FarPoint.Win.Spread.DragMoveEventArgs)">
            <summary>
            Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.ColumnDragMove"/> event.
            </summary>
            <param name="e">DragMoveEventArgs object containing the event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OnRowDragMove(FarPoint.Win.Spread.DragMoveEventArgs)">
            <summary>
            Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.RowDragMove"/> event.
            </summary>
            <param name="e">DragMoveEventArgs object containing the event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OnColumnDragMoveCompleted(FarPoint.Win.Spread.DragMoveCompletedEventArgs)">
            <summary>
            Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.ColumnDragMoveCompleted"/> event.
            </summary>
            <param name="e">DragMoveCompletedEventArgs object containing the event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OnRowDragMoveCompleted(FarPoint.Win.Spread.DragMoveCompletedEventArgs)">
            <summary>
            Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.RowDragMoveCompleted"/> event.
            </summary>
            <param name="e">DragMoveCompletedEventArgs object containing the event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OnDragFillBlock(FarPoint.Win.Spread.DragFillBlockEventArgs)">
            <summary>
            Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.DragFillBlock"/> event.
            </summary>
            <param name="e">DragFillBlockEventArgs object containing the event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OnPrintMessageBox(FarPoint.Win.Spread.PrintMessageBoxEventArgs)">
            <summary>
            Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.PrintMessageBox"/> event.
            </summary>
            <param name="e">PrintMessageBoxEventArgs object containing the event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OnPrintPreviewShowing(FarPoint.Win.Spread.PrintPreviewShowingEventArgs)">
            <summary>
            Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.PrintPreviewShowing"/> event.
            </summary>
            <param name="e">PrintPreviewShowingEventArgs object containing the event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OnPrintAbort(FarPoint.Win.Spread.PrintAbortEventArgs)">
            <summary>
            Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.PrintAbort"/> event.
            </summary>
            <param name="e">PrintAbortEventArgs object containing the event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OnPrintBackground(FarPoint.Win.Spread.PrintBackgroundEventArgs)">
            <summary>
            Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.PrintBackground"/> event.
            </summary>
            <param name="e">PrintBackgroundEventArgs object containing the event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OnPrintCancelled(FarPoint.Win.Spread.PrintCancelledEventArgs)">
            <summary>
            Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.PrintCancelled"/> event.
            </summary>
            <param name="e">PrintCancelledEventArgs object containing the event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OnButtonClicked(FarPoint.Win.Spread.EditorNotifyEventArgs)">
            <summary>
            Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.ButtonClicked"/> event.
            </summary>
            <param name="e">EditorNotifyEventArgs object containing the event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OnComboCloseUp(FarPoint.Win.Spread.EditorNotifyEventArgs)">
            <summary>
            Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.ComboCloseUp"/> event.
            </summary>
            <param name="e">EditorNotifyEventArgs object containing the event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OnComboDropDown(FarPoint.Win.Spread.EditorNotifyEventArgs)">
            <summary>
            Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.ComboDropDown"/> event.
            </summary>
            <param name="e">EditorNotifyEventArgs object containing event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OnSubEditorClosed(FarPoint.Win.Spread.SubEditorClosedEventArgs)">
            <summary>
            Raises the <see cref="!:FarPoint.Win.Spread.FpSpread.SubEditorClose"/> event.
            </summary>
            <param name="e">SubEditorClosedEventArgs object containing event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OnSubEditorOpening(FarPoint.Win.Spread.SubEditorOpeningEventArgs)">
            <summary>
            Raises the <see cref="!:FarPoint.Win.Spread.FpSpread.SubEditorOpen"/> event.
            </summary>
            <param name="e">SubEditorOpenEventArgs object containing event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OnSearchDialogClosing(System.ComponentModel.CancelEventArgs)">
            <summary>
            Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.SearchDialogClosing"/> event.
            </summary>
            <param name="e">SubEditorClosedEventArgs object containing event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OnExpand(FarPoint.Win.Spread.ExpandEventArgs)">
            <summary>
            Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.Expand"/> event.
            </summary>
            <param name="e">ExpandEventArgs object containing event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OnComboSelChange(FarPoint.Win.Spread.EditorNotifyEventArgs)">
            <summary>
            Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.ComboSelChange"/> event.
            </summary>
            <param name="e">EditorNotifyEventArgs object containing event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OnEditChange(FarPoint.Win.Spread.EditorNotifyEventArgs)">
            <summary>
            Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.EditChange"/> event.
            </summary>
            <param name="e">EditorNotifyEventArgs object containing event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OnEditError(FarPoint.Win.Spread.EditErrorEventArgs)">
            <summary>
            Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.EditError"/> event.
            </summary>
            <param name="e">EditErrorEventArgs object containing event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OnTopChange(FarPoint.Win.Spread.TopChangeEventArgs)">
            <summary>
            Raises the TopChange event. Internal use only.
            </summary>
            <param name="e">TopChangeEventArgs object containing event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OnLeftChange(FarPoint.Win.Spread.LeftChangeEventArgs)">
            <summary>
            Raises the LeftChange event. Internal use only.
            </summary>
            <param name="e">LeftChangeEventArgs object containing event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.FarPoint#Win#ISerializeSupport#Serialize(System.Xml.XmlTextWriter)">
            <summary>
            Saves the entire workbook to XML.
            </summary>
            <param name="w">XmlTextWriter object to which to save the workbook</param>
            <returns>true if successful; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.FarPoint#Win#ISerializeSettings#Serialize(System.Xml.XmlTextWriter)">
            <summary>
            Saves the workbook settings to XML.
            </summary>
            <param name="w">XmlTextWriter object to which to save the workbook settings</param>
            <returns>true if successful; false otherwise</returns>
            <remarks>
            This consists of the workbook (SpreadView) properties and the properties of each sheet(SheetView).
            </remarks>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.FarPoint#Win#ISerializeStyles#Serialize(System.Xml.XmlTextWriter)">
            <summary>
            Saves the named styles for all the sheets to XML.
            </summary>
            <param name="w">XmlTextWriter object to which to save the named styles</param>
            <returns>true if successful; false otherwise</returns>
            <remarks>
            This consists of the named styles for each sheet (SheetView).
            </remarks>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.FarPoint#Win#ISerializeData#Serialize(System.Xml.XmlTextWriter)">
            <summary>
            Saves all the data in all the sheets to XML.
            </summary>
            <param name="w">XmlTextWriter object to which to save the data</param>
            <returns>true if successful; false otherwise</returns>
            <remarks>
            This consists of the data models for each sheet.
            </remarks>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.FarPoint#Win#ISerializeData#Serialize(System.Xml.XmlTextWriter,System.Boolean)">
            <summary>
            Saves the specified data in all the sheets to XML.
            </summary>
            <param name="w">XmlTextWriter object to which to save the data</param>
            <param name="saveDataSource">Whether to save the data source and bound data</param>
            <returns>true if successful; false otherwise</returns>
            <remarks>
            Data consists of the data models for each sheet. 
            </remarks>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.FarPoint#Win#ISerializePresentation#Serialize(System.Xml.XmlTextWriter)">
            <summary>
            Saves the formatting information (or presentation) of all the sheets to XML.
            </summary>
            <param name="w">XmlTextWriter object to which to save the formatting information</param>
            <returns>true if successful; false otherwise</returns>
            <remarks>
            This consists of the axis models, span models, and style models for each sheet.
            </remarks>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.FarPoint#Win#ISerializeSupport#Deserialize(System.Xml.XmlNodeReader)">
            <summary>
            Loads the object from XML.
            </summary>
            <param name="r">XmlNodeReader from which to load the object</param>
            <returns>true if successful; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.FarPoint#Win#ISerializeSettings#Deserialize(System.Xml.XmlNodeReader)">
            <summary>
            Loads the settings from XML.
            </summary>
            <param name="r">XmlNodeReader from which to load the settings</param>
            <returns>true if successful; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.FarPoint#Win#ISerializeStyles#Deserialize(System.Xml.XmlNodeReader)">
            <summary>
            Loads the named styles from XML.
            </summary>
            <param name="r">XmlNodeReader from which to load the named styles</param>
            <returns>true if successful; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.FarPoint#Win#ISerializeData#Deserialize(System.Xml.XmlNodeReader)">
            <summary>
            Loads the data from XML.
            </summary>
            <param name="r">XmlNodeReader from which to load the data</param>
            <returns>true if successful; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.LoadFormulas(System.Boolean)">
            Loads formulas that are deserialized during deserialization. But, not parsing yet.
            This method is called after all the sheets has been created and deserialized.
            <summary>
            Loads formulas that are deserialized but not parsed yet, 
            to be used after all sheets have been created and deserialized.
            </summary>
            <param name="recalculate">Whether to recalculate all the formulas in cells on the sheet that have changed</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.FarPoint#Win#ISerializePresentation#Deserialize(System.Xml.XmlNodeReader)">
            <summary>
            Loads the formatting information (presentation) from XML.
            </summary>
            <param name="r">XmlNodeReader from which to load the formatting information</param>
            <returns>true if successful; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.FarPoint#Win#ISerializeDrawing#Serialize(System.Xml.XmlTextWriter)">
            <summary>
            Saves the drawing object information of all the sheets to XML.
            </summary>
            <param name="w">XmlTextWriter object to which to save the drawing information</param>
            <returns>true if successful; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.FarPoint#Win#ISerializeDrawing#Deserialize(System.Xml.XmlNodeReader)">
            <summary>
            Loads the drawing object information from XML.
            </summary>
            <param name="r">XmlNodeReader from which to load the drawing information</param>
            <returns>true if successful; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OnAutoSortingColumn(FarPoint.Win.Spread.AutoSortingColumnEventArgs)">
            <summary>
            Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.AutoSortingColumn"/> event.
            </summary>
            <param name="e">AutoSortingColumnEventArgs object containing the event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OnAutoSortedColumn(FarPoint.Win.Spread.AutoSortedColumnEventArgs)">
            <summary>
            Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.AutoSortedColumn"/> event.
            </summary>
            <param name="e">AutoSortedColumnEventArgs object containing the event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OnAutoFilteringColumn(FarPoint.Win.Spread.AutoFilteringColumnEventArgs)">
            <summary>
            Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.AutoFilteringColumn"/> event.
            </summary>
            <param name="e">AutoFilteringColumnEventArgs object containing the event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OnAutoFilteredColumn(FarPoint.Win.Spread.AutoFilteredColumnEventArgs)">
            <summary>
            Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.AutoFilteredColumn"/> event.
            </summary>
            <param name="e">AutoFilteredColumnEventArgs object containing the event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OnDataColumnConfigure(FarPoint.Win.Spread.DataColumnConfigureEventArgs)">
            <summary>
            Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.DataColumnConfigure"/> event.
            </summary>
            <param name="e">DataColumnConfigureEventArgs object containing the event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.SuspendLayout">
            <summary>
            Temporarily suspends the layout logic for this component.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.PerformLayout">
            <summary>
            Forces the component to apply layout logic to its child controls.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.PerformLayout(System.Windows.Forms.Control,System.String)">
            <summary>
            Forces the component to apply layout logic to the specified child control 
            for the specified property change.
            </summary>
            <param name="affectedControl">Child control</param>
            <param name="affectedProperty">Property that changed in the child control</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.ResumeLayout">
            <summary>
            Resumes normal layout logic.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.ResumeLayout(System.Boolean)">
            <summary>
            Resumes normal layout logic and optionally forces the component to apply layout logic 
            to its child controls.
            </summary>
            <param name="performLayout">Whether to perform layout logic on the child controls</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Internal use only.
            </summary>
            <param name="m">Message</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OnVisibleChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="!:FarPoint.Win.Spread.FpSpread.VisibleChanged"/> event.
            </summary>
            <param name="e">EventArgs event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.OnValidating(System.ComponentModel.CancelEventArgs)">
            <summary>
            Raises the <see cref="!:FarPoint.Win.Spread.FpSpread.Validating"/> event.
            </summary>
            <param name="e">CancelEventArgs event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.StartInkNotation">
            <summary>
            Starts ink notation in the active viewport if the Microsoft.Ink assembly is found in the GAC.
            </summary>
            Returns whether or not the method was successful.
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.StartInkNotation(System.Int32,System.Int32)">
            <summary>
            Starts ink notation in the specified viewport if the Microsoft.Ink assembly is found in the GAC.
            </summary>
            <param name="rowPaneIndex">viewport row index</param>
            <param name="columnPaneIndex">viewport column index</param>
            Returns whether or not the method was successful.
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.StartInkNotation(System.Drawing.Color,System.Int32)">
            <summary>
            Starts ink notation in the active viewport with the specified notation background color, if the Microsoft.Ink assembly is found in the GAC.
            </summary>
            <param name="inkBackColor">background color for the notation viewport</param>
            <param name="alphaBlend">alphablending value for the notation viewport</param>
            Returns whether or not the method was successful.
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.StartInkNotation(System.Int32,System.Int32,System.Drawing.Color,System.Int32)">
            <summary>
            Starts ink notation in the specified viewport with the specified notation background color, if the Microsoft.Ink assembly is found in the GAC.
            </summary>
            <param name="rowPaneIndex">viewport row index</param>
            <param name="columnPaneIndex">viewport column index</param>
            <param name="inkBackColor">background color for the notation viewport</param>
            <param name="alphaBlend">alphablending value for the notation viewport</param>
            Returns whether or not the method was successful.
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.RootWorkbook">
            <summary>
            Gets or sets the main view (SpreadView object).
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.SearchDialog">
            <summary>
            Gets the dialog associated with searching for text in a cell 
            of a sheet in this component.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.SearchDialogPriv">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.ActiveWindowlessObject">
            <summary>
            Gets and sets the active windowless shape object of the component.
            </summary>  
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.SkipMouseProcessing">
            <summary>
            Sets the mouse processing flag of the component.
            </summary>  
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.About">
            <summary>
            Displays information about the component. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.SheetCount">
            <summary>
            Gets or sets the number of sheets in the fpSpread component.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.Sheets">
            <summary>
            Gets the sheets (<see cref="T:FarPoint.Win.Spread.SheetView"/> objects) in the component.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.ActiveSheet">
            <summary>
            Gets or sets the active sheet in the component.
            </summary>
            <exception cref="T:System.ArgumentException">
            Specified sheet is not in the collection
            </exception>
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.ActiveSheetIndex">
            <summary>
            Gets or sets the index of the active sheet in the component.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.NamedStyles">
            <summary>
            Gets or sets a pre-defined style (<see cref="T:FarPoint.Win.Spread.NamedStyleCollection"/> object).
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.DataSource">
            <summary>
            Gets or sets the name of the data source that populates the active sheet 
            in this component. 
            </summary>
            <exception cref="T:System.InvalidOperationException">
            Sheet count is zero; must be at least one sheet before DataSource can be set
            </exception>
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.DataMember">
            <summary>
            Gets or sets the name of the data member that populates the active sheet 
            in this component. 
            </summary>
            <exception cref="T:System.InvalidOperationException">
            Sheet count is zero; must be at least one sheet before the data member can be set
            </exception>
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.DataModel">
            <summary>
            Gets or sets the data model associated with this component.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.RowHeaderDataModel">
            <summary>
            Gets or sets the data model associated with this component.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.ColumnHeaderDataModel">
            <summary>
            Gets or sets the data model associated with this component.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.RowHeaderStyleModel">
            <summary>
            Gets or sets the style model associated with this component.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.ColumnHeaderStyleModel">
            <summary>
            Gets or sets the style model associated with this component.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.SpanModel">
            <summary>
            Gets or sets the span model associated with this component.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.RowHeaderSpanModel">
            <summary>
            Gets or sets the span model associated with this component.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.ColumnHeaderSpanModel">
            <summary>
            Gets or sets the span model associated with this component.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.RowAxisModel">
            <summary>
            Gets or sets the axis model associated with this component.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.ColumnAxisModel">
            <summary>
            Gets or sets the axis model associated with this component.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.RowHeaderColumnAxisModel">
            <summary>
            Gets or sets the axis model associated with this component.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.ColumnHeaderRowAxisModel">
            <summary>
            Gets or sets the axis model associated with this component.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.SelectionModel">
            <summary>
            Gets or sets the selection model associated with this component.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.CreateParams">
            <summary>
            Gets the required creation parameters when the component handle is created.
            </summary>    
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.DefaultSize">
            <summary>
            Gets the default size of the component.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.BorderStyle">
            <summary>
            Gets or sets the style of the border around the component.
            </summary>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            Specified value is not a valid border style
            </exception>
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.HorizontalScrollBarPolicy">
            <summary>
            Gets or sets when to display the horizontal scroll bars in this component.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.AllowCellOverflow">
            <summary>
            Gets or sets whether data can overflow into adjacent empty cells in the component. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.AllowDragDrop">
            <summary>
            Gets or sets whether to allow the user to drag-and-drop a range of cells 
            in the component.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.AllowColumnMove">
            <summary>
            Gets or sets whether to allow the user to move columns.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.AllowRowMove">
            <summary>
            Gets or sets whether to allow the user to move rows.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.AllowDragFill">
            <summary>
            Gets or sets whether to allow the user to drag and fill cells in the component  
            with the contents of a cell or cells.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.AllowEditOverflow">
            <summary>
            Gets or sets whether data can overflow into adjacent empty cells 
            in the component while that cell is in edit mode. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.TextTipPolicy">
            <summary>
            Gets or sets whether to display text tips and cell notes 
            and the location of the tips and notes in this component. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.TextTipDelay">
            <summary>
            Gets or sets the time (in milliseconds) the component waits before displaying 
            the text tip for the cell or header under the pointer.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.TextTipAppearance">
            <summary>
            Gets or sets the appearance of text tips in the view.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.AllowUserFormulas">
            <summary>
            Gets or sets whether to allow the user to enter formulas in a cell in the component.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.EnableCrossSheetReference">
            <summary>
            Enables cross-sheet referencing for this component.
            </summary>    
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.AutoClipboard">
            <summary>
            Gets or sets whether the component handles the shortcut keys for Clipboard actions.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.BorderCollapse">
            <summary>
            Gets or sets whether adjacent cell borders are collapsed into a single line 
            for cells in the component.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.VisualStyles">
            <summary>
            Gets or sets whether to use visual styles when rendering objects in the component.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.ButtonDrawMode">
            <summary>
            Gets or sets whether to display buttons in button and combo box cells 
            in the component.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.CellNoteIndicatorVisible">
            <summary>
            Gets or sets whether the cell note indicator appears in cells in the component.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.ClipboardOptions">
            <summary>
            Gets or sets whether headers are included when data is copied to or  
            pasted from the Clipboard in the component.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.EditModePermanent">
            <summary>
            Gets or sets whether edit mode remains on for any cell in the component 
            when that cell becomes active.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.EditMode">
            <summary>
            Gets or sets whether the active cell in the component is in edit mode.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.EditModeReplace">
            <summary>
            Gets or sets whether the existing contents of a cell in the component  
            are selected when that cell enters edit mode.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.EditingControl">
            <summary>
            Gets the Control object editing the active cell, or null if the component is not in edit mode.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.LeftTab">
            <summary>
            Gets or sets the leftmost sheet tab of the component.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.MoveActiveOnFocus">
            <summary>
            Gets or sets whether the location of the active cell moves when the user moves 
            the focus to the view using the mouse.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.RetainSelectionBlock">
            <summary>
            Gets or sets whether the selected range of cells remains highlighted 
            when the component loses the focus.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.SelectionRenderer">
            <summary>
            Gets or sets the selection renderer for drawing selections in the component.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.FocusRenderer">
            <summary>
            Gets or sets the focus indicator renderer for drawing the focus rectangle 
            in the component.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.SelectionBlockOptions">
            <summary>
            Gets or sets which type of selections in the component the user can make.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.ScrollBarTrackPolicy">
            <summary>
            Gets or sets whether the sheet in the component scrolls when the user moves the scroll box.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.ScrollTipPolicy">
            <summary>
            Gets or sets whether scroll tips appear when the user moves the scroll box 
            in the component.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.ScrollBarMaxAlign">
            <summary>
            Gets or sets whether the scroll bar aligns with the last row and column 
            of the active sheet in the component.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.ScrollBarShowMax">
            <summary>
            Gets or sets whether the displayed scroll bars are based on the  
            entire number of columns and rows in the sheet.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.VerticalScrollBarPolicy">
            <summary>
            Gets or sets when to display the vertical scroll bars in this component.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.TabStrip">
            <summary>
            Gets the object representing the tab strip for this component.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.TabStripPlacement">
            <summary>
            Gets or sets the location of the tab strip.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.TabStripPolicy">
            <summary>
            Gets or sets the display policy for the sheet tab strip for this component.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.TabStripRatio">
            <summary>
            Gets or sets the width of the tab strip for this component expressed 
            as a percentage of the overall horizontal scroll bar width.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.ColumnSplitBoxPolicy">
            <summary>
            Gets or sets the display policy for the column split box for this component.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.ColumnSplitBoxAlignment">
            <summary>
            Gets or sets the alignment of the column split box relative
            to the horizontal scroll bar for this component.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.RowSplitBoxPolicy">
            <summary>
            Gets or sets the display policy of the row split box in this component.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.RowSplitBoxAlignment">
            <summary>
            Gets or sets the alignment of the row split box relative
            to the vertical scroll bar for this component.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.FpSpread.EditModeStarting">
            <summary>
            Occurs when edit mode is about to start in the active sheet's active cell.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.FpSpread.EditModeOn">
            <summary>
            Occurs when edit mode is started.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.FpSpread.EditModeOff">
            <summary>
            Occurs when edit mode is stopped.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.ZoomFactor">
            <summary>
            Gets or sets the scaling factor of the display of the active sheet in this component.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.FpSpread.ClipboardPasting">
            <summary>
            Occurs when the user pastes from the clipboard.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.FpSpread.SheetTabClick">
            <summary>
            Occurs when the user clicks the sheet tab.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.FpSpread.SheetTabDoubleClick">
            <summary>
            Occurs when the user double clicks the sheet tab.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.FpSpread.ActiveSheetChanging">
            <summary>
            Occurs when the user changes the active sheet.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.FpSpread.ActiveSheetChanged">
            <summary>
            Occurs when the user has changed the active sheet.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.FpSpread.RowHeightChanged">
            <summary>
            Occurs when the row height has changed.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.FpSpread.ColumnWidthChanged">
            <summary>
            Occurs when the column width has changed.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.FpSpread.RowViewportHeightChanged">
            <summary>
            Occurs when a viewport row height has changed.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.FpSpread.ColumnViewportWidthChanged">
            <summary>
            Occurs when a viewport column width has changed.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.FpSpread.SelectionChanged">
            <summary>
            Occurs when the selection of cells on the sheet is changed.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.FpSpread.SelectionChanging">
            <summary>
            Occurs when the selection of cells on the sheet is changing.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.FpSpread.UserFormulaEntered">
            <summary>
            Occurs when the user types a formula.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.FpSpread.Change">
            <summary>
            Occurs after the user modifies data in a cell.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.FpSpread.DragDropBlock">
            <summary>
            Occurs when the user drags and drops a range of cells.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.FpSpread.DragFillBlock">
            <summary>
            Occurs when the user drags to fill a range of cells.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.FpSpread.DragDropBlockCompleted">
            <summary>
            Occurs at the completion of the user dragging and dropping a range of cells.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.FpSpread.DragFillBlockCompleted">
            <summary>
            Occurs at the completion of the user dragging to fill a range of cells.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.FpSpread.ColumnDragMove">
            <summary>
            Occurs when <see cref="P:FarPoint.Win.Spread.FpSpread.AllowColumnMove"/> is true and the user drags to move a column.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.FpSpread.RowDragMove">
            <summary>
            Occurs when <see cref="P:FarPoint.Win.Spread.FpSpread.AllowRowMove"/> is true and the user drags to move a row.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.FpSpread.ColumnDragMoveCompleted">
            <summary>
            Occurs when the user finishes dragging to move a column.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.FpSpread.RowDragMoveCompleted">
            <summary>
            Occurs when the user finishes dragging to move a row.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.FpSpread.Advance">
            <summary>
            Occurs when the user tries to advance from first or last row in Spread.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.FpSpread.PrintAbort">
            <summary>
            Occurs continually as printing occurs in order to give the user the opportunity to discontinue a print job.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.FpSpread.PrintMessageBox">
            <summary>
            Occurs before and after a print job.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.FpSpread.PrintBackground">
            <summary>
            Occurs before each page is printed.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.FpSpread.PrintCancelled">
            <summary>
            Occurs when a print job is discontinued by the user.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.FpSpread.PrintPreviewShowing">
            <summary>
            Occurs before preview dialog appears.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.FpSpread.LeaveCell">
            <summary>
            Occurs when the user leaves a cell.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.FpSpread.EnterCell">
            <summary>
            Occurs when the user enters a cell.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.FpSpread.TextTipFetch">
            <summary>
            Occurs when the pointer (cursor) is over a cell and the text tip or cell note 
            should be displayed (the TextTip property is set to a value other than Off).
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.FpSpread.CellClick">
            Note that CellClick fires when the mouse button is pressed, not when it is released.
            <summary>
            Occurs when the user presses down the left mouse button in a cell.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.FpSpread.CellDoubleClick">
            Note that CellDoubleClick fires when the mouse button is pressed, not when it is released.
            <summary>
            Occurs when the user presses down the left mouse button twice (double clicks) in a cell.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.FpSpread.ButtonClicked">
            <summary>
            Occurs when the user clicks a button, check box, or hyperlink in a cell.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.FpSpread.ComboCloseUp">
            <summary>
            Occurs when the user closes a combo box in a cell.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.FpSpread.ComboDropDown">
            <summary>
            Occurs when the user drops down a combo box in a cell.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.FpSpread.ComboSelChange">
            <summary>
            Occurs when the user changes the selection in a combo box in a cell.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.FpSpread.EditChange">
            <summary>
            Occurs when the user changes the text in a cell in edit mode.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.FpSpread.EditError">
            <summary>
            Occurs when the user performs an invalid input operation.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.FpSpread.TopChange">
            <summary>
            Occurs when the top row changes.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.FpSpread.LeftChange">
            <summary>
            Occurs when left column changes.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.FpSpread.Expand">
            <summary>
            Occurs when a row is expanded or collapsed.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.FpSpread.SubEditorClosed">
            <summary>
            Occurs when a subeditor is closed for a cell.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.FpSpread.SubEditorOpening">
            <summary>
            Occurs when a subeditor is about to be displayed.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.FpSpread.ChildWorkbookCreated">
            <summary>
            Occurs when a child workbook of the Spread component is created.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.FpSpread.ClipboardChanging">
            <summary>
            Occurs when the clipboard is changing through a Spread action.  
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.FpSpread.UserZooming">
            <summary>
            Occurs when the user zooms.  
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.FpSpread.ShapeActivated">
            <summary>
            Occurs when the user changes the active shape object.  
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.FpSpread.ChildViewCreated">
            <summary>
            Occurs when a child view of the Spread component is created.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.FpSpread.ScrollTipFetch">
            <summary>
            Occurs when the spread is scrolled.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.FpSpread.SearchDialogClosing">
            <summary>
            Occurs when the search form is closing. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.Cursor">
            <summary>
            Gets or sets the pointer to display in this component.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.Text">
            <summary>
            Not supported in this component. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.Font">
            <summary>
            Gets or sets the default Font for sheets in the component.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.ForeColor">
            <summary>
            Not supported in this component. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.Tag">
            <summary>
            Gets or sets extra data for the application for this component.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.HorizontalScrollBarHeight">
            <summary>
            Gets or sets the height of horizontal scroll bars in this component.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.VerticalScrollBarWidth">
            <summary>
            Gets or sets the width of vertical scroll bars in this component.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.AllowUserZoom">
            <summary>
            Gets or sets whether the user can scale the display of the component 
            using the Ctrl key and the mouse wheel.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.FpSpread.AutoSortingColumn">
            <summary>
            Occurs when a column is about to be automatically sorted.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.FpSpread.AutoSortedColumn">
            <summary>
            Occurs when a column has just been automatically sorted.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.FpSpread.AutoFilteringColumn">
            <summary>
            Occurs when a column is about to be automatically filtered.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.FpSpread.AutoFilteredColumn">
            <summary>
            Occurs when a column has just been automatically filtered.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.FpSpread.DataColumnConfigure">
            <summary>
            Occurs when the sheet is binding a column to a data source after it has been initialized.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.IsLayoutSuspended">
            <summary>
            Returns whether the layout is suspended in this component.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FpSpread.BackgroundImage">
            <summary>
            Gets or sets the image to paint in the background of the component.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.FpSpread.ButtonDrawModeEditor">
            <summary>
            Editor for the ButtonDrawMode property.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.ButtonDrawModeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits the cell type value.
            </summary>
            <param name="context">ITypeDescriptorContext</param>
            <param name="provider">IServiceProvider</param>
            <param name="value">object</param>
            <returns>object</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.ButtonDrawModeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets the style of the type editor (which is drop-down).
            </summary>
            <param name="context">ITypeDescriptorContext</param>
            <returns>UITypeEditorEditStyle</returns>
        </member>
        <member name="T:FarPoint.Win.Spread.FpSpread.SelectBlockOptionsEditor">
            <summary>
            Editor for the SelectBlockOptions property.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.SelectBlockOptionsEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits the cell type value.
            </summary>
            <param name="context">ITypeDescriptorContext</param>
            <param name="provider">IServiceProvider</param>
            <param name="value">object</param>
            <returns>object</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.FpSpread.SelectBlockOptionsEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets the style of the type editor (which is drop-down).
            </summary>
            <param name="context">ITypeDescriptorContext</param>
            <returns>UITypeEditorEditStyle</returns>
        </member>
        <member name="P:FarPoint.Win.Spread.SpreadDesigner.Verbs">
            <summary>
            DesignerVerbCollection: Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.ActiveSheetEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits the cell type value.
            </summary>
            <param name="context">ITypeDescriptorContext</param>
            <param name="provider">IServiceProvider</param>
            <param name="value">object</param>
            <returns>object</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.ActiveSheetEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets the style of the type editor (which is drop-down).
            </summary>
            <param name="context">ITypeDescriptorContext</param>
            <returns>UITypeEditorEditStyle</returns>
        </member>
        <member name="T:FarPoint.Win.Spread.AutoSortingColumnEventHandler">
            <summary>
            Represents a defined method that handles the AutoSortingColumn event for the fpSpread component.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.AutoSortingColumnEventArgs">
            <summary>
            Represents the event data for the AutoSortingColumn event for the fpSpread component, 
            which occurs when columns are being automatically sorted.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.AutoSortingColumnEventArgs.#ctor(FarPoint.Win.Spread.SheetView,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Creates a new AutoSortingColumnEventArgs object.
            </summary>
            <param name="sheetView">Sheet (SheetView object) to be automatically sorted</param>
            <param name="column">Index of the column to be used as the key for automatic sort</param>
            <param name="ascending">Whether the automatic sort is ascending</param>
            <param name="showIndicator">Whether to display the sort indicator</param>
        </member>
        <member name="P:FarPoint.Win.Spread.AutoSortingColumnEventArgs.Ascending">
            <summary>
            Gets or sets whether the automatic sort is ascending.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.AutoSortingColumnEventArgs.Cancel">
            <summary>
            Gets or sets whether to cancel the default processing of automatically sorting columns.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.AutoSortingColumnEventArgs.Column">
            <summary>
            Gets the index of the column to be automatically sorted.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.AutoSortingColumnEventArgs.Sheet">
            <summary>
            Gets the sheet whose rows are to be automatically sorted.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.AutoSortingColumnEventArgs.ShowIndicator">
            <summary>
            Gets whether the sort indicator is displayed.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.AutoSortedColumnEventHandler">
            <summary>
            Represents a defined method that handles the AutoSortedColumn event for the fpSpread component.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.AutoSortedColumnEventArgs">
            <summary>
            Represents the event data for the AutoSortedColumn event for the fpSpread component,
            which occurs when the column has been automatically sorted.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.AutoSortedColumnEventArgs.#ctor(FarPoint.Win.Spread.SheetView,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Creates a new AutoSortedColumnEventArgs object.
            </summary>
            <param name="sheetView">Sheet (SheetView object) that was automatically sorted</param>
            <param name="column">Index of the column that was used as the key column for the automatic sort</param>
            <param name="ascending">Whether the automatic sort was ascending</param>
            <param name="showIndicator">Whether the sort indicator was displayed</param>
        </member>
        <member name="P:FarPoint.Win.Spread.AutoSortedColumnEventArgs.Ascending">
            <summary>
            Gets whether the automatic sort was ascending.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.AutoSortedColumnEventArgs.Column">
            <summary>
            Gets the index of the column that was automatically sorted.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.AutoSortedColumnEventArgs.Sheet">
            <summary>
            Gets the sheet whose rows were just automatically sorted.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.AutoSortedColumnEventArgs.ShowIndicator">
            <summary>
            Gets whether the sort indicator was displayed.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.AutoFilteringColumnEventHandler">
            <summary>
            Represents a defined method that handles the AutoFilteringColumn event for the fpSpread component.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.AutoFilteringColumnEventArgs">
            <summary>
            Represents the event data for the AutoFilteringColumn event for the fpSpread component, 
            which occurs when columns are being automatically filtered.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.AutoFilteringColumnEventArgs.#ctor(FarPoint.Win.Spread.SheetView,System.Int32,System.String)">
            <summary>
            Creates a new AutoFilteringColumnEventArgs object.
            </summary>
            <param name="sheetView">Sheet (SheetView object) to be automatically sorted</param>
            <param name="column">Index of the column to be used</param>
            <param name="filterString">String to be used to filter the column</param>
        </member>
        <member name="P:FarPoint.Win.Spread.AutoFilteringColumnEventArgs.FilterString">
            <summary>
            Gets or sets the string to filter the column by.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.AutoFilteringColumnEventArgs.Cancel">
            <summary>
            Gets or sets whether to cancel the default processing of automatically filtering columns.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.AutoFilteringColumnEventArgs.Column">
            <summary>
            Gets the index of the column to be automatically filtered.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.AutoFilteringColumnEventArgs.Sheet">
            <summary>
            Gets the sheet whose rows are to be automatically filtered.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.AutoFilteredColumnEventHandler">
            <summary>
            Represents a defined method that handles the AutoFilteredColumn event for the fpSpread component.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.AutoFilteredColumnEventArgs">
            <summary>
            Represents the event data for the AutoFilteredColumn event for the fpSpread component,
            which occurs when the column has been automatically filtered.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.AutoFilteredColumnEventArgs.#ctor(FarPoint.Win.Spread.SheetView,System.Int32,System.String)">
            <summary>
            Creates a new AutoFilteredColumnEventArgs object.
            </summary>
            <param name="sheetView">Sheet (SheetView object) that was automatically filtered</param>
            <param name="column">Index of the column that was automatically filtered</param>
            <param name="filterString">String to be used to filter the column</param>
        </member>
        <member name="P:FarPoint.Win.Spread.AutoFilteredColumnEventArgs.FilterString">
            <summary>
            Gets the string the column was filtered by.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.AutoFilteredColumnEventArgs.Column">
            <summary>
            Gets the index of the column that was automatically filtered.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.AutoFilteredColumnEventArgs.Sheet">
            <summary>
            Gets the sheet whose rows were just automatically filtered.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.DataColumnConfigureEventHandler">
            <summary>
            Represents a defined method that handles the DataColumnConfigure event for the fpSpread component.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.DataColumnConfigureEventArgs">
            <summary>
            Represents the event data for the DataColumnConfigure event, 
            which occurs when the column is being configured for data binding.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DataColumnConfigureEventArgs.#ctor(FarPoint.Win.Spread.SheetView,System.Int32)">
            <summary>
            Creates a new DataColumnConfigureEventArgs object.
            </summary>
            <param name="sheetView">Sheet (<see cref="T:FarPoint.Win.Spread.SheetView"/> object) that is binding to a data source</param>
            <param name="column">Index of the column that was just configured</param>
        </member>
        <member name="P:FarPoint.Win.Spread.DataColumnConfigureEventArgs.Column">
            <summary>
            Gets the index of the column that was just configured.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DataColumnConfigureEventArgs.Sheet">
            <summary>
            Gets the sheet (SheetView object) that is binding to a data source.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.EditModeStartingEventHandler">
            <summary>
            Represents a defined method that handles the EditModeStarting event for the fpSpread component.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.EditModeStartingEventArgs">
            <summary>
            Represents the event data for the EditModeOn event for the fpSpread component, 
            which occurs when edit mode is starting.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.EditModeStartingEventArgs.#ctor(System.Boolean)">
            <summary>
            Creates a EditModeStartingEventArgs object.
            </summary>
            <param name="editFormula">True if a cell formula will be edited; false if a cell value will be edited</param>
        </member>
        <member name="P:FarPoint.Win.Spread.EditModeStartingEventArgs.EditFormula">
            <summary>
            Gets or sets whether the formula for the cell should be edited.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.Model.Tokenizer">
            <summary>
            The class breaks a string into tokens. 
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.Tokenizer.#ctor(System.String)">
            <summary>
            Constructs a tokenizer for the specified string.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.Tokenizer.StartsWithDelimiter(System.String,System.Int32)">
            <summary>
            Determines whether the string begins with a delimiter at
            the specified offset.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.Tokenizer.StartsWithError(System.String,System.Int32)">
            <summary>
            Determines whether the string begins with an error value
            at the specified offset.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.Tokenizer.MoveNext">
            <summary>
            Advances to the next token.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.Tokenizer.PushBack">
            <summary>
            Backs up to the beginning of the current token.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.Tokenizer.Current">
            <summary>
            Returns the current token.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.Tokenizer.CurrentOffset">
            <summary>
            Returns the current token.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.SortInfo">
            <summary>
            Represents the information related to sorting columns, 
            rows, or a range of cells.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SortInfo.#ctor(System.Int32,System.Boolean)">
            <summary>
            Creates a SortInfo object with the order specified and the comparison done 
            using the system default comparer.
            </summary>
            <param name="index">Index of the column or row on which to sort</param>
            <param name="ascending">Whether sort order is ascending</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SortInfo.#ctor(System.Int32,System.Boolean,System.Collections.IComparer)">
            <summary>
            Creates a SortInfo object with the order specified and the comparison done 
            according to the specified comparer.
            </summary>
            <param name="index">Index of the column or row on which to sort</param>
            <param name="ascending">Whether sort order is ascending</param>
            <param name="comparer">IComparer object for method of comparison</param>
        </member>
        <member name="P:FarPoint.Win.Spread.SortInfo.Index">
            <summary>
            Gets or sets the index of the column or row on which to sort.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SortInfo.Ascending">
            <summary>
            Gets or sets whether the sort order is ascending.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SortInfo.Comparer">
            <summary>
            Gets or sets the IComparer object for method of comparison.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.SortImp">
            <summary>
            Implements sorting.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SortImp.QuickSort(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,FarPoint.Win.Spread.SortInfo[])">
            <summary>
            Performs a quick sort on the specified range and returns an array of new
            model row or column indexes for the range.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SortImp.RangeContainsSpans(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Determines whether the specified range contains cell spans. 
            Returns true if the specified range contains cell spans.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadSortComparer._SortCompare(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Performs the comparison of rows or columns using the specified order and comparer,
            or using the default comparer if one was not specified.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SerializationStatusDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SerializationStatusDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SerializationStatusDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.Action">
            <summary>
            Abstract class used to implemented actions.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Action.PerformAction(System.Object)">
            <summary>
            Invoked when an action occurs.
            </summary>
            <param name="sender">Object on which the action occurred</param>
        </member>
        <member name="T:FarPoint.Win.Spread.StyleNameConverter">
            <summary>
            Provides a drop-down list of style names for the StyleName property in the Cell, Column, Row, and AlternatingRow classes.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleNameConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Retrieves the set of standard values for this type.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleNameConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Determines whether this object supports standard values.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleNameConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether the specified type can be converted to a border object.
            </summary>
            <param name="context">ITypeDescriptorContext</param>
            <param name="sourceType">Type</param>
            <returns>True if sourceType is String, false otherwise.</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleNameConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts a string to a new border object.
            </summary>
            <param name="context">ITypeDescriptorContext</param>
            <param name="culture">CultureInfo</param>
            <param name="value">object</param>
            <returns>A new border object.</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleNameConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the border object to a string.
            </summary>
            <param name="context">ITypeDescriptorContext</param>
            <param name="culture">CultureInfo</param>
            <param name="value">object</param>
            <param name="destinationType">Type</param>
            <returns>String representation of a border object.</returns>
        </member>
        <member name="T:FarPoint.Win.Spread.ParentStyleNameConverter">
            <summary>
            Provides a drop-down list of parent style names for the ParentStyleName property in the Cell, Column, Row, and AlternatingRow classes.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.ParentStyleNameConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Retrieves the set of standard values for this type.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.ParentStyleNameConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Determines whether this object supports standard values.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.ParentStyleNameConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether the specified type can be converted to a border object.
            </summary>
            <param name="context">ITypeDescriptorContext</param>
            <param name="sourceType">Type</param>
            <returns>True if sourceType is String, false otherwise.</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.ParentStyleNameConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts a string to a new border object.
            </summary>
            <param name="context">ITypeDescriptorContext</param>
            <param name="culture">CultureInfo</param>
            <param name="value">object</param>
            <returns>A new border object.</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.ParentStyleNameConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the border object to a string.
            </summary>
            <param name="context">ITypeDescriptorContext</param>
            <param name="culture">CultureInfo</param>
            <param name="value">object</param>
            <param name="destinationType">Type</param>
            <returns>String representation of a border object.</returns>
        </member>
        <member name="T:FarPoint.Win.Spread.RowHeader">
            <summary>
            Represents the row header portion of the control. 
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.RowHeader.ShouldSerializeHorizontalGridLine">
            <summary>
            Gets whether HorizontalGridLine should be serialized.
            </summary>
            <returns>True if HorizontalGridLine should be serialized, and false otherwise.</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.RowHeader.ShouldSerializeVerticalGridLine">
            <summary>
            Gets whether VerticalGridLine should be serialized.
            </summary>
            <returns>True if VerticalGridLine should be serialized, and false otherwise.</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.RowHeader.ShouldSerializeDefaultStyle">
            <summary>
            Gets whether the DefaultStyle property should be serialized.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Spread.RowHeader.GetClip(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets a tab-delimited string containing the formatted text in a range.
            </summary>
            <param name="row">Starting row index, or -1 for all rows</param>
            <param name="column">Starting row header column index, or -1 for all row header columns</param>
            <param name="rowCount">Number of rows, or -1 for all rows</param>
            <param name="columnCount">Number of row header columns, or -1 for all row header columns</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified row index is out of range; must be between -1 and the total number of rows
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified column index is out of range; must be between -1 and the total number of columns
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.RowHeader.GetClipValue(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets a tab-delimited string containing the unformatted text in a range.
            </summary>
            <param name="row">Starting row index, or -1 for all rows</param>
            <param name="column">Starting row header column index, or -1 for all row header columns</param>
            <param name="rowCount">Number of rows, or -1 for all rows</param>
            <param name="columnCount">Number of row header columns, or -1 for all row header columns</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified row index is out of range; must be between -1 and the total number of rows
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified column index is out of range; must be between -1 and the total number of columns
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.RowHeader.SetClip(System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Sets a tab-delimited string containing the formatted text in a range.
            </summary>
            <param name="row">Starting row index, or -1 for all rows</param>
            <param name="column">Starting row header column index, or -1 for all row header columns</param>
            <param name="rowCount">Number of rows, or -1 for all rows</param>
            <param name="columnCount">Number of row header columns, or -1 for all row header columns (may create new row header columns as needed)</param>
            <param name="value">Tab-delimited string to set into the range</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified row index is out of range; must be between -1 and the total number of rows
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified column index is out of range; must be between -1 and the total number of columns
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.RowHeader.SetClipValue(System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Sets a tab-delimited string containing the unformatted text in a range.
            </summary>
            <param name="row">Starting row index, or -1 for all rows</param>
            <param name="column">Starting row header column index, or -1 for all row header columns</param>
            <param name="rowCount">Number of rows, or -1 for all rows</param>
            <param name="columnCount">Number of row header columns, or -1 for all row header columns (may create new row header columns as needed)</param>
            <param name="value">Tab-delimited string to set into the range</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified row index is out of range; must be between -1 and the total number of rows
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified column index is out of range; must be between -1 and the total number of columns
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.RowHeader.ToString">
            <summary>
            Gets a string containing a reference to the row header. (Always returns null.)
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.RowHeader.Cells">
            <summary>
            Gets a Cells object for the cells in the row header.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.RowHeader.Columns">
            <summary>
            Gets a Columns object for the columns in the row header.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.RowHeader.Rows">
            <summary>
            Gets a Rows object for the rows in the row header.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.RowHeader.AlternatingRows">
            <summary>
            Gets the alternating rows information for the row header.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.RowHeader.DefaultStyle">
            <summary>
            Gets or sets the default style for the cells in the row header. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.RowHeader.DefaultStyleName">
            <summary>
            Gets or sets the name of the default style for the row header.
            </summary>
            <exception cref="T:System.ArgumentException">Specified style (NamedStyle object) could not be found in the collection</exception>
        </member>
        <member name="P:FarPoint.Win.Spread.RowHeader.AutoText">
            <summary>
            Gets or sets whether the row header displays letters or numbers 
            or is blank. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.RowHeader.HorizontalGridLine">
            <summary>
            Gets or sets the horizontal grid line in the row header.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.RowHeader.VerticalGridLine">
            <summary>
            Gets or sets the vertical grid line in the row header.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.RowHeader.AutoTextIndex">
            <summary>
            Gets or sets which row header column displays the automatic text 
            when there are multiple row header columns.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.RowHeader.Visible">
            <summary>
            Gets or sets whether the row header is visible.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.RowHeader.ColumnCount">
            <summary>
            Gets or sets the number of columns in the row header. 
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified column count is less than 0 or greater than 256.
            </exception>
        </member>
        <member name="T:FarPoint.Win.Spread.Ptg">
            <summary>
            Excel Parsed Thing (ptg) defines.  
            These values are used as tokens for parsing Excel Formula buffers.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.Xlf">
            <summary>
            Excel Function (xlf) defines.  
            These values are unique identifiers used when parsing Excel Formula buffers to determine the current function being referenced.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.ExcelFormula.#ctor">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.ExcelFormula.#ctor(System.Int32,System.Int32,System.Int32,System.Collections.ArrayList,System.Collections.ArrayList,System.Collections.ArrayList)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.ExcelFormula.#ctor(System.IO.BinaryReader)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.ExcelFormula.#ctor(System.IO.BinaryReader,System.IO.BinaryReader,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.ExcelFormula.ToString(System.Collections.ArrayList,System.Collections.ArrayList,FarPoint.Win.Spread.SharedFormulaList,System.Collections.ArrayList,FarPoint.CalcEngine.CalcError@)">
            <summary>
            Internal use only.
            Convert the Excel Parsed Thing (Ptg) stream into a formula string
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.ExcelFormula.ToString(System.Collections.ArrayList,System.Collections.ArrayList,FarPoint.Win.Spread.SharedFormulaList,System.Collections.ArrayList,FarPoint.CalcEngine.CalcError@,System.Int32@)">
            <summary>
            Internal use only.
            Convert the Excel Parsed Thing (Ptg) stream into a formula string
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.ExcelFormula.AddParsedElement(System.Collections.ArrayList,System.Byte[]@)">
            <summary>
            internal use
            </summary>
            <param name="list"></param>
            <param name="b"></param>
        </member>
        <member name="M:FarPoint.Win.Spread.ExcelFormula.ToExcelParsedFormula(System.Int16,FarPoint.CalcEngine.Expression,System.Collections.ArrayList,System.Collections.ArrayList)">
            <summary>
            
            </summary>
            <param name="sheetIndex"></param>
            <param name="expr"></param>
            <param name="externNames"></param>
            <param name="externSheetSources"></param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Spread.ExcelFormula.ToParsedFormula(FarPoint.CalcEngine.Expression,System.Collections.ArrayList,System.Collections.ArrayList,FarPoint.Win.Spread.ExcelFormula.TokenClass)">
            <summary>
            Convert the Calc Engine expression tree into an Excel parsed formula.
            </summary>
            <param name="expr"></param>
            <param name="externNames"></param>
            <param name="externSheetSources"></param>
            <param name="tokenClass"></param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Spread.ExcelFormula.ParseFormulaElement(System.Object,System.Collections.ArrayList,System.Collections.ArrayList,System.Collections.ArrayList,FarPoint.Win.Spread.ExcelFormula.TokenClass)">
            <summary>
            ParseFormulaElement
            </summary>
            <param name="exprItem"></param>
            <param name="fnParams"></param>
            <param name="externNames"></param>
            <param name="externSheetSources"></param>
            <param name="tokenClass"></param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Spread.ExcelFormula.ParseFormulaElement(System.Object,System.Collections.ArrayList,System.Collections.ArrayList,System.Collections.ArrayList,FarPoint.Win.Spread.ExcelFormula.TokenClass,System.Boolean@)">
            <summary>
            ParseFormulaElement
            </summary>
            <param name="exprItem"></param>
            <param name="fnParams"></param>
            <param name="externNames"></param>
            <param name="externSheetSources"></param>
            <param name="tokenClass"></param>
            <param name="isRef"></param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Spread.ExcelFormula.ReadBiffStr(System.IO.BinaryReader,System.String@,System.Boolean)">
            <summary>
            ReadBiffStr
            </summary>
            <param name="reader"></param>
            <param name="stringOut"></param>
            <param name="isOneByteCharCount"></param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Spread.ExcelFormula.ReadFormulaString(System.IO.BinaryReader,System.Int32)">
            <summary>
            ReadFormulaString
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Spread.ExcelFormula.BuildFunctionExpression(System.Collections.ArrayList,FarPoint.Win.Spread.Ptg,System.Collections.ArrayList,System.Collections.ArrayList,FarPoint.CalcEngine.CalcError@)">
            <summary>
            ReadFuncV
            </summary>
            <param name="stack"></param>
            <param name="ptg"></param>
            <param name="externNames"></param>
            <param name="customNames"></param>
            <param name="error"></param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Spread.ExcelFormula.ReadFuncV(System.Collections.ArrayList,FarPoint.CalcEngine.CalcError@)">
            <summary>
            ReadFuncV
            </summary>
            <param name="stack"></param>
            <param name="error"></param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Spread.ExcelFormula.ReadFuncVar(System.Collections.ArrayList,System.Collections.ArrayList,System.Collections.ArrayList,FarPoint.CalcEngine.CalcError@)">
            <summary>
            ReadFuncVar
            </summary>
            <param name="stack"></param>
            <param name="externNames"></param>
            <param name="customNames"></param>
            <param name="error"></param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Spread.ExcelFormula.BuildUnsupportedFunction(System.Collections.ArrayList,FarPoint.Win.Spread.Xlf,System.Int32)">
            <summary>
            BuildUnsupportedFunction
            </summary>
            <param name="stack"></param>
            <param name="fn"></param>
            <param name="argCount"></param>
        </member>
        <member name="M:FarPoint.Win.Spread.ExcelFormula.SetValue(System.Collections.ArrayList,FarPoint.CalcEngine.ConstantExpression)">
            <summary>
            SetValue
            </summary>
            <param name="xlFormulaElement"></param>
            <param name="val"></param>
        </member>
        <member name="M:FarPoint.Win.Spread.ExcelFormula.SetFn(System.Collections.ArrayList,FarPoint.Win.Spread.Xlf,System.Int32,FarPoint.Win.Spread.ExcelFormula.TokenClass)">
            <summary>
            SetFn
            </summary>
            <param name="xlFormulaElement"></param>
            <param name="fn"></param>
            <param name="args"></param>
        </member>
        <member name="M:FarPoint.Win.Spread.ExcelFormula.SetIfFn(System.Collections.ArrayList,System.Collections.ArrayList)">
            <summary>
            SetIFFn
            </summary>
            <param name="ifParams"></param>
            <param name="xlFormulaElement"></param>
        </member>
        <member name="M:FarPoint.Win.Spread.ExcelFormula.SetChooseFn(System.Collections.ArrayList,System.Collections.ArrayList)">
            <summary>
            SetChooseFn
            </summary>
            <param name="chooseParams"></param>
            <param name="xlFormulaElement"></param>
        </member>
        <member name="M:FarPoint.Win.Spread.ExcelFormula.SetSumFn(FarPoint.CalcEngine.FunctionExpression,System.Collections.ArrayList)">
            <summary>
            SetSumFn
            </summary>
            <param name="fn"></param>
            <param name="xlFormulaElement"></param>
        </member>
        <member name="M:FarPoint.Win.Spread.ExcelFormula.SetOp(System.Collections.ArrayList,FarPoint.Win.Spread.Ptg)">
            <summary>
            SetOp
            </summary>
            <param name="xlFormulaElement"></param>
            <param name="op"></param>
        </member>
        <member name="M:FarPoint.Win.Spread.ExcelFormula.SetParen(System.Collections.ArrayList)">
            <summary>
            SetParen
            </summary>
            <param name="xlFormulaElement"></param>
        </member>
        <member name="M:FarPoint.Win.Spread.ExcelFormula.SetExternalReference(System.Collections.ArrayList,FarPoint.CalcEngine.ExternalReferenceExpression,System.Collections.ArrayList,FarPoint.Win.Spread.ExcelFormula.TokenClass)">
            <summary>
            SetExternalReference
            </summary>
            <param name="xlFormulaElement"></param>
            <param name="externExpr"></param>
            <param name="externSheetSources"></param>
        </member>
        <member name="M:FarPoint.Win.Spread.ExcelFormula.SetReference(System.Collections.ArrayList,FarPoint.CalcEngine.ReferenceExpression,System.Collections.ArrayList,FarPoint.Win.Spread.ExcelFormula.TokenClass)">
            <summary>
            SetReference
            </summary>
            <param name="xlFormulaElement"></param>
            <param name="refExpr"></param>
            <param name="externSheetSources"></param>
        </member>
        <member name="M:FarPoint.Win.Spread.ExcelFormula.SetArray(System.Collections.ArrayList,System.Int32,System.Int32)">
            <summary>
            SetArray
            </summary>
            <param name="xlFormulaElement"></param>
            <param name="rows"></param>
            <param name="columns"></param>
        </member>
        <member name="M:FarPoint.Win.Spread.ExcelFormula.BuildInfix(System.Collections.ArrayList,System.String)">
            <summary>
            BuildInfix
            </summary>
            <param name="stack"></param>
            <param name="op"></param>
        </member>
        <member name="M:FarPoint.Win.Spread.ExcelFormula.BuildInfixFn(System.Collections.ArrayList,System.String,System.Int32)">
            <summary>
            BuildInfixFn
            </summary>
            <param name="stack"></param>
            <param name="op"></param>
            <param name="argCount"></param>
        </member>
        <member name="M:FarPoint.Win.Spread.ExcelFormula.GetCoord(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            GetCoord
            </summary>
            <param name="row"></param>
            <param name="col"></param>
            <param name="isRowRel"></param>
            <param name="isColRel"></param>
            <param name="isA1"></param>
            <param name="isWholeRow"></param>
            <param name="isWholeCol"></param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Spread.ExcelFormula.ParseIFParams(System.Collections.ArrayList,System.Int32,System.Collections.ArrayList,System.Collections.ArrayList,FarPoint.Win.Spread.SharedFormulaList,System.Collections.ArrayList,FarPoint.CalcEngine.CalcError@)">
            <summary>
            ParseIFParams
            </summary>
            <param name="stack"></param>
            <param name="trueArgLen"></param>
            <param name="externNames"></param>
            <param name="customNames"></param>
            <param name="sharedFormulaList"></param>
            <param name="sources"></param>
            <param name="error"></param>
        </member>
        <member name="M:FarPoint.Win.Spread.ExcelFormula.ByteArrayToReader(System.Byte[])">
            <summary>
            ByteArrayToReader
            </summary>
            <param name="byteBuffer"></param>
            <returns></returns>
        </member>
        <member name="T:FarPoint.Win.Spread.TipAppearance">
            <summary>
            Represents the appearance settings for various tips in the interface 
            (text tips, scroll tips, and cell notes).
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.TipAppearance.#ctor">
            <summary>
            Creates a set of appearance settings, for various tips in the interface, 
            with default values.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.TipAppearance.#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Font)">
            <summary>
            Creates a set of appearance settings, for various tips in the interface, 
            with the specified values.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.TipAppearance.CopyFrom(FarPoint.Win.Spread.TipAppearance)">
            <summary>
            Copies the settings of the specified set of tip appearance settings to this tip.
            </summary>
            <param name="appearance">Tip appearance settings (TipAppearance object)</param>
        </member>
        <member name="P:FarPoint.Win.Spread.TipAppearance.BackColor">
            <summary>
            Gets or sets the background color of the tip.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.TipAppearance.ForeColor">
            <summary>
            Gets or sets the text color of the tip.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.TipAppearance.Font">
            <summary>
            Gets or sets the font of the tip.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.Appearance">
            <summary>
            Represents the appearance settings for an object.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Appearance.#ctor">
            <summary>
            Creates a set of appearance settings with default values.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Appearance.#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Font,FarPoint.Win.Spread.CellHorizontalAlignment,FarPoint.Win.Spread.CellVerticalAlignment,System.Boolean,System.Boolean,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,FarPoint.Win.VisualStyles,FarPoint.Win.Spread.SortState,FarPoint.Win.Spread.FilterState)">
            <summary>
            Creates a set of appearance settings with the specified colors, buttons, alignment, 
            visual style, and state of sorting and filtering.
            </summary>
            <param name="backColor">Background color of an object</param>
            <param name="foreColor">Foreground (text) color of an object</param>
            <param name="font">Font information of an object</param>
            <param name="horizontalAlignment">Horizontal alignment of an object or of text in a cell</param>
            <param name="verticalAlignment">Vertical alignment of an object or text in a cell</param>
            <param name="drawPrimaryButton">Whether to draw the primary button for an object</param>
            <param name="drawSecondaryButton">Whether to draw the secondary button for an object</param>
            <param name="selectionBackColor">Background color of an object when the object is selected</param>
            <param name="selectionForeColor">Foreground (text) color of an object when the object is selected</param>
            <param name="lockBackColor">Background color of an object when the cell is locked</param>
            <param name="lockForeColor">Foreground (text) color of an object when the cell is locked</param>
            <param name="visualStyle">Whether to render with visual styles (as in XP themes)</param>
            <param name="sortState">State of sorting</param>
            <param name="filterState">State of filtering</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Appearance.#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Font,FarPoint.Win.Spread.CellHorizontalAlignment,FarPoint.Win.Spread.CellVerticalAlignment,System.Boolean,System.Boolean,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,FarPoint.Win.VisualStyles)">
            <summary>
            Creates a set of appearance settings with the specified colors, buttons, alignment, 
            and visual style.
            </summary>
            <param name="backColor">Background color of an object</param>
            <param name="foreColor">Foreground (text) color of an object</param>
            <param name="font">Font information of an object</param>
            <param name="horizontalAlignment">Horizontal alignment of an object or of text in a cell</param>
            <param name="verticalAlignment">Vertical alignment of an object or text in a cell</param>
            <param name="drawPrimaryButton">Whether to draw the primary button for an object</param>
            <param name="drawSecondaryButton">Whether to draw the secondary button for an object</param>
            <param name="selectionBackColor">Background color of an object when the object is selected</param>
            <param name="selectionForeColor">Foreground (text) color of an object when the object is selected</param>
            <param name="lockBackColor">Background color of an object when the cell is locked</param>
            <param name="lockForeColor">Foreground (text) color of an object when the cell is locked</param>
            <param name="visualStyle">Whether to render with visual styles (as in XP themes)</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Appearance.#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Font,FarPoint.Win.Spread.CellHorizontalAlignment,FarPoint.Win.Spread.CellVerticalAlignment,System.Boolean,System.Boolean,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Creates a set of appearance settings with the specified colors, buttons, and alignment.
            </summary>
            <param name="backColor">Background color of an object</param>
            <param name="foreColor">Foreground (text) color of an object</param>
            <param name="font">Font information of an object</param>
            <param name="horizontalAlignment">Horizontal alignment of an object or of text in a cell</param>
            <param name="verticalAlignment">Vertical alignment of an object or text in a cell</param>
            <param name="drawPrimaryButton">Whether to draw the primary button for an object</param>
            <param name="drawSecondaryButton">Whether to draw the secondary button for an object</param>
            <param name="selectionBackColor">Background color of an object when the object is selected</param>
            <param name="selectionForeColor">Foreground (text) color of an object when the object is selected</param>
            <param name="lockBackColor">Background color of an object when the cell is locked</param>
            <param name="lockForeColor">Foreground (text) color of an object when the cell is locked</param>
        </member>
        <member name="P:FarPoint.Win.Spread.Appearance.BackColor">
            <summary>
            Gets or sets the background color of an object.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Appearance.ForeColor">
            <summary>
            Gets or sets the text color of an object.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Appearance.SelectionBackColor">
            <summary>
            Gets or sets the background color of an object when the object is selected.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Appearance.SelectionForeColor">
            <summary>
            Gets or sets the text color of an object when the object is selected.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Appearance.LockBackColor">
            <summary>
            Gets or sets the background color of an object when the cell is locked.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Appearance.LockForeColor">
            <summary>
            Gets or sets the text color of an object when the cell is locked.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Appearance.HorizontalAlignment">
            <summary>
            Gets or sets the horizontal alignment of an object or text in a cell.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Appearance.VerticalAlignment">
            <summary>
            Gets or sets the vertical alignment of an object or text in a cell.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Appearance.Font">
            <summary>
            Gets or sets the font information of an object.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Appearance.DrawPrimaryButton">
            <summary>
            Gets or sets whether to draw the primary button for an object.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Appearance.DrawSecondaryButton">
            <summary>
            Gets or sets whether to draw the secondary button for an object.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Appearance.VisualStyles">
            <summary>
            Gets or sets whether to render using VisualStyles.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Appearance.SortState">
            <summary>
            Gets or sets the state of sorting.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Appearance.FilterState">
            <summary>
            Gets or sets the state of filtering.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.ColumnLayout">
            <summary>
            Class represents the location and size of a column.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.ColumnLayout.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.ColumnLayout.ContainsX(System.Int32)">
            <summary>
            Checks whether or not this column contains the specified
            point.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.ColumnLayout.Intersects(System.Drawing.Rectangle)">
            <summary>
            Checks whether or not this column interects with the
            specified rectangle.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.ColumnLayout.Column">
            <summary>
            Gets the column index.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.ColumnLayout.X">
            <summary>
            Gets the x coordinate of the left side of the column.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.ColumnLayout.Width">
            <summary>
             Gets the width of the column.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.GridLines">
            <summary>
            Specifies whether horizontal or vertical grid lines or both are displayed on the sheet.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.GridLines.None">
            <summary>
            Does not display grid lines on the sheet
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.GridLines.Horizontal">
            <summary>
            Displays horizontal grid lines on the sheet
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.GridLines.Vertical">
            <summary>
            Displays vertical grid lines on the sheet
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.GridLines.Both">
            <summary>
            Displays both horizontal and vertical grid lines on the sheet
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.SheetSkin">
            <summary>
            Represents a skin, which provides style settings for a sheet.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SheetSkin.name">
            <summary>
            Name of the skin
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SheetSkin.backColor">
            <summary>
            Background color
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SheetSkin.cellBackColor">
            <summary>
            Background color of the cells
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SheetSkin.cellForeColor">
            <summary>
            Foreground color of the cells
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SheetSkin.gridLines">
            <summary>
            Sheet grid lines
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SheetSkin.gridLineColor">
            <summary>
            Sheet grid line color
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SheetSkin.headerBackColor">
            <summary>
            Background color of header cells
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SheetSkin.headerForeColor">
            <summary>
            Text color of header cells
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SheetSkin.flatColumnHeader">
            <summary>
            True for flat column headers, false for three-d
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SheetSkin.flatRowHeader">
            <summary>
            True for flat row headers, false for three-d
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SheetSkin.headerFontBold">
            <summary>
            True for bold header font, false for normal
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SheetSkin.selectionBackColor">
            <summary>
            Background color of selection
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SheetSkin.selectionForeColor">
            <summary>
            Foreground color of selection
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SheetSkin.evenRowBackColor">
            <summary>
            Background color of even numbererd rows
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SheetSkin.oddRowBackColor">
            <summary>
            Background color of odd numbered rows
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SheetSkin.showColumnHeader">
            <summary>
            True to show column header, false to hide it
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SheetSkin.showRowHeader">
            <summary>
            True to show row header, false to hide it
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetSkin.#ctor(FarPoint.Win.Spread.SheetSkin)">
            <summary>
            Creates a new skin and copies the property values from the source skin.
            </summary>
            <param name="source">SheetSkin from which to copy, or null to copy from DefaultSkins.Default</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetSkin.#ctor(FarPoint.Win.Spread.FpSpread)">
            <summary>
            Creates a new skin with the property values of the active sheet of the specified FpSpread control.
            </summary>
            <param name="spread">FpSpread control</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetSkin.#ctor(System.String,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,FarPoint.Win.Spread.GridLines,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Creates a new skin with the specified settings.
            </summary>
            <param name="name">Name of the skin</param>
            <param name="backColor">Background color for the sheet</param>
            <param name="cellBackColor">Background color of the cells</param>
            <param name="cellForeColor">Text color of the cells</param>
            <param name="gridLines">Specifies which grid lines to display</param>
            <param name="gridLineColor">Grid line color</param>
            <param name="headerBackColor">Background color of the headers</param>
            <param name="headerForeColor">Foreground color of the headers</param>
            <param name="selectionBackColor">Background color of selected cells</param>
            <param name="selectionForeColor">Foreground color of selected cells</param>
            <param name="evenRowBackColor">Background color of even rows</param>
            <param name="oddRowBackColor">Background color of odd rows</param>
            <param name="flatColumnHeader">true for flat headers; false for the default three-dimensional headers</param>
            <param name="flatRowHeader">true for flat headers; false for the default three-dimensional headers</param>
            <param name="headerFontBold">true for bold font; false for not bold</param>
            <param name="showColumnHeader">true to display the column header; false to hide the column header</param>
            <param name="showRowHeader">true to display the row header; false to hide the row header</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetSkin.#ctor(FarPoint.Win.Spread.SheetView)">
            <summary>
            Creates a new skin with the property settings of the specified sheet.
            </summary>
            <param name="sheetView">Sheet (SheetView object), or null to initialize using DefaultSkins.Default</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetSkin.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new skin from serialization.
            </summary>
            <param name="info">SerializationInfo</param>
            <param name="context">StreamingContext</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetSkin.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Saves the skin to serialization.
            </summary>
            <param name="info">SerializationInfo</param>
            <param name="context">StreamingContext</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetSkin.Apply(FarPoint.Win.Spread.FpSpread)">
            <summary>
            Applies the skin to the active sheet in the specified FpSpread control.
            </summary>
            <param name="spread">
            FpSpread control to which to apply the skin
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetSkin.Apply(FarPoint.Win.Spread.SheetView)">
            <summary>
            Applies the skin to the specified sheet.
            </summary>
            <param name="sheet">Sheet to which to apply the skin</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetSkin.Apply(System.Collections.ICollection)">
            <summary>
            Applies the skin to the specified collection of sheets.
            </summary>
            <param name="sheets">Array of sheets to which to apply the skin</param>
            <exception cref="T:System.ArgumentNullException">No sheet collection specified or specified collection is null</exception>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetSkin.Save(FarPoint.Win.Spread.SheetSkin,System.String)">
            <summary>
            Saves a skin to a file.
            </summary>
            <param name="skin">Name of the skin</param>
            <param name="fileName">Path and file name to which to save the skin
             overwriting the file if it already exists</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetSkin.Save(FarPoint.Win.Spread.SheetSkin,System.IO.Stream)">
            <summary>
            Saves a skin to a stream.
            </summary>
            <param name="skin">Name of the skin</param>
            <param name="stream">Stream to which to save the skin</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetSkin.Load(System.String)">
            <summary>
            Loads a skin from a file.
            </summary>
            <param name="fileName">Path and file name from which to load the skin</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetSkin.Load(System.IO.Stream)">
            <summary>
            Loads a skin from a stream.
            </summary>
            <param name="stream">Stream from which to load the skin</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetSkin.Equals(System.Object)">
            <summary>
            Returns a value indicating whether the specified object is equivalent to this skin.
            </summary>
            <param name="o">Object to compare to</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetSkin.GetHashCode">
            <summary>
            Returns the hash code of this object.
            </summary>
            <returns>The hash code</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetSkin.Serialize(System.Xml.XmlTextWriter)">
            <summary>
            Saves the skin to XML.
            </summary>
            <param name="w">XmlTextWriter to which to write (save) the object</param>
            <returns>true if successful; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetSkin.Deserialize(System.Xml.XmlNodeReader)">
            <summary>
            Loads the skin from XML.
            </summary>
            <param name="r">XmlNodeReader from which to read (load) the object</param>
            <returns>true if successful; false otherwise</returns>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetSkin.Name">
            <summary>
            Gets the name of the skin for the sheet.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetSkin.BackColor">
            <summary>
            Gets the background color of the sheet.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetSkin.CellBackColor">
            <summary>
            Gets the background color of cells in the sheet.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetSkin.CellForeColor">
            <summary>
            Gets the text color of cells in the sheet.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetSkin.GridLines">
            <summary>
            Gets which grid lines are displayed on the sheet.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetSkin.GridLineColor">
            <summary>
            Gets the color of the grid lines on the sheet.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetSkin.HeaderBackColor">
            <summary>
            Gets the background color of header cells in the sheet.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetSkin.HeaderForeColor">
            <summary>
            Gets the text color of header cells in the sheet.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetSkin.FlatColumnHeader">
            <summary>
            Gets whether column headers are displayed in the sheet as appearing flat.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetSkin.FlatRowHeader">
            <summary>
            Gets whether row headers are displayed in the sheet as appearing flat.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetSkin.HeaderFontBold">
            <summary>
            Gets whether the font is bold for text in headers in the sheet.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetSkin.SelectionBackColor">
            <summary>
            Gets the background color of selected cells in the sheet.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetSkin.SelectionForeColor">
            <summary>
            Gets the text color of selected cells in the sheet.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetSkin.EvenRowBackColor">
            <summary>
            Gets the background color of even numbererd rows in the sheet.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetSkin.OddRowBackColor">
            <summary>
            Gets the background color of odd numbered rows in the sheet.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetSkin.ShowColumnHeader">
            <summary>
            Gets whether the sheet displays the column header.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetSkin.ShowRowHeader">
            <summary>
            Gets whether the sheet displays the row header.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetSkinConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns a value indicating whether a sheet skin object can be converted to the specified type.
            </summary>
            <param name="context">ITypeDescriptorContext</param>
            <param name="destinationType">Type</param>
            <returns>True if a sheet skin object can be converted to the specified type, and false otherwise.</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetSkinConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts a skin from one type to another.
            </summary>
            <param name="context">ITypeDescriptorContext</param>
            <param name="culture">CultureInfo</param>
            <param name="value">object</param>
            <param name="destinationType">Type</param>
            <returns>Converted SheetSkin object</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetSkinEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits the SheetSkin value.
            </summary>
            <param name="context">ITypeDescriptorContext</param>
            <param name="provider">IServiceProvider</param>
            <param name="value">object</param>
            <returns>object</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetSkinEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets the style of the type editor (which is drop-down).
            </summary>
            <param name="context">ITypeDescriptorContext</param>
            <returns>UITypeEditorEditStyle</returns>
        </member>
        <member name="T:FarPoint.Win.Spread.DefaultSkins">
            <summary>
            Read-only collection of default (built-in) skins.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.DefaultSkins.Skins">
            <summary>
            Array of SheetSkin objects containing the built-in skins.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DefaultSkins.Contains(FarPoint.Win.Spread.SheetSkin)">
            <summary>
            Determines whether the collection contains the specified skin.
            </summary>
            <param name="skin">
            Skin (SheetSkin object) for which to check
            </param>
            <returns>
            True if the object is found in the collection; false otherwise
            </returns>
        </member>
        <member name="M:FarPoint.Win.Spread.DefaultSkins.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies skins to the specified array at the specified index. 
            </summary>
            <param name="array">
            One-dimensional array into which the elements from ICollection are copied;   
            array must have zero-based indexing 
            </param>
            <param name="index">
            Zero-based index in array at which to paste skins
            </param>
            <exception cref="T:System.ArgumentNullException">No array specified, or specified array is null (Nothing)</exception>
            <exception cref="T:System.ArgumentException">Specified array is invalid; must have a rank of one</exception>
            <exception cref="T:System.ArgumentException">Specified array is invalid; must have sufficient length</exception>
            <exception cref="T:System.IndexOutOfRangeException">Specified index is out of range; must be greater than zero</exception>
        </member>
        <member name="M:FarPoint.Win.Spread.DefaultSkins.Find(System.String)">
            <summary>
            Finds the skin with the specified name.
            </summary>
            <param name="name">
            Name of the skin to find
            </param>
            <returns>
            Skin (SheetSkin object) in the collection with the specified name, or
            null if no skin is found with that name
            </returns>
        </member>
        <member name="M:FarPoint.Win.Spread.DefaultSkins.GetAt(System.Int32)">
            <summary>
            Gets the skin at the specified index. 
            </summary>
            <param name="index">
            Zero-based index in array that specifies the location of the SheetSkin object 
            </param>
            <exception cref="T:System.IndexOutOfRangeException">
            Specified index is out of range; must be between zero and the total number of skins
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.DefaultSkins.IndexOf(FarPoint.Win.Spread.SheetSkin)">
            <summary>
            Returns the index of the specified skin. 
            </summary>
            <param name="skin">
            Name of the skin (SheetSkin object) for which to return the index 
            </param>
            <returns>
            Index of the object in the collection, or -1 if the object is not found
            </returns>
        </member>
        <member name="M:FarPoint.Win.Spread.DefaultSkins.Reset(FarPoint.Win.Spread.FpSpread)">
            <summary>
            Resets the skin properties of the active sheet in the specified FpSpread control to the default values.
            </summary>
            <param name="spread">
            FpSpread control in which to reset the active sheet
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.DefaultSkins.Reset(FarPoint.Win.Spread.SheetView)">
            <summary>
            Resets the skin properties of the specified sheet to the default values.
            </summary>
            <param name="sheetView">
            Sheet (SheetView object) in which to reset the properties
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.DefaultSkins.Reset(System.Collections.ICollection)">
            <summary>
            Resets the skin properties of an array of sheets to the default values.
            </summary>
            <param name="sheets">
            Array of sheets (SheetView objects)
            </param>
            <exception cref="T:System.ArgumentNullException">
            No sheet collection specified or specified sheet collection is null
            </exception>
        </member>
        <member name="P:FarPoint.Win.Spread.DefaultSkins.Default">
            <summary>
            Represents the skin for resetting the skin properties to the default values.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DefaultSkins.Colorful1">
            <summary>
            Represents the built-in skin, Colorful1.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DefaultSkins.Colorful2">
            <summary>
            Represents the built-in skin, Colorful2.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DefaultSkins.Colorful3">
            <summary>
            Represents the built-in skin, Colorful3.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DefaultSkins.Colorful4">
            <summary>
            Represents the built-in skin, Colorful4.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DefaultSkins.Colorful5">
            <summary>
            Represents the built-in skin, Colorful5.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DefaultSkins.Professional1">
            <summary>
            Represents the built-in skin, Professional1.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DefaultSkins.Professional2">
            <summary>
            Represents the built-in skin, Professional2.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DefaultSkins.Professional3">
            <summary>
            Represents the built-in skin, Professional3.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DefaultSkins.Simple1">
            <summary>
            Represents the built-in skin, Simple1.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DefaultSkins.Simple2">
            <summary>
            Represents the built-in skin, Simple2.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DefaultSkins.Simple3">
            <summary>
            Represents the built-in skin, Simple3.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DefaultSkins.Classic1">
            <summary>
            Represents the built-in skin, Classic1.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DefaultSkins.Classic2">
            <summary>
            Represents the built-in skin, Classic2.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DefaultSkins.Count">
            <summary>
            Gets the number of built-in skins in the array of SheetSkin objects.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.ComparisonOperator">
            <summary>
            Specifies the operator for conditional formats.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.ComparisonOperator.IsTrue">
            <summary>
            Determines whether a formula evaluates to true
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.ComparisonOperator.IsFalse">
            <summary>
            Determines whether a formula evaluates to false
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.ComparisonOperator.Between">
            <summary>
            Determines whether a cell value is between the two parameter values
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.ComparisonOperator.NotBetween">
            <summary>
            Determines whether a cell value is not between the two parameter values
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.ComparisonOperator.EqualTo">
            <summary>
            Determines whether a cell value is equal to the parameter value
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.ComparisonOperator.NotEqualTo">
            <summary>
            Determines whether a cell value is not equal to the parameter value
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.ComparisonOperator.GreaterThan">
            <summary>
            Determines whether a cell value is greater than the parameter value
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.ComparisonOperator.LessThan">
            <summary>
            Determines whether a cell value is less than the parameter value
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.ComparisonOperator.GreaterThanOrEqualTo">
            <summary>
            Determines whether a cell value is greater than or equal to the parameter value
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.ComparisonOperator.LessThanOrEqualTo">
            <summary>
            Determines whether a cell value is less than or equal to the parameter value
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.IConditionalFormatSupport">
            <summary>
            Interface that supports conditional formatting of cells on a sheet.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.IConditionalFormatSupport.SetConditionalFormat(System.Int32,System.Int32,FarPoint.Win.Spread.NamedStyle,FarPoint.Win.Spread.ComparisonOperator,System.String)">
            <summary>
            Sets a parameterized conditional format for the cell at the specified row and column.
            </summary>
            <param name="row">Row index</param>
            <param name="column">Column index</param>
            <param name="style">Style to be applied to the cell if the condition is satisfied</param>
            <param name="op">Comparison operator to apply to the cell value and the parameter value</param>
            <param name="value">Parameter value</param>
        </member>
        <member name="M:FarPoint.Win.Spread.IConditionalFormatSupport.SetConditionalFormat(System.Int32,System.Int32,FarPoint.Win.Spread.NamedStyle,FarPoint.Win.Spread.ComparisonOperator,System.String,System.String)">
            <summary>
            Sets a parameterized conditional format for the cell at the specified row and column.
            </summary>
            <param name="row">Row index</param>
            <param name="column">Column index</param>
            <param name="style">Style to be applied to the cell if the condition is satisfied</param>
            <param name="op">Comparison operator to apply to the cell value and the parameter values</param>
            <param name="firstCondition">First parameter value</param>
            <param name="lastCondition">Last parameter value</param>
        </member>
        <member name="M:FarPoint.Win.Spread.IConditionalFormatSupport.SetConditionalFormat(System.Int32,System.Int32,FarPoint.Win.Spread.NamedStyle,FarPoint.Win.Spread.ComparisonOperator,FarPoint.CalcEngine.Expression,FarPoint.CalcEngine.Expression)">
            <summary>
            Sets a parameterized conditional format for the cell at the specified row and column.
            </summary>
            <param name="row">Row index</param>
            <param name="column">Column index</param>
            <param name="style">Style to be applied to the cell if the condition is satisfied</param>
            <param name="op">Comparison operator to apply to the cell value and the parameter values</param>
            <param name="firstCondition">First parameter value</param>
            <param name="lastCondition">Last parameter value</param>
        </member>
        <member name="M:FarPoint.Win.Spread.IConditionalFormatSupport.SetFormulaConditionalFormat(System.Int32,System.Int32,FarPoint.Win.Spread.NamedStyle,System.String)">
            <summary>
            Sets a formula conditional format for the cell at the specified row and column.
            </summary>
            <param name="row">Row index</param>
            <param name="column">Column index</param>
            <param name="style">Style to be applied to the cell if the formula evaluates to true</param>
            <param name="formula">Formula for the condition</param>
        </member>
        <member name="M:FarPoint.Win.Spread.IConditionalFormatSupport.GetConditionalFormats(System.Int32,System.Int32)">
            <summary>
            Gets a conditional format from the cell at the specified row and column.
            </summary>
            <param name="row">Row index</param>
            <param name="column">Column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.IConditionalFormatSupport.GetConditionalFormats(System.Int32@,System.Int32@,System.Boolean)">
            <summary>
            Gets a conditional format for the next cell after the cell at the specified row and column.
            </summary>
            <param name="row">Row index</param>
            <param name="column">Column index</param>
            <param name="findNext">Whether to find the next cell</param>
        </member>
        <member name="M:FarPoint.Win.Spread.IConditionalFormatSupport.ClearConditionalFormats(System.Int32,System.Int32)">
            <summary>
            Clears the conditional formats for the cell at the specified row and column.
            </summary>
            <param name="row">Row index</param>
            <param name="column">Column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.IConditionalFormatSupport.GetValidConditionalFormat(System.Int32,System.Int32,System.Object,FarPoint.Win.Spread.Model.ISheetDataModel)">
            <summary>
            Gets the style for the first condition that is satisfied
            from the list of conditional formats for the cell at the specified row and column. 
            </summary>
            <param name="row">Row index</param>
            <param name="column">Column index</param>
            <param name="value">Cell value</param>
            <param name="dm">Data model</param>
        </member>
        <member name="M:FarPoint.Win.Spread.IConditionalFormatSupport.ConditionalFormatIsRowUsed(System.Int32)">
            <summary>
            Determines whether the specified row has a conditional format set.
            </summary>
            <param name="row">Row index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.IConditionalFormatSupport.ConditionalFormatNextNonEmptyColumnInRow(System.Int32,System.Int32)">
            <summary>
            Gets the next non-empty column in the specified row after the specified column 
            that contains a conditional format.
            </summary>
            <param name="row">Row index</param>
            <param name="column">Column index</param>
        </member>
        <member name="T:FarPoint.Win.Spread.ConditionalFormatCollection">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.ConditionalFormatCollection.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.ConditionalFormatCollection.Add(FarPoint.Win.Spread.ConditionalFormat)">
            <summary>
            Adds a conditional format to the collection.
            </summary>
            <param name="conditionalFormat">Conditional format to add</param>
        </member>
        <member name="M:FarPoint.Win.Spread.ConditionalFormatCollection.ToArray">
            <summary>
            Creates array for counting through the collection.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.ConditionalFormatCollection.Serialize(System.Xml.XmlTextWriter)">
            <summary>
            Saves the object to XML.
            </summary>
            <param name="w">XmlTextWriter object used to save the object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.ConditionalFormatCollection.Serialize(System.Xml.XmlTextWriter,System.Int32,System.Int32)">
            <summary>
            Saves the object to XmlTextWriter.
            </summary>
            <param name="w">XmlTextWriter object used to save the object</param>
            <returns>True if successful; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.ConditionalFormatCollection.Deserialize(System.Xml.XmlNodeReader)">
            <summary>
            Loads the object from XmlNodeReader
            </summary>
            <param name="r">XmlNodeReader from which to read the object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.ConditionalFormatCollection.Deserialize(System.Xml.XmlNodeReader,System.Int32,System.Int32)">
            <summary>
            Loads the object from XmlNodeReader
            </summary>
            <param name="r">XmlNodeReader from which to read the object</param>
            <returns>True if successful; false otherwise</returns>
        </member>
        <member name="P:FarPoint.Win.Spread.ConditionalFormatCollection.Item(System.Int32)">
            <summary>
            Indexer property to retrieve custom format items from the collection.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.ConditionalFormat">
            <summary>
            Represents a conditional format.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.ConditionalFormat.#ctor">
            <summary>
            Creates a new conditional format.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.ConditionalFormat.#ctor(FarPoint.Win.Spread.NamedStyle)">
            <summary>
            Creates a new conditional format with the specified style.
            </summary>
            <param name="style">Style</param>
        </member>
        <member name="M:FarPoint.Win.Spread.ConditionalFormat.Serialize(System.Xml.XmlTextWriter)">
            <summary>
            Saves the conditional format object to XML.
            </summary>
            <param name="w">XmlTextWriter object to which to save the object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.ConditionalFormat.Serialize(System.Xml.XmlTextWriter,System.Int32,System.Int32)">
            <summary>
            Saves the conditional format object to XML at a cell at a specified row and column.
            </summary>
            <param name="w">XmlTextWriter object used to save the object</param>
            <param name="row">Row index</param>
            <param name="column">Column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.ConditionalFormat.Deserialize(System.Xml.XmlNodeReader)">
            <summary>
            Loads the conditional format object from XML.
            </summary>
            <param name="r">XmlNodeReader from which to read the object</param>
            <returns>True if successful; false otherwise</returns>
        </member>
        <member name="P:FarPoint.Win.Spread.ConditionalFormat.Style">
            <summary>
            Gets or sets a style for the conditional format.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.ConditionalFormat.FirstCondition">
            <summary>
            Gets or sets the first condition. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.ConditionalFormat.LastCondition">
            <summary>
            Gets or sets the last condition.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.ConditionalFormat.FirstConditionExpression">
            <summary>
            Gets or sets the first condition as an expression. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.ConditionalFormat.LastConditionExpression">
            <summary>
            Gets or sets the last condition as an expression.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.ConditionalFormat.ComparisonOperator">
            <summary>
            Gets or sets the comparison operator for the conditional format.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.ColumnHeader">
            <summary>
            Represents the column header portion of the control.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.ColumnHeader.GetClip(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets a tab-delimited string containing the formatted text in a range.
            </summary>
            <param name="row">Starting column header row index, or -1 for all column header rows</param>
            <param name="column">Starting column index, or -1 for all columns</param>
            <param name="rowCount">Number of column header rows, or -1 for all column header rows</param>
            <param name="columnCount">Number of columns, or -1 for all columns</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified row index is out of range; must be between -1 and the total number of rows
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified column index is out of range; must be between -1 and the total number of columns
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.ColumnHeader.GetClipValue(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets a tab-delimited string containing the unformatted text in a range.
            </summary>
            <param name="row">Starting column header row index, or -1 for all column header rows</param>
            <param name="column">Starting column index, or -1 for all columns</param>
            <param name="rowCount">Number of column header rows, or -1 for all column header rows</param>
            <param name="columnCount">Number of columns, or -1 for all columns</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified row index is out of range; must be between -1 and the total number of rows
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified column index is out of range; must be between -1 and the total number of columns
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.ColumnHeader.SetClip(System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Sets a tab-delimited string containing the formatted text in a range.
            </summary>
            <param name="row">Starting column header row index, or -1 for all column header rows</param>
            <param name="column">Starting column index, or -1 for all columns</param>
            <param name="rowCount">Number of column header rows, or -1 for all column header rows (may create new column header rows as needed)</param>
            <param name="columnCount">Number of columns, or -1 for all columns</param>
            <param name="value">Tab-delimited string to set into the range</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified row index is out of range; must be between -1 and the total number of rows
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified column index is out of range; must be between -1 and the total number of columns
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.ColumnHeader.SetClipValue(System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Sets a tab-delimited string containing the unformatted text in a range.
            </summary>
            <param name="row">Starting column header row index, or -1 for all column header rows</param>
            <param name="column">Starting column index, or -1 for all columns</param>
            <param name="rowCount">Number of column header rows, or -1 for all column header rows (may create new column header rows as needed)</param>
            <param name="columnCount">Number of columns, or -1 for all columns</param>
            <param name="value">Tab-delimited string to set into the range</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified row index is out of range; must be between -1 and the total number of rows
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified row index is out of range; must be between -1 and the total number of columns
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.ColumnHeader.ToString">
            <summary>
            Gets a string containing a reference to the column header. (Always returns null.)
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.ColumnHeader.Cells">
            <summary>
            Gets a Cells object for the cells in the column header.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.ColumnHeader.Columns">
            <summary>
            Gets a Columns object for the columns in the column header.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.ColumnHeader.Rows">
            <summary>
            Gets a Rows object for the rows in the column header.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.ColumnHeader.AlternatingRows">
            <summary>
            Gets the alternating rows information for the column header.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.ColumnHeader.DefaultStyle">
            <summary>
            Gets or sets the default style information for the cells in the column header. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.ColumnHeader.DefaultStyleName">
            <summary>
            Gets or sets the name of the default style for the column header.
            </summary>
            <exception cref="T:System.ArgumentException">Specified style (NamedStyle object) could not be found in the collection</exception>
        </member>
        <member name="P:FarPoint.Win.Spread.ColumnHeader.AutoSortIndex">
            <summary>
            Gets or sets which column header row displays the 
            sort indicator when there are multiple column header rows.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.ColumnHeader.HorizontalGridLine">
            <summary>
            Gets or sets the horizontal grid line in the column header.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.ColumnHeader.VerticalGridLine">
            <summary>
            Gets or sets the vertical grid line in the column header.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.ColumnHeader.AutoText">
            <summary>
            Gets or sets whether the column header displays letters or numbers 
            or is blank.  
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.ColumnHeader.AutoTextIndex">
            <summary>
            Gets or sets which column header row displays the automatic text 
            when there are multiple column header rows. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.ColumnHeader.AutoFilterIndex">
            <summary>
            Gets or sets which column header row displays the 
            row filter indicator when there are multiple column header rows.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.ColumnHeader.Visible">
            <summary>
            Gets or sets whether the column header is visible. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.ColumnHeader.RowCount">
            <summary>
            Gets or sets the number of rows in the column header.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified row count is less than 0 or greater than 256.
            </exception>
        </member>
        <member name="T:FarPoint.Win.Spread.InputMap">
            <summary>
            Represents the map between input by the user and the action that occurs.
            </summary>
            <remarks>
            The input map provides a map between an input event (currently
            only key strokes are supported) and an object. Input maps can
            have parents that are searched for mappings not defined in the
            input map.
            </remarks>
        </member>
        <member name="M:FarPoint.Win.Spread.InputMap.#ctor">
            <summary>
            Initializes an InputMap object with no parent and no mappings.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.InputMap.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the InputMap class with data from the specified serialization and stream objects.
            </summary>
            <param name="info">The data needed to serialize or deserialize an object.</param>
            <param name="context">The source and destination of a given serialized stream.</param>
        </member>
        <member name="M:FarPoint.Win.Spread.InputMap.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates the SerializationInfo class with information about the <see cref="T:FarPoint.Win.Spread.InputMap"/> object.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.InputMap.AllKeys">
            <summary>
            Returns the key strokes that are defined in this input map
            and its parent.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.InputMap.Keys">
            <summary>
            Gets the key strokes that are defined in this input map.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.InputMap.Clear">
            <summary>
            Removes all the mappings from this input map.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.InputMap.Get(FarPoint.Win.Spread.Keystroke)">
            <summary>
            Returns the binding for the specified key stroke.
            </summary>
            <remarks>
            This method queries the parent input map if the binding is not defined in the current input map.
            </remarks>
            <param name="keystroke">Key stroke for which to get input map</param>
        </member>
        <member name="M:FarPoint.Win.Spread.InputMap.Put(FarPoint.Win.Spread.Keystroke,System.Object)">
            <summary>
            Creates a binding between the specified key stroke and an action.
            </summary>
            <param name="keystroke">Key stroke specified</param>
            <param name="actionMapKey">Action specified</param>
        </member>
        <member name="M:FarPoint.Win.Spread.InputMap.Remove(FarPoint.Win.Spread.Keystroke)">
            <summary>
            Removes the mapping for the specified key stroke.
            </summary>
            <param name="keystroke">Key stroke specified</param>
        </member>
        <member name="P:FarPoint.Win.Spread.InputMap.Parent">
            <summary>
            Gets or sets the parent (<see cref="T:FarPoint.Win.Spread.InputMap"/> object) of this input map.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.InputMap.Size">
            <summary>
            Returns the number of mappings defined in this input map.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.InputMap.InputMapEntry">
            <summary>
            Private class that represents an entry in an InputMap.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.Model.CellCalc">
            <summary>
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.DrawingSpace.IPSObject">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.DrawingSpace.IPSObject.MouseEnter">
            <summary>
            Occurs when the mouse enters the object.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.DrawingSpace.IPSObject.MouseLeave">
            <summary>
            Occurs when the mouse leaves the object.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.DrawingSpace.Sizing">
            <summary>
            Specifies the sizing aspects of the object.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.DrawingSpace.Sizing.None">
            <summary>
            Does not allow user sizing
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.DrawingSpace.Sizing.Height">
            <summary>
            Allows user to size the height of the object
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.DrawingSpace.Sizing.Width">
            <summary>
            Allows user to size the width of the object
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.DrawingSpace.Sizing.HeightAndWidth">
            <summary>
            Allows user to size both the height of the object
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.DrawingSpace.Moving">
            <summary>
            Specifies the movement aspects of the object.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.DrawingSpace.Moving.None">
            <summary>
            Does not allow user movement
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.DrawingSpace.Moving.Horizontal">
            <summary>
            Allows the user to horizontally move the object
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.DrawingSpace.Moving.Vertical">
            <summary>
            Allows the user to vertically move the object
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.DrawingSpace.Moving.HorizontalAndVertical">
            <summary>
            Allows the user to move the object both horizontally and vertically
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.DrawingSpace.ShadowDirection">
            <summary>
            Specifies the direction of the shape's drop shadow.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.DrawingSpace.ShadowDirection.None">
            <summary>
            Displays no shadow
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.DrawingSpace.ShadowDirection.Right">
            <summary>
            Displays a shadow on the right of the object only
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.DrawingSpace.ShadowDirection.BottomRight">
            <summary>
            Displays a shadow on the bottom and right of the object
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.DrawingSpace.ShadowDirection.Bottom">
            <summary>
            Displays a shadow on the bottom of the object only
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.DrawingSpace.ShadowDirection.BottomLeft">
            <summary>
            Displays a shadow on the bottom and left of the object
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.DrawingSpace.ShadowDirection.Left">
            <summary>
            Displays a shadow on the left of the object only
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.DrawingSpace.ShadowDirection.TopLeft">
            <summary>
            Displays a shadow on the top and left of the object
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.DrawingSpace.ShadowDirection.Top">
            <summary>
            Displays a shadow on the top of the object only
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.DrawingSpace.ShadowDirection.TopRight">
            <summary>
            Displays a shadow on the top and right of the object
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.DrawingSpace.GradientStyle">
            <summary>
            Specifies the background gradient style.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.DrawingSpace.GradientStyle.None">
            <summary>
            Displays no gradient fill
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.DrawingSpace.GradientStyle.LinearTopDown">
            <summary>
            Displays a linear gradient fill from top to bottom
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.DrawingSpace.GradientStyle.LinearBottomUp">
            <summary>
            Displays a linear gradient fill from bottom to top
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.DrawingSpace.GradientStyle.LinearLeftRight">
            <summary>
            Displays a linear gradient fill from left to right
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.DrawingSpace.GradientStyle.LinearRightLeft">
            <summary>
            Displays a linear gradient fill from right to left
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.DrawingSpace.GradientStyle.LinearTopRightBottomLeft">
            <summary>
            Displays a linear gradient fill from top right to bottom left
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.DrawingSpace.GradientStyle.LinearTopLeftBottomRight">
            <summary>
            Displays a linear gradient fill from top left to bottom right
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.DrawingSpace.GradientStyle.RadialFromCenter">
            <summary>
            Displays a radial gradient fill from center to outside edges
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.DrawingSpace.GradientStyle.RadialIntoCenter">
            <summary>
            Displays a radial gradient fill from outside edges into center
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.DrawingSpace.GradientSection">
            <summary>
            Represents the sections of a color gradient, a continuously smooth color transitions.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.GradientSection.#ctor(System.Drawing.Color,System.Int32,System.Int32)">
            <summary>
            Creates a new color gradient section with the specified parameters.
            </summary>
            <param name="color">Color</param>
            <param name="amount">Amount of the gradient</param>
            <param name="alphaBlend">Amount of alpha-blending (transparency)</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.GradientSection.#ctor(System.Drawing.Color,System.Int32)">
            <summary>
            Creates a new color gradient section with the specified parameters.
            </summary>
            <param name="color">Color</param>
            <param name="amount">Amount of the gradient</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.GradientSection.#ctor(System.Drawing.Color)">
            <summary>
            Creates a new color gradient section with default settings.
            </summary>
            <param name="color">Color</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.GradientSection.Serialize(System.Xml.XmlTextWriter)">
            <summary>
            Saves the gradient section to XML. 
            </summary>
            <param name="w">XmlTextWriter object used to write (save) the gradient </param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.GradientSection.Deserialize(System.Xml.XmlNodeReader)">
            <summary>
            Loads the gradient section from XML. 
            </summary>
            <param name="r">XmlNodeReader from which to read (load) the gradient </param>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.GradientSection.Color">
            <summary>
            Gets or sets the color of the gradient.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.GradientSection.Amount">
            <summary>
            Gets or sets the amount of the gradient.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.GradientSection.AlphaBlend">
            <summary>
            Gets or sets the amount of alpha-blending of the gradient.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.DrawingSpace.PSGradient">
            <summary>
            Represents a gradient.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSGradient.#ctor">
            <summary>
            Creates a new presentation space gradient object.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSGradient.#ctor(System.Object)">
            <summary>
            Creates a new presentation space gradient object based on another object.
            </summary>
            <param name="cloneFrom">Object from which to clone the gradient</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSGradient.Clone">
            <summary>
            Creates a new gradient object by copying the current object properties.
            </summary>
            <returns>Copy of the object</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSGradient.Reset">
            <summary>
            Resets the appearance object to its default settings.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSGradient.ResetName">
            <summary>
            Resets the name to its default settings.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSGradient.ResetStyle">
            <summary>
            Resets the gradient style of the object.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSGradient.ResetSections">
            <summary>
            Resets the gradient sections of the object.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSGradient.Serialize(System.Xml.XmlTextWriter)">
            <summary>
            Saves the object to XML. 
            </summary>
            <param name="w">XmlTextWriter object used to write (save) the object </param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSGradient.Deserialize(System.Xml.XmlNodeReader)">
            <summary>
            Loads the object from XML. 
            </summary>
            <param name="r">XmlNodeReader from which to read (load) the object </param>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.PSGradient.Name">
            <summary>
            Gets or sets the name for the appearance object.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.PSGradient.Style">
            <summary>
            Gets or sets the gradient style for the object.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.PSGradient.Sections">
            <summary>
            Gets or sets the gradient sections for the object.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.DrawingSpace.StickyNoteStyleInfo">
            <summary>
            Represents the customizable appearance settings of a cell note that stays visible.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.DrawingSpace.Internal.PSShapeStyleInfo">
            <summary>
            Represents a shape object customizable properties.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.PSShapeStyleInfo.Reset">
            <summary>
            Resets all properties to default state.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.Internal.PSShapeStyleInfo.AlphaBlendShadowColor">
            <summary>
            Gets or sets the amount of transparency of the shadow.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.Internal.PSShapeStyleInfo.ShadowOffsetX">
            <summary>
            Gets or sets the amount of horizontal offset of the shadow of the object.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.Internal.PSShapeStyleInfo.ShadowOffsetY">
            <summary>
            Gets or sets the amount of vertical offset of the shadow of the object.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.Internal.PSShapeStyleInfo.ShadowColor">
            <summary>
            Gets or sets the color of the shadow of the object.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.Internal.PSShapeStyleInfo.ShadowDirection">
            <summary>
            Gets or sets the direction of the shadow.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.Internal.PSShapeStyleInfo.BackColor">
            <summary>
            Gets or sets the background color for the object.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.Internal.PSShapeStyleInfo.ForeColor">
            <summary>
            Gets or sets the foreground color for the object.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.Internal.PSShapeStyleInfo.Font">
            <summary>
            Gets or sets the font for the object.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.Internal.PSShapeStyleInfo.CanMove">
            <summary>
            Gets or sets whether the user is allowed to move the object.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.Internal.PSShapeStyleInfo.CanSize">
            <summary>
            Gets or sets whether the user is allowed to resize the object.
            </summary>    
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.Internal.PSShapeStyleInfo.Top">
            <summary>
            Gets or sets the Y-coordinate of the object.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.Internal.PSShapeStyleInfo.Left">
            <summary>
            Gets or sets the X-coordinate of the object.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.Internal.PSShapeStyleInfo.Height">
            <summary>
            Gets or sets the height of the object.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.Internal.PSShapeStyleInfo.Width">
            <summary>
            Gets or sets the width of the object.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.Internal.PSShapeStyleInfo.AlphaBlendBackColor">
            <summary>
            Gets or sets the alpha-blend value of the background color of the object.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.Internal.PSShapeStyleInfo.Tag">
            <summary>
            Gets or sets the Tag object for the element.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.Internal.PSShapeStyleInfo.TextWrap">
            <summary>
            Gets or sets whether to wrap the text in the element.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.Internal.PSShapeStyleInfo.Gradient">
            <summary>
            Gets or sets the gradient for the object.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.Internal.PSShapeStyleInfo.Locked">
            <summary>
            Gets or sets whether the object is marked as locked.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.Internal.PSShapeStyleInfo.ShapeOutlineColor">
            <summary>
            Gets or sets the shape outline color for the object.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.Internal.PSShapeStyleInfo.ShapeOutlineStyle">
            <summary>
            Gets or sets the shape outline style for the object.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.Internal.PSShapeStyleInfo.ShapeOutlineThickness">
            <summary>
            Gets or sets the shape outline thickness for the object.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.DrawingSpace.SpreadNotesContainer">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.DrawingSpace.PSContainer">
            <summary>
            Represents the presentation space object container. 
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.DrawingSpace.PSObject">
            <summary>
            Represents the windowless presentation space object.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.DrawingSpace.PSObject.AnchorNone">
            <summary>
            Applies no anchoring, so the object is allowed free movement
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.DrawingSpace.PSObject.AnchorLeft">
            <summary>
            Anchors on left side of object
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.DrawingSpace.PSObject.AnchorTop">
            <summary>
            Anchors on top side of object
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.DrawingSpace.PSObject.AnchorRight">
            <summary>
            Anchors on right side of object
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.DrawingSpace.PSObject.AnchorBottom">
            <summary>
            Anchors on bottom side of object
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.DrawingSpace.PSObject.AnchorAll">
            <summary>
            Anchors on all sides of object
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.DrawingSpace.PSObject.clickPt">
            <summary>
            Specifies the click point of the object container.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.DrawingSpace.PSObject.centerPt">
            <summary>
            Specifies the center point of the the bounding rectangle.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.DrawingSpace.PSObject.rotating">
            <summary>
            Specifies the direction of object rotation, if at all, for the object container.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.DrawingSpace.PSObject.region">
            <summary>
            Specifies the region of the object container.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.DrawingSpace.PSObject.resizeHandle">
            <summary>
            Specifies the handle currently being used for resizing.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.DrawingSpace.PSObject.rotatedAngle">
            <summary>
            Specifies the angle at which the object is rotated. 
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.DrawingSpace.PSObject.pictureAngle">
            <summary>
            Specifies the angle at which the picture is rotated.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.DrawingSpace.PSObject.shapeThickness">
            <summary>
            Specifies the line thickness of the object container.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.DrawingSpace.PSObject.shapeStyle">
            <summary>
            Specifies the dashed-line style of the object container.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.DrawingSpace.PSObject.shapeColor">
            <summary>
            Specifies the color of the object container.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.DrawingSpace.PSObject.alphaBackColor">
            <summary>
            Specifies the alpha-blending background color.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.DrawingSpace.PSObject.deserializing">
            <summary>
            Specifies whether the container is saving to XML.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.DrawingSpace.PSObject.theShape">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.DrawingSpace.PSObject.bgImageRotationAllowed">
            <summary>
            Specifies whether the background image rotates when the user rotates the shape
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.DrawingSpace.PSObject.bgImageAngle">
            <summary>
            Specifies the angle at which the background image is rotated.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.#ctor">
            <summary>
            Creates a new instance of a presentation space object.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.#ctor(System.Object)">
            <summary>
            Creates a new object based on the specified object.
            </summary>
            <param name="cloneFrom">Object from which to clone the new object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new shape object from serialization.
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contexual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.CopyTo(System.Object)">
            <summary>
            Copies the properties of this object in presentation space (drawing space) to the target object. 
            </summary>
            <param name="target">Target object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.Clone">
            <summary>
            Creates and returns a copy of the object.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.Reset">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.AttachParent(System.Windows.Forms.Control,System.Boolean,System.Boolean)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ShouldSerializeAllowBackgroundImageRotation">
            <summary>
            Determines if the background image rotation allowed flag of the object should be serialized.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ResetAllowBackgroundImageRotation">
            <summary>
            Resets the background image rotation allowed flag to its default settings.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ShouldSerializeBackgroundImageRotationAngle">
            <summary>
            Determines if the background image rotation angle of the object should be serialized.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ResetBackgroundImageRotationAngle">
            <summary>
            Resets the background image rotation angle to its default settings.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ShouldSerializeRotationAngle">
            <summary>
            Determines if the rotation angle of the object should be serialized.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ResetRotationAngle">
            <summary>
            Resets the rotation angle to its default settings.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ShouldSerializeTextRotationAngle">
            <summary>
            Determines if the text rotation angle of the object should be serialized.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ResetTextRotationAngle">
            <summary>
            Resets the text rotation angle to its default settings.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ShouldSerializePictureRotationAngle">
            <summary>
            Determines if the picture rotation angle of the object should be serialized.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ResetPictureRotationAngle">
            <summary>
            Resets the picture rotation angle to its default settings.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ResetName">
            <summary>
            Resets the name to its default settings.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ShouldSerializeName">
            <summary>
            Determines if the name of the object should be serialized.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ResetAlphaBlendBackColor">
            <summary>
            Resets the alpha-blend value of the background color of the object.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ShouldSerializeAlphaBlendBackColor">
            <summary>
            Determines if the alpha-blend value of the background color of the object should be serialized.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ResetShape">
            <summary>
            Resets the shape of the object.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ShouldSerializeShape">
            <summary>
            Determines if the shape should be serialized.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ShouldSerializeShapeOutlineThickness">
            <summary>
            Determines if the shape outline thickness should be serialized.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ResetShapeOutlineThickness">
            <summary>
            Resets the shape outline thickness of the object.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ShouldSerializeShapeOutlineStyle">
            <summary>
            Determines if the shape outline style should be serialized.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ResetShapeOutlineStyle">
            <summary>
            Resets the shape outline style of the object.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ShouldSerializeShapeOutlineColor">
            <summary>
            Determines if the shape outline color should be serialized.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ResetShapeOutlineColor">
            <summary>
            Resets the shape outline color of the object.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ShouldSerializeGradient">
            <summary>
            Determines if the shape outline scaling should be serialized.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ResetGradient">
            <summary>
            Resets the gradient style of the object.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the bounds of the object to the specified position and size.
            </summary>
            <param name="x">X-coordinate for bounding rectangle's top-left corner</param>
            <param name="y">Y-coordinate for bounding rectangle's top-left corner</param>
            <param name="width">Width of bounding rectangle in pixels</param>
            <param name="height">Height of bounding rectangle in pixels</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.SetBoundsFloat(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Sets the bounds of the object to the specified position and size.
            </summary>
            <param name="x">X-coordinate for bounding rectangle's top-left corner</param>
            <param name="y">Y-coordinate for bounding rectangle's top-left corner</param>
            <param name="width">Width of bounding rectangle in pixels</param>
            <param name="height">Height of bounding rectangle in pixels</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.SetBoundsFloat(System.Single,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            Sets the bounds of the object to the specified position and size.
            </summary>
            <param name="x">X-coordinate for bounding rectangle's top-left corner</param>
            <param name="y">Y-coordinate for bounding rectangle's top-left corner</param>
            <param name="width">Width of bounding rectangle in pixels</param>
            <param name="height">Height of bounding rectangle in pixels</param>
            <param name="adjustRegion">Whether to adjust the region</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.SetBoundsFloat(System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean)">
            <summary>
            Sets the bounds of the object to the specified position and size.
            </summary>
            <param name="x">X-coordinate for bounding rectangle's top-left corner</param>
            <param name="y">Y-coordinate for bounding rectangle's top-left corner</param>
            <param name="width">Width of bounding rectangle in pixels</param>
            <param name="height">Height of bounding rectangle in pixels</param>
            <param name="adjustRegion">Whether to adjust the region</param>
            <param name="recursive">Whether to check recursively for each element</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.AdjustClientArea">
            <summary>
            Adjusts the client area.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.SizeRegion(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Resizes the region.
            </summary>
            <param name="newWidth">New width value in pixels</param>
            <param name="newHeight">New height value in pixels</param>
            <param name="oldWidth">Old width value in pixels</param>
            <param name="oldHeight">Old height value in pixels</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.SizeRegion(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Resizes the region.
            </summary>
            <param name="newWidth">New width value in pixels</param>
            <param name="newHeight">New height value in pixels</param>
            <param name="oldWidth">Old width value in pixels</param>
            <param name="oldHeight">Old height value in pixels</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ShouldSerializeLocked">
            <summary>
            Determines if the locked property should be serialized.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ResetLocked">
            <summary>
            Reset the object's locked status.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ShouldSerializeAnchor">
            <summary>
            Determines if the anchor property should be serialized.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ResetAnchor">
            <summary>
            Resets the object's anchored status.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ShouldSerializeCanPrint">
            <summary>
            Determines if the CanPrint property should be serialized.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ResetCanPrint">
            <summary>
            Resets whether the object can be printed by the container.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ShouldSerializeCanRotate">
            <summary>
            Determines if the CanRotate property should be serialized.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ResetCanRotate">
            <summary>
            Resets whether the object can be rotated by the user.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ShouldSerializeCanMove">
            <summary>
            Determines if the CanMove property should be serialized.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ResetCanMove">
            <summary>
            Resets whether the object can be moved by the user.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ShouldSerializeSizeProportional">
            <summary>
            Determines if the SizeProportional property should be serialized.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ResetSizeProportional">
            <summary>
            Resets whether the object can be resized proportionally by the user.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ShouldSerializeCanSize">
            <summary>
            Determines if the CanSize property should be serialized.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ResetCanSize">
            <summary>
            Resets whether the object can be resized by the user.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ShouldSerializeContainedObjects">
            <summary>
            Determines if the ContainedObjects property should be serialized.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.Contains(System.Drawing.Point)">
            <summary>
            Determines whether the container contains the specified point.
            </summary>
            <param name="pt">Point to check</param>
            <returns>true if the point is found in the collection; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.Contains(System.Drawing.Point,System.Boolean)">
            <summary>
            Determines whether the container contains the specified point ignoring transparency.
            </summary>
            <param name="pt">Point to check</param>
            <param name="ignoreTransparency">Whether to ignore transparency</param>
            <returns>true if it contains the point; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.PaintPicture(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Paints the picture inside the specified rectangle.
            </summary>
            <param name="g">Graphic device interface</param>
            <param name="rPict">Bounding rectangle for the picture</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.PaintText(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws the text.
            </summary>
            <param name="g">Graphics device</param>
            <param name="rText">Bounding rectangle for the text</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.OnPaint(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Initiates a redraw for the object to repaint itself. 
            </summary>
            <param name="g">Graphics device interface</param>
            <param name="rectInput">Rectangle to redraw</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.PaintBackgroundImage(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws the background image.
            </summary>
            <param name="g">Graphics device</param>
            <param name="r">Bounding rectangle for the object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.PaintOutline(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Paints the outline of a GraphicsPath shape.
            </summary>
            <param name="g">Graphics device</param>
            <param name="r">Rectangle bounding the area</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.PaintBackColor(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Paints the background color.
            </summary>
            <param name="g">Graphics device</param>
            <param name="r">Bounding rectangle for the background color</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.FillBackgroundWithGradient(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Fills the background with a gradient.
            </summary>
            <param name="g">Graphics device</param>
            <param name="r">Bounding rectangle for the gradient</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.OnPaintBackground(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Initiates a redraw for the object to repaint its background.
            </summary>
            <param name="g">Graphics device interface</param>
            <param name="rectInput">Rectangle to redraw</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.PaintSpecialBackground(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Asks the control to repaint the background for the object.
            </summary>
            <param name="g">Graphics device</param>
            <param name="r">Bounding rectangle for the object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.GetPictureRegion(System.Object)">
            <summary>
            Gets the region of the picture.
            </summary>
            <param name="picture">Picture</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.PaintFocusRectangle(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws the focus rectangle.
            </summary>
            <param name="g">Graphics device</param>
            <param name="r">Bounding rectangle for the object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.GetRotateHandleRectangle(System.Drawing.Rectangle)">
            <summary>
            Gets the rotate handle rectangle.
            </summary>
            <param name="r">Rectangle</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.GetGrabHandleRectangles(System.Drawing.Rectangle,System.Drawing.Rectangle[]@)">
            <summary>
            Gets the grab handle rectangles.
            </summary>
            <param name="r">Rectangle</param>
            <param name="handleRects">Arrary of handle rectangles</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.GrabHandleFromPoint(System.Drawing.Point)">
            <summary>
            Returns the grab handle from the specified point.
            </summary>
            <param name="pt">Point</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.PointInRotateHandle(System.Drawing.Point)">
            <summary>
            Gets whether the specified point is in the rotate handle.
            </summary>
            <param name="pt">Point</param>
            <returns>true if in handle; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.PointInGrabHandle(System.Drawing.Point)">
            <summary>
            Gets whether the specified point is in a grab handle.
            </summary>
            <param name="pt">Point</param>
            <returns>true if in handle; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.PaintRotateHandle(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws the rotate handle.
            </summary>
            <param name="g">Graphics device</param>
            <param name="r">Bounding rectangle for the object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.PaintGrabHandles(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws the handles for sizing.
            </summary>
            <param name="g">Graphics device</param>
            <param name="r">Bounding rectangle for the object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.DoMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            MouseDown processing.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.DoMouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.GetRotateAngle(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
            <summary>
            Gets the rotate angle.
            </summary>
            <param name="centerPt">Point containing the basepoint of rotation</param>
            <param name="pt1">Point containing the first endpoint</param>
            <param name="pt2">Point containing the second endpoint</param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.FlipShapeHorizontal">
            <summary>
            Flips the shape horizontally (along a horizontal axis).
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.FlipShapeVertical">
            <summary>
            Flips the shape vertically (along a vertical axis).
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.DoRotate(System.Drawing.Point)">
            <summary>
            Allows the object to rotate using the specified point to determine the rotation angle.
            </summary>
            <param name="pt">Point with which to determine rotation angle.</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.Rotate(System.Single)">
            <summary>
            Rotates the object by the specified angle around the center of the object.
            </summary>
            <param name="angle">Angle to rotate the object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.Rotate(System.Drawing.Point,System.Single)">
            <summary>
            Rotates the object by the specified angle around the specified point.
            </summary>
            <param name="rotationCenterPoint">Point around which to rotate the object</param>
            <param name="angle">Angle to rotate the object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.RotateImage(System.Drawing.Image,System.Single)">
            <summary>
            Creates a new Image containing the same image only rotated
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.Scale(System.Single,System.Single)">
            <summary>
            Adjusts the size of the object by the specified amount.
            </summary>
            <param name="scaleX">Factor by which to scale the object in the horizontal dimension</param>
            <param name="scaleY">Factor by which to scale the object in the vertical dimension</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.Scale(System.Single,System.Single,System.Boolean)">
            <summary>
            Adjusts the size of the object by the specified amount.
            </summary>
            <param name="scaleX">Factor by which to scale the object in the horizontal dimension</param>
            <param name="scaleY">Factor by which to scale the object in the vertical dimension</param>
            <param name="repaint">Whether to re-draw the object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.DoSize(System.Int32,System.Drawing.Point)">
            <summary>
            Allows the object to be sized. 
            </summary>
            <param name="resizeHandle">Index of the grab handle used to size the object</param>
            <param name="pt">Point from which to size the object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.DoMove(System.Drawing.Point)">
            <summary>
            Allows the object to be moved.
            </summary>
            <param name="pt">Point location of object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.HitTestTransparentShape(System.Drawing.Point,System.Boolean)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            MouseMove processing.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.OnClick(System.EventArgs)">
            <summary>
            Click processing.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.DoMouseUpInternal(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.OnMouseUp(System.Windows.Forms.MouseEventArgs,System.Boolean)">
            <summary>
            MouseUp processing.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            MouseUp processing.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.OnMouseEnter(System.Windows.Forms.MouseEventArgs)">
            <summary>
            MouseEnter processing.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.DoMouseEnter(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.OnMouseLeave(System.Windows.Forms.MouseEventArgs)">
            <summary>
            MouseLeave processing.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.DoMouseLeave(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.Serialize(System.Object,System.Xml.XmlTextWriter)">
            <summary>
            Saves the object to XML.
            </summary>
            <param name="obj">Object to save to XML</param>
            <param name="w">XmlTextWriter to which to write (save) the object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.SerializeProps(System.Xml.XmlTextWriter)">
            <summary>
            Saves the object properties to XML.
            </summary>
            <param name="w">XmlTextWriter to which to write (save) the object properties</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.Serialize(System.Xml.XmlTextWriter)">
            <summary>
            Saves the object to XML.
            </summary>
            <param name="w">XmlTextWriter to which to write (save) the object</param>
            <returns>true if successful; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.Deserialize(System.Object,System.Xml.XmlNodeReader)">
            <summary>
            Loads the object from XML.
            </summary>
            <param name="obj">Object</param>
            <param name="r">XmlNodeReader from which to load the object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.DeserializeObjectProps(System.Xml.XmlNodeReader)">
            <summary>
            Loads the object properties from XML.
            </summary>
            <param name="r">XmlNodeReader from which to load the object properties</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.Deserialize(System.Xml.XmlNodeReader)">
            <summary>
            Loads the object from XML.
            </summary>
            <param name="r">XmlNodeReader from which to load the object </param>
            <returns>true if successful; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.OnDeserialization(System.Object)">
            <summary>
            Internal use only.
            </summary>
            <param name="sender"></param>
        </member>
        <member name="E:FarPoint.Win.Spread.DrawingSpace.PSObject.MouseEnter">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.DrawingSpace.PSObject.MouseLeave">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.AllowBackgroundImageRotation">
            <summary>
            Gets or sets the background image rotation allowed flag of the object.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.BackgroundImageRotationAngle">
            <summary>
            Gets or sets the background image rotation angle of the object.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.UniqueIdentifier">
            <summary>
            Gets the unique identifier for the element.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.UniqueIdentifierPriv">
            <summary>
            Gets or sets the unique identifier for the element.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.Tag">
            <summary>
            Gets or sets the tag for the element.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.TextWrap">
            <summary>
            Gets or sets whether to wrap the text in the element.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.MarginBottom">
            <summary>
            Gets or sets the margin between the bottom of the element and its contents.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.MarginTop">
            <summary>
            Gets or sets the margin between the top of the element and its contents.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.MarginRight">
            <summary>
            Gets or sets the margin between the right of the element and its contents.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.MarginLeft">
            <summary>
            Gets or sets the margin between the left of the element and its contents.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.PictureMargin">
            <summary>
            Gets or sets the margin between the picture and the text in the element.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.AlignHorz">
            <summary>
            Gets or sets the horizontal alignment of the contents of the element. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.AlignVert">
            <summary>
            Gets or sets the vertical alignment of the contents of the element. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.AlignText">
            <summary>
            Gets or sets the text alignment for the element.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.DrawFocusRectangle">
            <summary>
            Gets or sets the focus rectangle drawing style in the element.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.PictureOrientation">
            <summary>
            Gets or sets the orientation of the picture.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.TextOrientation">
            <summary>
            Gets or sets the orientation of the text.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.RotationAngle">
            <summary>
            Gets or sets the rotation angle of the object.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.RotationAnglePriv">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.TextRotationAngle">
            <summary>
            Gets or sets the text rotation angle of the object.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.PictureRotationAngle">
            <summary>
            Gets or sets the picture rotation angle of the object.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.AlphaBlendBackColor">
            <summary>
            Gets or sets the alpha-blend value of the background color of the object.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.Shape">
            <summary>
            Gets or sets the shape for the object.
            </summary>
            <exception cref="T:System.ArgumentException">
            Invalid object type specified; must be a valid type (GraphicsPath, Region, FarPoint.Win.Picture, or Bitmap)
            </exception>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.ShapeOutlineThickness">
            <summary>
            Gets or sets the shape outline thickness for the object.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.ShapeOutlineStyle">
            <summary>
            Gets or sets the shape outline style for the object.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.ShapeOutlineColor">
            <summary>
            Gets or sets the shape outline color for the object.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.Gradient">
            <summary>
            Gets or sets the gradient for the object.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.Visible">
            <summary>
            Gets or sets whether the object is visible.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.Enabled">
            <summary>
            Gets or sets whether the object can receive focus and respond to user actions. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.RegionPriv">
            <summary>
             Internal use only.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.Locked">
            <summary>
            Gets or sets whether the object is marked as locked.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.Anchor">
            <summary>
            Gets or sets whether the object is anchored.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.CanPrint">
            <summary>
            Gets or sets whether the container is allowed to print the object.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.CanRotate">
            <summary>
            Gets or sets whether the user is allowed to rotate the object.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.CanMove">
            <summary>
            Gets or sets whether the user is allowed to move the object.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.SizeProportional">
            <summary>
            Gets or sets whether the user is allowed to resize the object proportionally.
            </summary>    
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.CanSize">
            <summary>
            Gets or sets whether the user is allowed to resize the object.
            </summary>    
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.Top">
            <summary>
            Gets or sets the Y-coordinate of the object.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.Left">
            <summary>
            Gets or sets the X-coordinate of the object.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.Height">
            <summary>
            Gets or sets the height of the object.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.Width">
            <summary>
            Gets or sets the width of the object.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.Location">
            <summary>
            Gets or sets the location of the object.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.Size">
            <summary>
            Gets or sets the size of the object.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.ContainedObjects">
            <summary>
            Gets or sets the contained objects of the object.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSContainer.#ctor">
            <summary>
            Creates a new presentation space object container.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSContainer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new container object from serialization.
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contexual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSContainer.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the shape object. 
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contexual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSContainer.GetMaxExtent">
            <summary>
            Gets the size of the largest contained objects.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSContainer.GetPrintMaxExtent">
            <summary>
            Gets the size of the largest contained objects.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSContainer.ChildContains(System.Drawing.Point,System.Boolean)">
            <summary>
            Gets the child object in this container that contains the screen location.
            </summary>
            <param name="pt">Point on the screen</param>
            <param name="ignoreTransparency">Whether to ignore the transparency</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSContainer.Find(System.Int32)">
            <summary>
            Finds an object in the collection that matches the specified unique identifier.
            </summary>
            <param name="uniqueIdentifier">Unique identifier for the object in the collection</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSContainer.IndexOf(System.Int32)">
            <summary>
            Get the index of an object in the collection.
            </summary>
            <param name="uniqueIdentifer">Unique identifier for the object in the collection</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSContainer.ChildContains(System.Drawing.Point,System.Boolean,System.Boolean)">
            <summary>
            Gets the child object in this container that contains the screen location.
            </summary>
            <param name="pt">Point on the screen</param>
            <param name="ignoreTransparency">Whether to ignore the transparency</param>
            <param name="includeHandles">Whether to include the handles</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSContainer.ElementNotify(System.Object,System.Object)">
            <summary>
            Handles element notification.
            </summary>
            <param name="o">Object</param>
            <param name="element">Object containing element</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSContainer.ElementDeletedNotify(System.Object,System.Object)">
            <summary>
            Handles element deleted notification.
            </summary>
            <param name="o">Object</param>
            <param name="element">Object containing element</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSContainer.ClearObjects">
            <summary>
            Removes all the objects from the container.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSContainer.Serialize(System.Xml.XmlTextWriter)">
            <summary>
            Saves the container object to XML. 
            </summary>
            <param name="w">XmlTextWriter to which to write (save) the object</param>
            <returns>true if successful; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSContainer.PrintElements(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Prints the object container.
            </summary>
            <param name="g">Graphics device interface</param>
            <param name="faceRect">Rectangle that bounds the container</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSContainer.PrintElements(System.Drawing.Graphics,System.Drawing.Rectangle,System.Single)">
            <summary>
            Prints the object container with zooming.
            </summary>
            <param name="g">Graphics device interface</param>
            <param name="faceRect">Rectangle that bounds the container</param>
            <param name="zoomFactor">Zoom factor</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSContainer.PaintElements(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Paints the object container.
            </summary>
            <param name="g">Graphics device interface</param>
            <param name="faceRect">Rectangle that bounds the container</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSContainer.MoveChildren(System.Int32,System.Int32)">
            <summary>
            Moves the objects in the container by a specified amount.
            </summary>
            <param name="offsetX">Amount to offset object horizontally</param>
            <param name="offsetY">Amount to offset object vertically</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSContainer.OnDeserialization(System.Object)">
            <summary>
            Internal use only.
            </summary>
            <param name="sender"></param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadNotesContainer.OnNoteCreated(System.Object,System.EventArgs)">
            <summary>
            Raises the <see cref="E:FarPoint.Win.Spread.DrawingSpace.SpreadNotesContainer.NoteCreated"/> event when a 
            note has been created.
            </summary>
            <param name="sender">Object that raised the event</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadNotesContainer.PrintElements(System.Drawing.Graphics,System.Drawing.Rectangle,System.Single)">
            <summary>
            Prints the object container with zooming.
            </summary>
            <param name="g">Graphics device interface</param>
            <param name="faceRect">Rectangle that bounds the container</param>
            <param name="zoomFactor">Zoom factor</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadNotesContainer.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            MouseDown processing.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadNotesContainer.DoDoubleClick(System.Object,System.EventArgs)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.DrawingSpace.SpreadNotesContainer.NoteCreated">
            <summary>
            Occurs when a note is created.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadNotesContainer.CanMove">
            <summary>
            Gets or sets whether the container can be moved.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadNotesContainer.CanSize">
            <summary>
            Gets or sets whether the container can be sized.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadNotesContainer.CanFocus">
            <summary>
            Gets or sets whether the container can receive focus.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadNotesContainer.Text">
            <summary>
            Gets or sets the text for the container.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadNotesContainer.AllowNoteEdit">
            <summary>
            Gets or sets whether the notes can be in place edited.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer">
            <summary>
            Represents the presentation space object container. 
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.SetRowColumnIndexes(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Internal use only.
            </summary>
            <param name="leftColumn"></param>
            <param name="topRow"></param>
            <param name="rightColumn"></param>
            <param name="bottomRow"></param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.SetPrintRowColumnIndexes(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Internal use only.
            </summary>
            <param name="leftColumn"></param>
            <param name="topRow"></param>
            <param name="rightColumn"></param>
            <param name="bottomRow"></param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.#ctor(FarPoint.Win.Spread.SheetView)">
            <summary>
            Creates a new presentation space object container for the specified sheet.
            </summary>
            <param name="sheetView">Sheet</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new container object from serialization. 
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contexual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the shapes of the container. 
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contexual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.Print(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Prints the elements of the shapes in the container.
            </summary>
            <param name="g">Graphics device</param>
            <param name="rectangle">Rectangle bounding the elements to print</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.Print(System.Drawing.Graphics,System.Drawing.Rectangle,System.Single)">
            <summary>
            Prints the elements of the shapes in the container.
            </summary>
            <param name="g">Graphics device</param>
            <param name="rectangle">Rectangle bounding the elements to print</param>
            <param name="zoomFactor">Zoom factor</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.ChildContains(System.Drawing.Point,System.Boolean)">
            <summary>
            Gets the child object in this container that contains the screen location. 
            </summary>
            <param name="pt">Point on the screen</param>
            <param name="ignoreTransparency">Whether to ignore the transparency </param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.IsShapeInView(FarPoint.Win.Spread.DrawingSpace.PSShape,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Determines if a shape is currently within the view determined by the row and column parameters.
            </summary>
            <param name="shape">Shape to check for in view</param>
            <param name="topRow">Top row of view</param>
            <param name="leftColumn">Left column of view</param>
            <param name="bottomRow">Bottom row of view</param>
            <param name="rightColumn">Right column of view</param>
            <returns>Returns true if shape is in view; otherwise false</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.PrintElements(System.Drawing.Graphics,System.Drawing.Rectangle,System.Single)">
            <summary>
            Prints the object container with zooming.
            </summary>
            <param name="g">Graphics device interface</param>
            <param name="faceRect">Rectangle that bounds the container</param>
            <param name="zoomFactor">Zoom factor</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.PaintElements(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Paint any shapes in the container.
            </summary>
            <param name="g">Graphics object</param>
            <param name="faceRect">Rectangle object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.GetRowFromPixel(System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Internal use only.
            </summary>
            <param name="y"></param>
            <param name="row"></param>
            <param name="pixeloffset"></param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.GetColumnFromPixel(System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Internal use only.
            </summary>
            <param name="x"></param>
            <param name="column"></param>
            <param name="pixeloffset"></param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.ShouldSerializeBackColor">
            <summary>
            Gets whether to serialize the background color for the container.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.ResetBackColor">
            <summary>
            Resets the background color for the container.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.DoMouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.DoMouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.ElementNotify(System.Object,System.Object)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.ElementDeletedNotify(System.Object,System.Object)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.SynchronizeShapeLocators">
             <summary>
             Internal use only.
             </summary>
            
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.RemoveShape(System.String)">
            <summary>
            Removes the shape from the container.
            </summary>
            <param name="name">Name of shape</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.ClearShapes">
            <summary>
            Removes all shapes from the container.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.AddShape(FarPoint.Win.Spread.DrawingSpace.PSShape)">
            <summary>
            Adds a shape to the container.
            </summary>
            <param name="shape">Shape to add</param>
            <exception cref="T:System.Exception">
            Shape name already exists in the container; shape names must be unique
            </exception>
            <exception cref="T:System.Exception">
            No shape name specified or shape name is null or empty; shape names must be non-null and non-empty
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.GetShape(System.String)">
            <summary>
            Gets a shape in the container.
            </summary>
            <param name="name">Name of shape</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.GetShape(System.Int64)">
            <summary>
            Gets a shape in the container by its internally accessible unique identifier.
            </summary>
            <param name="name">Id</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.OnDeserialization(System.Object)">
            <summary>
            Internal use only.
            </summary>
            <param name="sender"></param>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.TopRow">
            <summary>
            Gets or sets the top row of the container.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.LeftColumn">
            <summary>
            Gets of sets the left column of the container.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.BottomRow">
            <summary>
            Gets or sets the bottom row of the container.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.RightColumn">
            <summary>
            Gets or sets the right column of the container.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.XOffset">
            <summary>
            Gets of sets the X-coordinate offset of the container.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.YOffset">
            <summary>
            Gets of sets the Y-coordinate offset of the container.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.BackColor">
            <summary>
            Gets or sets the background color for the container.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.CanSize">
            <summary>
            Gets or sets whether the user is allowed to size the container. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.CanMove">
            <summary>
            Gets or sets whether the user is allowed to move the container. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.CanFocus">
            <summary>
            Gets or sets whether the container can receive focus.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.Text">
            <summary>
            Gets or sets the text for the container.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.BackgroundImage">
            <summary>
            Gets or sets the background image for the container.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.Gradient">
            <summary>
            Gets or sets the gradient for the container of shapes.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.Parent">
            <summary>
            Gets or sets the parent control for the container of shapes.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.Location">
            <summary>
            Gets or sets the location of the container of shapes.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.Size">
            <summary>
            Gets or sets the size of the container of shapes.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.Name">
            <summary>
            Gets or sets the name of the container of shapes.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.DrawingSpace.PSObjects">
            <summary>
            Represents a collection of windowless presentation space objects.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObjects.#ctor">
            <summary>
            Creates a new instance of a presentation space object collection.
            </summary> 
        </member>
        <member name="T:FarPoint.Win.Spread.DrawingSpace.PSShape">
            <summary>
            Represents a shape object.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.#ctor">
            <summary>
            Creates a new shape object.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.CopyTo(System.Object)">
            <summary>
            Copies the properties of this object in presentation space (drawing space) to the target object. 
            </summary>
            <param name="target">Target object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new shape object from serialization.
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contexual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the shape object. 
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contexual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.Reset">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.Initialize">
            <summary>
            Initializes the shape object in the presentation space.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.SetInitialShape">
            <summary>
            Creates the initial shape object.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.GetClientRectangle(System.Drawing.Rectangle)">
            <summary>
            Gets the coordinates of the element.
            </summary>
            <param name="rectInput">Rectangle object containing the rectangle</param>
            <returns>Coordinates of the element</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.GetClientRectangleF(System.Drawing.RectangleF)">
            <summary>
            Gets the coordinates of the element.
            </summary>
            <param name="rectInput">Rectangle object containing the rectangle</param>
            <returns>Coordinates of the element</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.GetTextAndPictureRectangles(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle@,System.Drawing.Rectangle@)">
            <summary>
            Gets the bounding rectangles for the text and the picture in the presentation space.
            </summary>
            <param name="g">Graphics device</param>
            <param name="r">Bounding rectangle for the shape</param>
            <param name="rPict">Bounding rectangle for the picture</param>
            <param name="rText">Bounding rectangle for the text</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.FillBackgroundWithGradient(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Fills the background of the object with a gradient.
            </summary>
            <param name="g">Graphics device</param>
            <param name="r">Bounding rectangle for the shape</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.PaintText(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws the text for the shape.
            </summary>
            <param name="g">Graphics device</param>
            <param name="rText">Bounding rectangle for the text</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.ShouldSerializeShadowDirection">
            <summary>
            Determines if the ShadowDirection property should be serialized.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.ResetShadowDirection">
            <summary>
            Resets the direction of the shadow to the default, which is None.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.ShouldSerializeAlphaBlendShadowColor">
            <summary>
            Determines if the AlphaBlendShadowColor property should be serialized.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.ResetAlphaBlendShadowColor">
            <summary>
            Resets the amount of transparency for the shadow, which is 128.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.ShouldSerializeCanRenderText">
            <summary>
            Determines if the shape CanRenderText property should be serialized.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.ResetCanRenderText">
            <summary>
            Resets whether the shape can render its text property.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.ShouldSerializeShadowOffsetX">
            <summary>
            Determines if the ShadowOffsetX property should be serialized.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.ResetShadowOffsetX">
            <summary>
            Resets the amount of offset of the shadow in the horizontal direction 
            to the default value, which is 5.0F.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.ShouldSerializeShadowOffsetY">
            <summary>
            Determines if the ShadowOffsetX property should be serialized.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.ResetShadowOffsetY">
            <summary>
            Resets the amount of offset of the shadow in the vertical direction 
            to the default value, which is 5.0F.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.ShouldSerializeShadowColor">
            <summary>
            Determines if the ShadowColor property should be serialized.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.ResetShadowColor">
            <summary>
            Resets the color of the shadow to the default value.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.ResetDynamicSize">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.ShouldSerializeDynamicSize">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.ResetDynamicMove">
            <summary>
            Resets the dynamic move of the object.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.ShouldSerializeDynamicMove">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.HitTestTransparentShape(System.Drawing.Point,System.Boolean)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.PaintDropShadow(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draw the drop shadow.
            </summary>
            <param name="g">Graphics device</param>
            <param name="r">Bounding rectangle for the object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.OnPaintBackground(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Initiates a redraw for the object to repaint its background.
            </summary>
            <param name="g">Graphics device interface</param>
            <param name="rectInput">Rectangle to redraw</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.PaintBorder(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Not supported for basic shapes.
            </summary>
            <param name="g">Graphics device</param>
            <param name="r">Rectangle bounding the area</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.PaintForegroundImage(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws the foreground image.
            </summary>
            <param name="g">Graphics device</param>
            <param name="r">Bounding rectangle for the object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.FlipShapeVertical">
            <summary>
            Flips the shape vertically (along a vertical axis).
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.FlipShapeHorizontal">
            <summary>
            Flips the shape horizontally (along a horizontal axis).
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.ShouldSerializeShape">
            <summary>
            Determines if the shape should be saved to XML.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.Serialize(System.Object,System.Xml.XmlTextWriter)">
            <summary>
            Saves the object to XML.
            </summary>
            <param name="obj">Object to save</param>
            <param name="w">XmlTextWriter to which to write (save) the object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.SerializeProps(System.Xml.XmlTextWriter)">
            <summary>
            Saves the object properties to XML.
            </summary>
            <param name="w">XmlTextWriter to which to write (save) the object properties</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.Serialize(System.Xml.XmlTextWriter)">
            <summary>
            Saves the object to XML.
            </summary>
            <param name="w">XmlTextWriter to which to write (save) the object</param>
            <returns>true if successful; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.Deserialize(System.Object,System.Xml.XmlNodeReader)">
            <summary>
            Loads the object from XML.
            </summary>
            <param name="obj">Object</param>
            <param name="r">XmlNodeReader from which to load the object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.DeserializeShapeProps(System.Xml.XmlNodeReader)">
            <summary>
            Loads the object properties from XML.
            </summary>
            <param name="r">XmlNodeReader from which to load the object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.Deserialize(System.Xml.XmlNodeReader)">
            <summary>
            Loads the object from XML.
            </summary>
            <param name="r">XmlNodeReader from which to load the object </param>
            <returns>true if successful; false otherwise</returns>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.PSShape.ShadowDirection">
            <summary>
            Gets or sets the direction of the shadow.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.PSShape.AlphaBlendShadowColor">
            <summary>
            Gets or sets the amount of transparency of the shadow.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.PSShape.BackColor">
            <summary>
            Gets or sets the background color of the shape.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.PSShape.CanRenderText">
            <summary>
            Gets or sets whether the shape renders its text.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.PSShape.ShadowOffset">
            <summary>
            Gets or sets the amount of offset of the shadow.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.PSShape.ShadowOffsetX">
            <summary>
            Gets or sets the amount of horizontal offset of the shadow of the object.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.PSShape.ShadowOffsetY">
            <summary>
            Gets or sets the amount of vertical offset of the shadow of the object.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.PSShape.ShadowColor">
            <summary>
            Gets or sets the color of the shadow of the object.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.PSShape.Shape">
            <summary>
            Gets or sets the shape of the object.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.PSShape.DynamicSize">
            <summary>
            Gets or sets the dynamic size of the object.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.PSShape.DynamicMove">
            <summary>
            Gets or sets the dynamic move of the object.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.DrawingSpace.CustomShape">
            <summary>
            Represents a custom shape object.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.CustomShape.#ctor">
            <summary>
            Creates a custom shape.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.CustomShape.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new custom shape object from serialization.
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contexual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.CustomShape.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the shape object. 
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contexual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.CustomShape.SetInitialShape">
            <summary>
            Creates the initial shape.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.CustomShape.Shape">
            <summary>
            Gets or sets the shape.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.DrawingSpace.EllipseShape">
            <summary>
            Represents an ellipse shape object.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.EllipseShape.#ctor">
            <summary>
            Creates a new ellipse shape.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.EllipseShape.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new ellipse shape object from serialization.
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contexual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.EllipseShape.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the shape object. 
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contexual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.EllipseShape.SetInitialShape">
            <summary>
            Creates the initial ellipse shape.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.DrawingSpace.RectangleShape">
            <summary>
            Represents an rectangle shape object.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.RectangleShape.#ctor">
            <summary>
            Creates a new rectangle shape.  
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.RectangleShape.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new rectangle shape object from serialization.
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contexual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.RectangleShape.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the shape object. 
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contexual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.RectangleShape.SetInitialShape">
            <summary>
            Creates the initial rectangle shape.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.DrawingSpace.FivePointStarShape">
            <summary>
            Represents a five-pointed star shape object.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.FivePointStarShape.#ctor">
            <summary>
            Creates a new five-pointed star shape.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.FivePointStarShape.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new five-pointed star shape object from serialization.
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contexual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.FivePointStarShape.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the shape object. 
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contexual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.FivePointStarShape.SetInitialShape">
            <summary>
            Creates the initial five-pointed star shape.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.DrawingSpace.MultiSideShape">
            <summary>
            Represents a multi side shape object ( must be greater than 4 sides).
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.MultiSideShape.#ctor">
            <summary>
            Creates a new multiple-sided shape.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.MultiSideShape.CopyTo(System.Object)">
            <summary>
            Copies the properties of this object to the target object. 
            </summary>
            <param name="target">Target object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.MultiSideShape.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new multiple-sided shape object from serialization.
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contexual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.MultiSideShape.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the shape object. 
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contexual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.MultiSideShape.SetInitialShape">
            <summary>
            Creates the initial multiple-sided shape.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.MultiSideShape.Serialize(System.Object,System.Xml.XmlTextWriter)">
            <summary>
            Saves the object to XML.
            </summary>
            <param name="obj">Object</param>
            <param name="w">XmlTextWriter to which to write (save) the object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.MultiSideShape.SerializeProps(System.Xml.XmlTextWriter)">
            <summary>
            Saves the object properties to XML.
            </summary>
            <param name="w">XmlTextWriter to which to write (save) the object </param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.MultiSideShape.Serialize(System.Xml.XmlTextWriter)">
            <summary>
            Saves the object to XML.
            </summary>
            <param name="w">XmlTextWriter to which to write (save) the object </param>
            <returns>true if successful; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.MultiSideShape.Deserialize(System.Object,System.Xml.XmlNodeReader)">
            <summary>
            Loads the object from XML.
            </summary>
            <param name="obj">Object</param>
            <param name="r">XmlNodeReader from which to load the object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.MultiSideShape.DeserializeMultiSideProps(System.Xml.XmlNodeReader)">
            <summary>
            Loads the object properties from XML.
            </summary>
            <param name="r">XmlNodeReader from which to load the object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.MultiSideShape.Deserialize(System.Xml.XmlNodeReader)">
            <summary>
            Loads the object from XML.
            </summary>
            <param name="r">XmlNodeReader from which to load the object </param>
            <returns>true if successful; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.MultiSideShape.ShouldSerializeShape">
            <summary>
            Determines if the shape should be saved to XML.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.MultiSideShape.Sides">
            <summary>
            Gets or sets the number of sides in the shape.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.DrawingSpace.LineShape">
            <summary>
            Represents a line shape object.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.LineShape.#ctor">
            <summary>
            Creates a new line shape.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.LineShape.CopyTo(System.Object)">
            <summary>
            Copies the properties of this object to the target object. 
            </summary>
            <param name="target">Target object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.LineShape.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new line shape object from serialization.
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contexual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.LineShape.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the shape object. 
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contexual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.LineShape.SetInitialShape">
            <summary>
            Creates the initial line shape.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.LineShape.Contains(System.Drawing.Point,System.Boolean)">
            <summary>
            Determines whether the container contains the specified point ignoring transparency.
            </summary>
            <param name="pt">Point to check</param>
            <param name="ignoreTransparency">Whether to ignore transparency</param>
            <returns>true if it contains the point; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.LineShape.PaintRotateHandle(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws the rotate handle.
            </summary>
            <param name="g">Graphics device</param>
            <param name="r">Bounding rectangle for the object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.LineShape.GetRotateHandleRectangle(System.Drawing.Rectangle)">
            <summary>
            Gets the rotate handle rectangle.
            </summary>
            <param name="r">Rectangle</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.LineShape.GetGrabHandleRectangles(System.Drawing.Rectangle,System.Drawing.Rectangle[]@)">
            <summary>
            Gets the grab handle rectangles.
            </summary>
            <param name="r">Rectangle</param>
            <param name="handleRects">Arrary of handle rectangles</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.LineShape.OnPaint(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Initiates a redraw for the object to repaint itself. 
            </summary>
            <param name="g">Graphics device interface</param>
            <param name="rectInput">Rectangle to redraw</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.LineShape.OnPaintBackground(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Initiates a redraw for the line to repaint its background.
            </summary>
            <param name="g">Graphics device interface</param>
            <param name="rectInput">Rectangle to redraw</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.LineShape.PaintSpecialBackground(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Asks the control to repaint the line shape.
            </summary>
            <param name="g">Graphics device</param>
            <param name="r">Bounding rectangle for the line shape </param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.LineShape.PaintDropShadow(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draw the drop shadow.
            </summary>
            <param name="g">Graphics device</param>
            <param name="r">Bounding rectangle for the object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.LineShape.Serialize(System.Object,System.Xml.XmlTextWriter)">
            <summary>
            Saves the object to XML.
            </summary>
            <param name="obj">Object</param>
            <param name="w">XmlTextWriter to which to write (save) the object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.LineShape.SerializeProps(System.Xml.XmlTextWriter)">
            <summary>
            Saves the object properties to XML.
            </summary>
            <param name="w">XmlTextWriter to which to write (save) the object </param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.LineShape.Serialize(System.Xml.XmlTextWriter)">
            <summary>
            Saves the object to XML.
            </summary>
            <param name="w">XmlTextWriter to which to write (save) the object </param>
            <returns>true if successful; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.LineShape.Deserialize(System.Object,System.Xml.XmlNodeReader)">
            <summary>
            Loads the object from XML.
            </summary>
            <param name="obj">Object</param>
            <param name="r">XmlNodeReader from which to load the object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.LineShape.DeserializeLineProps(System.Xml.XmlNodeReader)">
            <summary>
            Loads the object properties from XML.
            </summary>
            <param name="r">XmlNodeReader from which to load the object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.LineShape.Deserialize(System.Xml.XmlNodeReader)">
            <summary>
            Loads the object from XML.
            </summary>
            <param name="r">XmlNodeReader from which to load the object </param>
            <returns>true if successful; false otherwise</returns>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.LineShape.ShapeOutlineThickness">
            <summary>
            Gets or sets the shape outline thickness (line thickness) for the object.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.LineShape.Thickness">
            <summary>
            Gets or sets the thickness of the line.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.LineShape.StartCap">
            <summary>
            Gets or sets the starting cap for the line.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.LineShape.EndCap">
            <summary>
            Gets or sets the ending cap for the line.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.LineShape.Width">
            <summary>
            Gets or sets the width of the line shape.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.LineShape.Height">
            <summary>
            Gets or sets the height of the line shape.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.DrawingSpace.TriangleShape">
            <summary>
            Represents a triangle shape object.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.TriangleShape.#ctor">
            <summary>
            Creates a new triangle shape.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.TriangleShape.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new triangle shape object from serialization.
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contexual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.TriangleShape.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the shape object. 
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contexual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.TriangleShape.SetInitialShape">
            <summary>
            Creates the initial triangle shape.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.DrawingSpace.DiamondShape">
            <summary>
            Represents a diamond shape object.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.DiamondShape.#ctor">
            <summary>
            Creates a new diamond shape.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.DiamondShape.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new diamond shape object from serialization.
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contexual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.DiamondShape.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the shape object. 
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contexual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.DiamondShape.SetInitialShape">
            <summary>
            Creates the initial diamond shape.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.DrawingSpace.ChevronShape">
            <summary>
            Represents a chevron shape object.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.ChevronShape.#ctor">
            <summary>
            Creates a new chevron shape.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.ChevronShape.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new chevron shape object from serialization.
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contexual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.ChevronShape.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the shape object. 
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contexual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.ChevronShape.SetInitialShape">
            <summary>
            Creates the initial chevron shape.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.DrawingSpace.ArrowShape">
            <summary>
            Represents an arrow shape object.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.ArrowShape.#ctor">
            <summary>
            Creates a new arrow shape.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.ArrowShape.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new arrow shape object from serialization.
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contexual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.ArrowShape.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the shape object. 
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contexual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.ArrowShape.SetInitialShape">
            <summary>
            Creates the initial arrow shape.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.DrawingSpace.CurvedArrowShape">
            <summary>
            Represents a curved arrow shape object.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.CurvedArrowShape.#ctor">
            <summary>
            Creates a new curved arrow shape.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.CurvedArrowShape.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new arrow shape object from serialization.
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contexual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.CurvedArrowShape.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the shape object. 
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contexual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.CurvedArrowShape.SetInitialShape">
            <summary>
            Creates the initial curved arrow shape.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.CurvedArrowShape.Initialize">
            <summary>
            Initializes the shape object in the presentation space.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.DrawingSpace.BentArrowShape">
            <summary>
            Represents a bent arrow shape object.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.BentArrowShape.#ctor">
            <summary>
            Creates a new bent arrow shape.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.BentArrowShape.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new bent arrow shape object from serialization.
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contexual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.BentArrowShape.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the shape object. 
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contexual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.BentArrowShape.SetInitialShape">
            <summary>
            Creates the initial bent arrow shape.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.BentArrowShape.Initialize">
            <summary>
            Initializes the shape object in the presentation space.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.DrawingSpace.SquareCaptionBalloonShape">
            <summary>
            Represents a square caption balloon shape object.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.SquareCaptionBalloonShape.#ctor">
            <summary>
            Creates a new square caption balloon shape.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.SquareCaptionBalloonShape.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new square caption balloon shape object from serialization.
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contexual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.SquareCaptionBalloonShape.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the shape object. 
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contexual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.SquareCaptionBalloonShape.SetInitialShape">
            <summary>
            Creates the initial square caption balloon shape.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.DrawingSpace.CalloutArrowShape">
            <summary>
            Represents a square callout with arrow shape object.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.CalloutArrowShape.#ctor">
            <summary>
            Creates a new square callout with arrow shape.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.CalloutArrowShape.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new square callout with arrow shape object from serialization.
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contexual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.CalloutArrowShape.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the shape object. 
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contexual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.CalloutArrowShape.SetInitialShape">
            <summary>
            Creates the initial square callout with arrow shape.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.DrawingSpace.TwoWayArrowShape">
            <summary>
            Represents a two way arrow shape object.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.TwoWayArrowShape.#ctor">
            <summary>
            Creates a new two way arrow shape.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.TwoWayArrowShape.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new two way arrow shape object from serialization.
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contexual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.TwoWayArrowShape.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the shape object. 
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contexual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.TwoWayArrowShape.SetInitialShape">
            <summary>
            Creates the initial two way arrow shape.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.TwoWayArrowShape.Initialize">
            <summary>
            Initializes the shape object in the presentation space.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.DrawingSpace.ThreeWayArrowShape">
            <summary>
            Represents a three way arrow shape object.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.ThreeWayArrowShape.#ctor">
            <summary>
            Creates a new three way arrow shape.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.ThreeWayArrowShape.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new three way arrow shape object from serialization.
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contexual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.ThreeWayArrowShape.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the shape object. 
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contexual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.ThreeWayArrowShape.SetInitialShape">
            <summary>
            Creates the initial three way arrow shape.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.DrawingSpace.FourWayArrowShape">
            <summary>
            Represents a four way arrow shape object.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.FourWayArrowShape.#ctor">
            <summary>
            Creates a new four way arrow shape.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.FourWayArrowShape.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new four way arrow shape object from serialization.
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contexual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.FourWayArrowShape.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the shape object. 
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contexual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.FourWayArrowShape.SetInitialShape">
            <summary>
            Creates the initial four way arrow shape.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.DrawingSpace.UniversalNoShape">
            <summary>
            Represents a universal "no" shape object.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.UniversalNoShape.#ctor">
            <summary>
            Creates a new universal "no" shape.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.UniversalNoShape.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new universal "no" shape object from serialization.
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contexual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.UniversalNoShape.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the shape object. 
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contexual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.UniversalNoShape.SetInitialShape">
            <summary>
            Creates the initial universal "no" shape.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.UniversalNoShape.Initialize">
            <summary>
            Initializes the shape object in the presentation space.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.DrawingSpace.LightningBoltShape">
            <summary>
            Represents a lightning bolt shape object.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.LightningBoltShape.#ctor">
            <summary>
            Creates a new lightning bolt shape.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.LightningBoltShape.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new lightning bolt shape object from serialization.
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contexual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.LightningBoltShape.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the shape object. 
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contexual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.LightningBoltShape.SetInitialShape">
            <summary>
            Creates the initial lightning bolt shape.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.LightningBoltShape.Initialize">
            <summary>
            Initializes the shape object in the presentation space.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.DrawingSpace.DonutShape">
            <summary>
            Represents a donut shape object.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.DonutShape.#ctor">
            <summary>
            Creates a new donut shape.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.DonutShape.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new donut shape object from serialization.
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contexual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.DonutShape.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the shape object. 
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contexual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.DonutShape.SetInitialShape">
            <summary>
            Creates the initial donut shape.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.DrawingSpace.BannerShape">
            <summary>
            Represents a banner shape object.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.BannerShape.#ctor">
            <summary>
            Creates a new banner shape.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.BannerShape.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a banner shape object from serialization.
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contexual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.BannerShape.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the shape object. 
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contexual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.BannerShape.SetInitialShape">
            <summary>
            Creates the initial banner shape.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.BannerShape.Initialize">
            <summary>
            Initializes the shape object in the presentation space.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.DrawingSpace.HeartShape">
            <summary>
            Represents a heart shape object.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.HeartShape.#ctor">
            <summary>
            Creates a new heart shape.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.HeartShape.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new heart shape object from serialization.
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contexual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.HeartShape.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the shape object. 
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contexual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.HeartShape.SetInitialShape">
            <summary>
            Creates the initial heart shape.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.HeartShape.Initialize">
            <summary>
            Initializes the shape object in the presentation space.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.DrawingSpace.CrescentShape">
            <summary>
            Represents a crescent shape object.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.CrescentShape.#ctor">
            <summary>
            Creates a new crescent shape.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.CrescentShape.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new crescent shape object from serialization.
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contexual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.CrescentShape.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the shape object. 
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contexual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.CrescentShape.SetInitialShape">
            <summary>
            Creates the initial crescent shape.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.DrawingSpace.ArcShape">
            <summary>
            Represents a arc shape object.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.ArcShape.#ctor">
            <summary>
            Creates a new arc shape.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.ArcShape.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new arc shape object from serialization.
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contexual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.ArcShape.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the shape object. 
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contexual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.ArcShape.SetInitialShape">
            <summary>
            Creates the initial arc shape.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.ArcShape.Initialize">
            <summary>
            Initializes the shape object in the presentation space.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.DrawingSpace.BurstShape">
            <summary>
            Represents a burst shape object.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.BurstShape.#ctor">
            <summary>
            Creates a new burst shape.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.BurstShape.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new burst shape object from serialization.
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contexual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.BurstShape.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the shape object. 
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contexual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.BurstShape.SetInitialShape">
            <summary>
            Creates the initial burst shape.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.BurstShape.Initialize">
            <summary>
            Initializes the shape object in the presentation space.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.DrawingSpace.RoundedRectangleShape">
            <summary>
            Represents a rounded rectangle shape object.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.RoundedRectangleShape.#ctor">
            <summary>
            Creates a new rounded rectangle shape.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.RoundedRectangleShape.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new rounded rectangle shape object from serialization.
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contexual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.RoundedRectangleShape.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the shape object. 
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contexual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.RoundedRectangleShape.SetInitialShape">
            <summary>
            Creates the initial rounded rectangle shape.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.DrawingSpace.CaptionBalloonShape">
            <summary>
            Represents a caption balloon shape object.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.CaptionBalloonShape.#ctor">
            <summary>
            Creates a new caption balloon shape.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.CaptionBalloonShape.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new caption balloon shape object from serialization.
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contexual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.CaptionBalloonShape.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the shape object. 
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contexual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.CaptionBalloonShape.SetInitialShape">
            <summary>
            Creates the initial caption balloon shape.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.CaptionBalloonShape.Initialize">
            <summary>
            Initializes the shape object in the presentation space.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.DrawingSpace.ThoughtBalloonShape">
            <summary>
            Represents a thought balloon shape object.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.ThoughtBalloonShape.#ctor">
            <summary>
            Creates a new thought balloon shape.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.ThoughtBalloonShape.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new thought balloon shape object from serialization.
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contexual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.ThoughtBalloonShape.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the shape object. 
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contexual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.ThoughtBalloonShape.SetInitialShape">
            <summary>
            Creates the initial thought balloon shape.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.DrawingSpace.ExclamationBalloonShape">
            <summary>
            Represents a exclamation balloon shape object.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.ExclamationBalloonShape.#ctor">
            <summary>
            Creates a new exclamation balloon shape.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.ExclamationBalloonShape.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new exclamation balloon shape object from serialization.
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contexual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.ExclamationBalloonShape.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the shape object. 
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contexual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.ExclamationBalloonShape.SetInitialShape">
            <summary>
            Creates the initial exclamation balloon shape.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.ExclamationBalloonShape.Initialize">
            <summary>
            Initializes the shape object in the presentation space.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.DrawingSpace.CheckmarkShape">
            <summary>
            Represents a check mark shape object.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.CheckmarkShape.#ctor">
            <summary>
            Creates a new check mark shape.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.CheckmarkShape.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new checkmark shape object from serialization.
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contexual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.CheckmarkShape.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the shape object. 
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contexual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.CheckmarkShape.SetInitialShape">
            <summary>
            Creates the initial check mark shape.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.CheckmarkShape.Initialize">
            <summary>
            Initializes the shape object in the presentation space.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.DrawingSpace.XShape">
            <summary>
            Represents an X shape object.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.XShape.#ctor">
            <summary>
            Creates a new X shape.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.XShape.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new X shape object from serialization.
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contexual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.XShape.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the shape object. 
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contexual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.XShape.SetInitialShape">
            <summary>
            Creates the initial X shape.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.XShape.Initialize">
            <summary>
            Initializes the shape object in the presentation space.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.DrawingSpace.TextShape">
            <summary>
            Represents a text string shape object.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.TextShape.#ctor">
            <summary>
            Creates a new text string shape.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.TextShape.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new text string shape object from serialization.
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contexual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.TextShape.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the shape object. 
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contexual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.TextShape.OnFontChanged(System.EventArgs)">
            <summary>
            Returns event information when the font for the element has changed
            </summary>
            <param name="e">Object with event data</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.TextShape.ResetText">
            <summary>
            Resets the text to the default value, which is "abc".
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.TextShape.SetShapeFromText(System.String)">
            <summary>
            Sets the shape of the text shape.
            </summary>
            <param name="shapeString">String</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.TextShape.SetInitialShape">
            <summary>
            Creates the initial text shape.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.TextShape.Deserialize(System.Xml.XmlNodeReader)">
            <summary>
            Loads the object from XML.
            </summary>
            <param name="r">XmlNodeReader from which to load the object </param>
            <returns>true if successful; false otherwise</returns>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.TextShape.Text">
            <summary>
            Gets or sets the text for the text string shape.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.DrawingSpace.Internal.StickyNoteCommentBase">
            <summary>
            Represents a shape-based comment object.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.StickyNoteCommentBase.#ctor">
            <summary>
            Creates a new shape-based comment.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.StickyNoteCommentBase.#ctor(System.Drawing.Rectangle)">
            <summary>
            Creates a new shape-based comment in the specified bounds.
            </summary>
            <param name="rBounds">Rectangle bounds of the pop-up comment</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.StickyNoteCommentBase.#ctor(System.Drawing.Rectangle,System.Drawing.Point)">
            <summary>
            Creates a new shape-based comment in the specified bounds.
            </summary>
            <param name="rBounds">Rectangle bounds of the pop-up comment</param>
            <param name="anchorPt">Anchor point</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.StickyNoteCommentBase.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new shape-based comment from serialization.
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contexual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.StickyNoteCommentBase.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the shape-based comment.
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contexual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.StickyNoteCommentBase.Reset">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.StickyNoteCommentBase.ShouldSerializeCanRenderText">
            <summary>
            Determines if the shape CanRenderText property should be serialized.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.StickyNoteCommentBase.ResetCanRenderText">
            <summary>
            Resets whether the shape can render it's Text property.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.StickyNoteCommentBase.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the bounds for the pop-up comment.
            </summary>
            <param name="x">X-coordinate for bounding rectangle's top-left corner </param>
            <param name="y">Y-coordinate for bounding rectangle's top-left corner </param>
            <param name="width">Width of bounding rectangle in pixels </param>
            <param name="height">Height of bounding rectangle in pixels</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.StickyNoteCommentBase.AdjustStringFormat(System.Drawing.StringFormat@)">
            <summary>
            Adjusts the string format.
            </summary>
            <param name="fmt"></param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.StickyNoteCommentBase.PaintSpecialBackground(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Asks the control to repaint the pop-up comment background.
            </summary>
            <param name="g">Graphics device</param>
            <param name="r">Bounding rectangle for the pop-up comment</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.StickyNoteCommentBase.PaintSpecialForeground(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Asks the control to repaint the pop-up comment foreground.
            </summary>
            <param name="g">Graphics device</param>
            <param name="r">Bounded rectangle for the pop-up comment</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.StickyNoteCommentBase.PaintDropShadow(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Paints the drop shadow around the pop-up comment
            </summary>
            <param name="g">Graphics device</param>
            <param name="r">Bounding rectangle for the pop-up comment</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.StickyNoteCommentBase.PaintFocusRectangle(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Paints the focus rectangle for the pop-up comment.
            </summary>
            <param name="g">Graphics device</param>
            <param name="r">Bounding rectangle for the pop-up comment</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.StickyNoteCommentBase.Serialize(System.Xml.XmlTextWriter)">
            <summary>
            Saves the object to XML.
            </summary>
            <param name="w">XmlTextWriter object used to save the object </param>
            <returns>true if successful; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.StickyNoteCommentBase.Deserialize(System.Xml.XmlNodeReader)">
            <summary>
            Loads the object from XML.
            </summary>
            <param name="r">XmlNodeReader from which to load the object </param>
            <returns>true if successful; false otherwise</returns>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.Internal.StickyNoteCommentBase.CanRotate">
            <summary>
            Gets or sets whether the pop-up comment to rotate.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.Internal.StickyNoteCommentBase.Comment">
            <summary>
            Gets or sets the text of the pop-up comment.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.Internal.StickyNoteCommentBase.AnchorPoint">
            <summary>
            Gets or sets the anchor point of the pop-up comment.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.DrawingSpace.Internal.CellNote">
            <summary>
            Represents a floating cell note object.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.CellNote.#ctor">
            <summary>
            Creates a new floating cell note.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.CellNote.#ctor(FarPoint.Win.Spread.SheetView)">
            <summary>
            Creates a new floating cell note for the specified sheet.
            </summary>
            <param name="sheet">Sheet (SheetView object)</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.CellNote.#ctor(FarPoint.Win.Spread.SheetView,System.Int32,System.Int32)">
            <summary>
            Creates a new floating cell note for the specified sheet, with the specified row and column.
            </summary>
            <param name="sheet">Sheet (SheetView object)</param>
            <param name="row">Row index</param>
            <param name="column">Column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.CellNote.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new cell note from serialization.
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contexual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.CellNote.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the cell note.
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contexual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.CellNote.ShouldSerializeCanRotate">
            <summary>
            Determine if the CanRotate property should be serialized.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.CellNote.Update">
            <summary>
            Causes the control to redraw the invalidated regions with its client area.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.CellNote.FillBackgroundWithGradient(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Fills the background of the cell note with a gradient.
            </summary>
            <param name="g">Graphics device</param>
            <param name="r">Bounding rectangle for the shape</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.CellNote.OnPaintBackground(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Asks the control to repaint the cell note background.
            </summary>
            <param name="g">Graphics device</param>
            <param name="rectInput">Rectangle bounding the area of the cell note</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.CellNote.OnPaint(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Asks the control to repaint the cell note.
            </summary>
            <param name="g">Graphics device</param>
            <param name="rectInput">Rectangle bounding the area of the cell note</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.CellNote.ShouldSerializeName">
            <summary>
            Determines if the Name property should be serialized.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.CellNote.ShouldSerializeShape">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.CellNote.ShouldSerializeCanSize">
            <summary>
            Determines if the CanSize property should be serialized.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.CellNote.ShouldSerializeDynamicMove">
            <summary>
            Determines if the DynamicMove property should be serialized.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.CellNote.ShouldSerializeDynamicSize">
            <summary>
            Determines if the DynamicSize property should be serialized.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.CellNote.Serialize(System.Xml.XmlTextWriter)">
            <summary>
            Saves the floating cell note to XML.
            </summary>
            <param name="w">XmlTextWriter to which to write (save) the cell note</param>
            <returns>true if successful; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.CellNote.Deserialize(System.Xml.XmlNodeReader)">
            <summary>
            Loads the floating cell note from XML.
            </summary>
            <param name="r">XmlNodeReader from which to load the object </param>
            <returns>true if successful; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.CellNote.PaintText(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws the floating cell note.
            </summary>
            <param name="g">Graphics device to use</param>
            <param name="rText">Rectangle in which to display the text</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.CellNote.AdjustStringFormat(System.Drawing.StringFormat@)">
            <summary>
            Adjusts the format of the cell note string.
            </summary>
            <param name="fmt">Format for the string</param>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.Internal.CellNote.Sheet">
            <summary>
            Gets or sets the sheet for the floating cell note.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.Internal.CellNote.Row">
            <summary>
            Gets or sets the row for the floating cell note.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.Internal.CellNote.Column">
            <summary>
            Gets or sets the column for the floating cell note.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.Internal.CellNote.CanRotate">
            <summary>
            Gets or sets whether the floating cell note can be rotated by the end user.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.Internal.CellNote.RotationAngle">
            <summary>
            Gets or sets the rotation angle for the floating cell note.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.Internal.CellNote.Visible">
            <summary>
            Gets or sets whether the object is visible.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.Internal.CellNote.AnchorPoint">
            <summary>
            Gets or sets the point at which to anchor the floating cell note.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.Internal.CellNote.CellRange">
            <summary>
            Gets the range of cells.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.Internal.CellNote.Top">
            <summary>
            Gets or sets the Y-coordinate of the object.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.Internal.CellNote.Left">
            <summary>
            Gets or sets the X-coordinate of the object.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.Internal.CellNote.Height">
            <summary>
            Gets or sets the height of the object.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.Internal.CellNote.Width">
            <summary>
            Gets or sets the width of the object.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.Internal.CellNote.Name">
            <summary>
            Gets or sets the name of the floating cell note.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.Internal.CellNote.Text">
            <summary>
            Gets or sets the text of the floating cell note.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.DrawingSpace.Internal.PSObjectConverter">
            <summary>
            Converts instances of PSObject objects to and from other types.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.PSObjectConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns a value indicating whether a PSObject object can be converted to the specified type.
            </summary>
            <param name="context">ITypeDescriptorContext</param>
            <param name="destinationType">Type</param>
            <returns>True if a PSObject object can be converted to the specified type, and false otherwise.</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.PSObjectConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the PSObject object to the specified type.
            </summary>
            <param name="context">ITypeDescriptorContext</param>
            <param name="culture">CultureInfo</param>
            <param name="value">object</param>
            <param name="destinationType">Type</param>
            <returns>Converted PSObject object.</returns>
        </member>
        <member name="T:FarPoint.Win.Spread.DrawingSpace.Internal.PSGradientConverter">
            <summary>
            Converts instances of PSGradient objects to and from other types.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.PSGradientConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns a value indicating whether a PSGradient object can be converted to the specified type.
            </summary>
            <param name="context">ITypeDescriptorContext</param>
            <param name="destinationType">Type</param>
            <returns>True if a PSGradient object can be converted to the specified type, and false otherwise.</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.PSGradientConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the PSGradient object to the specified type.
            </summary>
            <param name="context">ITypeDescriptorContext</param>
            <param name="culture">CultureInfo</param>
            <param name="value">object</param>
            <param name="destinationType">Type</param>
            <returns>Converted gradient object.</returns>
        </member>
        <member name="T:FarPoint.Win.Spread.DrawingSpace.Internal.GradientSectionConverter">
            <summary>
            Converts instances of GradientSection objects to and from other types.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.GradientSectionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns a value indicating whether a GradientSection object can be converted to the specified type.
            </summary>
            <param name="context">ITypeDescriptorContext</param>
            <param name="destinationType">Type</param>
            <returns>True if a GradientSection object can be converted to the specified type, and false otherwise.</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.GradientSectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the GradientSection object to the specified type.
            </summary>
            <param name="context">ITypeDescriptorContext</param>
            <param name="culture">CultureInfo</param>
            <param name="value">object</param>
            <param name="destinationType">Type</param>
            <returns>Converted gradient section object.</returns>
        </member>
        <member name="T:FarPoint.Win.Spread.CellHorizontalAlignment">
            <summary>
            Specifies the horizontal alignment of the cell contents.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CellHorizontalAlignment.General">
            <summary>
            Aligns the cell contents according to the cell's interpretation of the contents
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CellHorizontalAlignment.Left">
            <summary>
            Aligns the cell contents to the left
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CellHorizontalAlignment.Center">
            <summary>
            Centers the contents in the cell horizontally
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CellHorizontalAlignment.Right">
            <summary>
            Aligns the cell contents to the right
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.CellVerticalAlignment">
            <summary>
            Specifies the vertical alignment of the cell contents.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CellVerticalAlignment.General">
            <summary>
            Aligns the cell contents according to the cell's interpretation of the contents
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CellVerticalAlignment.Top">
            <summary>
            Aligns the cell contents to the top
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CellVerticalAlignment.Center">
            <summary>
            Centers the contents in the cell vertically
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CellVerticalAlignment.Bottom">
            <summary>
            Aligns the cell contents to the bottom
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.NoteStyle">
            <summary>
            Specifies how the cell notes are displayed.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.NoteStyle.Hidden">
            <summary>
            Does not display the cell note or the cell note indicator
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.NoteStyle.PopupNote">
            <summary>
            Displays the cell note as a floating object only when the mouse is over the cell note indicator
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.NoteStyle.StickyNote">
            <summary>
            Displays the cell note always as a movable box
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.SheetStyleProperty">
            <summary>
            Represents a style property in the <see cref="T:FarPoint.Win.Spread.StyleInfo"/> object.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SheetStyleProperty.BackColor">
            <summary>
            Represents the background color of the sheet style.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SheetStyleProperty.ForeColor">
            <summary>
            Represents the text color of the sheet style.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SheetStyleProperty.HorizontalAlignment">
            <summary>
            Represents the horizontal alignment of the sheet style.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SheetStyleProperty.VerticalAlignment">
            <summary>
            Represents the vertical alignment of the sheet style.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SheetStyleProperty.Font">
            <summary>
            Represents the font of the sheet style.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SheetStyleProperty.Border">
            <summary>
            Represents the border setting of the sheet style.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SheetStyleProperty.CellType">
            <summary>
            Represents the cell type of the sheet style.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SheetStyleProperty.Editor">
            <summary>
            Represents the editor of the sheet style.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SheetStyleProperty.Renderer">
            <summary>
            Represents the renderer of the sheet style.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SheetStyleProperty.Formatter">
            <summary>
            Represents the formatter of the sheet style.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SheetStyleProperty.Locked">
            <summary>
            Represents the lock setting of the sheet style.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SheetStyleProperty.NoteStyle">
            <summary>
            Represents the note style setting of the sheet style.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SheetStyleProperty.CanFocus">
            <summary>
            Represents the can focus setting of the sheet style.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SheetStyleProperty.TabStop">
            <summary>
            Represents the tab stop setting of the sheet style.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SheetStyleProperty.NoteIndicatorColor">
            <summary>
            Represents the cell note indicator color setting of the sheet style.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SheetStyleProperty.Parent">
            <summary>
            Represents the parent of the sheet style.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetStyleProperty.#ctor(System.String)">
            <summary>
            Creates a new SheetStyleProperty object for the specified property name.
            </summary>
            <param name="text">Name of the style property</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetStyleProperty.ToString">
            <summary>
            Returns the name of the property.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.CellTypeEditor">
            <summary>
            Editor for the CellType property.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellTypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits the cell type value.
            </summary>
            <param name="context">ITypeDescriptorContext</param>
            <param name="provider">IServiceProvider</param>
            <param name="value">object</param>
            <returns>object</returns>
            <exception cref="T:System.ArgumentException">
            Not a valid cell type.
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.CellTypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets the style of the type editor (which is drop-down).
            </summary>
            <param name="context">ITypeDescriptorContext</param>
            <returns>UITypeEditorEditStyle</returns>
        </member>
        <member name="T:FarPoint.Win.Spread.Model.RowCalc">
            <summary>
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.ParseSpreadFormat.#ctor">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.ParseSpreadFormat.ParseDateTimeFormat(FarPoint.Win.Spread.CellType.ICellType,System.Int16@)">
            <summary>
            ParseDateTimeFormat
            </summary>
            <param name="cellType"></param>
            <param name="excelFormatID"></param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Spread.ParseSpreadFormat.ParseNumberFormat(System.Globalization.NumberFormatInfo,FarPoint.Win.Spread.ParseSpreadFormat.NumberFormatType,System.Boolean,System.Boolean,FarPoint.Win.Spread.CellType.LeadingZero,System.Int16@)">
            <summary>
            ParseNumberFormat
            </summary>
            <param name="format"></param>
            <param name="numberType"></param>
            <param name="isNegRed"></param>
            <param name="isFixedPoint"></param>
            <param name="leadingZero"></param>
            <param name="excelFormatID"></param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Spread.ParseSpreadFormat.ParseNumberFormat(FarPoint.Win.Spread.CellType.ICellType,System.Int16@)">
            <summary>
            ParseNumberFormat
            </summary>
            <param name="cellType"></param>
            <param name="excelFormatID"></param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Spread.ParseExcelFormat.#ctor">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.ParseExcelFormat.#ctor(FarPoint.Win.Spread.IParseFormatHandler)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.ParseExcelFormat.#ctor(FarPoint.Win.Spread.IParseFormatHandler,System.Object)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.ParseExcelFormat.Parse(FarPoint.Excel.IExcelXF)">
            <summary>
            Internal use only.
            </summary>
            <param name="xf"></param>
        </member>
        <member name="M:FarPoint.Win.Spread.ParseExcelFormat.Parse(FarPoint.Excel.IExcelXF,System.Object)">
            <summary>
            Internal use only.
            </summary>
            <param name="xf"></param>
            <param name="o"></param>
        </member>
        <member name="P:FarPoint.Win.Spread.ParseExcelFormat.Handler">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.ParseExcelFormat.PassThruObject">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.PrintNotes">
            <summary>
            Specifies how cell notes are printed.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.PrintNotes.None">
            <summary>
            [0] Does not print the cell notes
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.PrintNotes.AtEnd">
            <summary>
            [1] Prints the cell notes in summary form after the last sheet is printed
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.PrintNotes.AsDisplayed">
            <summary>
            [2] Prints the cell notes as they are displayed on the sheet
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.PrintOrientation">
            <summary>
            Specifies the page orientation used to print the sheet.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.PrintOrientation.Auto">
            <summary>
            [0] Uses the current printer setting
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.PrintOrientation.Portrait">
            <summary>
            [1] Prints the sheet in portrait orientation
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.PrintOrientation.Landscape">
            <summary>
            [2] Prints the sheet in landscape orientation
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.PrintPageOrder">
            <summary>
            Specifies the order in which pages are printed.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.PrintPageOrder.Auto">
            <summary>
            [0] Automatically determines the best order for printing pages
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.PrintPageOrder.DownThenOver">
            <summary>
            [1] Prints pages down then across
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.PrintPageOrder.OverThenDown">
            <summary>
            [2] Prints pages across then down
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.Centering">
            <summary>
            Specifices the type of centering for the printed page.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.Centering.None">
            <summary>
            [0] Does not center the printed page at all.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.Centering.Horizontal">
            <summary>
            [1] Centers the printed layout horizontally on the page.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.Centering.Vertical">
            <summary>
            [2] Centers the printed layout vertically on the page.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.Centering.Both">
            <summary>
            [3] Centers the printed layout both horizontally and vertically on the page.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.PrintType">
            <summary>
            Specifies the type of print range used to print the sheet.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.PrintType.All">
            <summary>
            [0] Prints the entire sheet
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.PrintType.CellRange">
            <summary>
            [1] Prints the area specified by the 
            <see cref="P:FarPoint.Win.Spread.PrintInfo.ColStart"/>, 
            <see cref="P:FarPoint.Win.Spread.PrintInfo.ColEnd"/>, 
            <see cref="P:FarPoint.Win.Spread.PrintInfo.RowStart"/>, 
            and <see cref="P:FarPoint.Win.Spread.PrintInfo.RowEnd"/> properties
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.PrintType.CurrentPage">
            <summary>
            [2] Prints the current page of the sheet
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.PrintType.PageRange">
            <summary>
            [3] Prints the pages in the range specified by the 
            <see cref="P:FarPoint.Win.Spread.PrintInfo.PageStart"/> 
            and <see cref="P:FarPoint.Win.Spread.PrintInfo.PageEnd"/> properties
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.PageLayout">
            <summary>
            Represents the size of a page to be printed.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.PageLayout.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
            <summary>
            Creates a printed page layout (PageLayout object) for the specified range of rows and columns.
            </summary>
            <param name="row1">Starting row index</param>
            <param name="column1">Starting column index</param>
            <param name="row2">Ending row index</param>
            <param name="column2">Ending column index</param>
            <param name="pageWidth">Width of page</param>
            <param name="pageHeight">Height of page</param>
        </member>
        <member name="M:FarPoint.Win.Spread.PageLayout.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a printed page layout (PageLayout object) for the specified range of rows and columns.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.PageLayout.RowStart">
            <summary>
            Gets the row coordinate of the upper-left corner of the range of cells to print.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.PageLayout.ColumnStart">
            <summary>
            Gets the column coordinate of the upper-left corner of the range of cells to print.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.PageLayout.RowEnd">
            <summary>
            Gets the row coordinate of the upper-left corner of the range of cells to print.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.PageLayout.ColumnEnd">
            <summary>
            Gets the column coordinate of the upper-left corner of the range of cells to print
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.PageLayout.PageWidth">
            <summary>
            Gets the width of the printed page.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.PageLayout.PageHeight">
            <summary>
            Gets the height of the printed page.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.PageLayoutModel.#ctor">
            <summary>
            Creates a new printed page layout model that is initially empty.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.PageLayoutModel.Add(FarPoint.Win.Spread.PageLayout)">
            <summary>
            Adds a printed page layout to the model.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.PageLayoutModel.Item(System.Int32)">
            <summary>
            Gets the printed page layout at the specified index.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.PageLayoutModel.Count">
            <summary>
            Gets the number of printed page layouts in the model.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.PrintMargin">
            <summary>
            Represents the margin for the printed page.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.PrintMargin.#ctor">
            <summary>
            Creates a new PrintMargin object with margins set to zero.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.PrintMargin.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a new PrintMargin object with the specified margins.
            </summary>
            <param name="left">Size of the left margin in pixels</param>
            <param name="top">Size of the top margin in pixels</param>
            <param name="right">Size of the right margin in pixels</param>
            <param name="bottom">Size of the bottom margin in pixels</param>
            <param name="header">Size of the header margin in pixels</param>
            <param name="footer">Size of the footer margin in pixels</param>
        </member>
        <member name="M:FarPoint.Win.Spread.PrintMargin.ToString">
            <summary>
            Always returns null.
            </summary>
            <returns>Always returns null.</returns>
        </member>
        <member name="P:FarPoint.Win.Spread.PrintMargin.Left">
            <summary>
            Gets or sets the left margin for the printed page.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.PrintMargin.Top">
            <summary>
            Gets or sets the top margin for the printed page.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.PrintMargin.Right">
            <summary>
            Gets or sets the right margin for the printed page.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.PrintMargin.Bottom">
            <summary>
            Gets or sets the bottom margin for the printed page.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.PrintMargin.Header">
            <summary>
            Gets or sets the header margin for the printed page.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.PrintMargin.Footer">
            <summary>
            Gets or sets the footer margin for the printed page.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.ResetOption">
            <summary>
            Specifies whether the rules or a particular rule should reset before testing the next rule.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.ResetOption.None">
            <summary>
            [0] Never resets the rule(s)
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.ResetOption.Current">
            <summary>
            [1] Resets the current rule
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.ResetOption.All">
            <summary>
            [2] Resets all the rules 
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.SmartPrintRule">
            <summary>
            Represents the rules that determine how best to print.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SmartPrintRule.ResetOption">
            <summary>
            Specifies whether to reset the rules that determine how best to print.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.BestFitColumnRule">
            <summary>
            Represents the rules that determine how best to print the columns.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.BestFitColumnRule.#ctor(FarPoint.Win.Spread.ResetOption)">
            <summary>
            Initializes an instance of the BestFitColumnRule class, with the specified reset option. 
            </summary>
            <param name="resetOption">Whether to reset the rules or a particular rule</param>
        </member>
        <member name="P:FarPoint.Win.Spread.BestFitColumnRule.ResetOption">
            <summary>
            Specifies whether to reset the rules or a particular rule before testing the next SmartPrint rule.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.LandscapeRule">
            <summary>
            Represents the rules that determine whether to print in landscape format.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.LandscapeRule.#ctor(FarPoint.Win.Spread.ResetOption)">
            <summary>
            Initializes an instance of the LandscapeRule class, with the specified reset option. 
            </summary>
            <param name="resetOption">Whether to reset the rules or a particular rule</param>
        </member>
        <member name="P:FarPoint.Win.Spread.LandscapeRule.ResetOption">
            <summary>
            Specifies whether to reset the rules or a particular rule before testing the next SmartPrint rule.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.ScaleRule">
            <summary>
            Represents the rules that determine how to scale the printed sheet.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.ScaleRule.#ctor(FarPoint.Win.Spread.ResetOption,System.Single,System.Single,System.Single)">
            <summary>
            Initializes an instance of the ScaleRule class, with the specified reset option, factors, and intervals. 
            </summary>
            <param name="resetOption">Whether to reset the rules or a particular rule</param>
            <param name="startFactor">Zoom factor at which to begin testing </param>
            <param name="endFactor">Zoom factor at which to stop testing </param>
            <param name="interval">Amount by which to decrement the zoom factor between scale tests </param>
        </member>
        <member name="P:FarPoint.Win.Spread.ScaleRule.ResetOption">
            <summary>
            Specifies whether to reset the rules or a particular rule before testing the next SmartPrint rule.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.ScaleRule.StartFactor">
            <summary>
            Gets or sets the zoom factor at which to begin testing.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.ScaleRule.EndFactor">
            <summary>
            Gets or sets the zoom factor at which to stop testing.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.ScaleRule.Interval">
            <summary>
            Gets or sets the amount by which to decrement the zoom factor between scale tests.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.SmartPrintRuleConverter">
            <summary>
            Converts SmartPrintRule objects from one data type to another.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SmartPrintRuleConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns a value indicating whether a SmartPrintRule object can be converted to the specified type.
            </summary>
            <param name="context">ITypeDescriptorContext</param>
            <param name="destinationType">Type</param>
            <returns>True if a SmartPrintRule object can be converted to the specified type, and false otherwise.</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.SmartPrintRuleConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the SmartPrintRule object to the specified type.
            </summary>
            <param name="context">ITypeDescriptorContext</param>
            <param name="culture">CultureInfo</param>
            <param name="value">Object</param>
            <param name="destinationType">Type</param>
            <returns>Specified type representation of a SmartPrintRule object.</returns>
        </member>
        <member name="T:FarPoint.Win.Spread.SmartPrintRulesCollection">
            <summary>
            Represents the set of rules that determine how best to print.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SmartPrintRulesCollection.#ctor">
            <summary>
            Creates a new SmartPrintRulesCollection.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SmartPrintRulesCollection.CopyTo(System.Collections.ArrayList,System.Int32)">
            <summary>
            Copies the rules (SmartPrintRule objects) in the collection to the specified array list.
            </summary>
            <param name="array">Array list to which to paste the rules (SmartPrintRule objects)</param>
            <param name="index">Index in the array at which to paste the rules</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SmartPrintRulesCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the rules (SmartPrintRule objects) in the collection to the specified array.
            </summary>
            <param name="array">Array to which to paste the rules (SmartPrintRule objects)</param>
            <param name="index">Index in the array at which to paste the rules</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SmartPrintRulesCollection.Add(System.Object)">
            <summary>
            Adds a rule (SmartPrintRule object) to the collection.
            </summary>
            <param name="value">Rule (SmartPrintRule object) to add</param>
            <exception cref="T:System.ArgumentException">Specified object is not valid; must be a SmartPrintRule object</exception>
        </member>
        <member name="M:FarPoint.Win.Spread.SmartPrintRulesCollection.Add(FarPoint.Win.Spread.SmartPrintRule)">
            <summary>
            Adds a rule (SmartPrintRule object) to the collection.
            </summary>
            <param name="value">Rule (SmartPrintRule object) to add</param>
            <exception cref="T:System.ArgumentException">Specified object is not valid; must be a SmartPrintRule object</exception>
        </member>
        <member name="M:FarPoint.Win.Spread.SmartPrintRulesCollection.Clear">
            <summary>
            Removes all rules (SmartPrintRule objects) from the collection.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SmartPrintRulesCollection.Contains(System.Object)">
            <summary>
            Determines whether the collection contains the specified rule (SmartPrintRule object).
            </summary>
            <param name="value">Object for which to check</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SmartPrintRulesCollection.Contains(FarPoint.Win.Spread.SmartPrintRule)">
            <summary>
            Determines whether the collection contains the specified rule (SmartPrintRule object).
            </summary>
            <param name="value">Rule (SmartPrintRule object) for which to check</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SmartPrintRulesCollection.IndexOf(FarPoint.Win.Spread.SmartPrintRule)">
            <summary>
            Returns the index of the specified rule (SmartPrintRule object).
            </summary>
            <param name="value">Rule (SmartPrintRule object) for which to return the index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SmartPrintRulesCollection.IndexOf(System.Object)">
            <summary>
            Returns the index of the specified rule (SmartPrintRule object).
            </summary>
            <param name="value">Object for which to return the index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SmartPrintRulesCollection.Insert(System.Int32,System.Object)">
            <summary>
            Inserts a rule (SmartPrintRule object) into the collection at the specified index.
            </summary>
            <param name="index">Index at which to insert the rule (SmartPrintRule object)</param>
            <param name="value">Object to insert</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SmartPrintRulesCollection.Insert(System.Int32,FarPoint.Win.Spread.SmartPrintRule)">
            <summary>
            Inserts a rule (SmartPrintRule object) into the collection at the specified index.
            </summary>
            <param name="index">Index at which to insert the rule (SmartPrintRule object)</param>
            <param name="value">Rule (SmartPrintRule object) to insert</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SmartPrintRulesCollection.Remove(FarPoint.Win.Spread.SmartPrintRule)">
            <summary>
            Removes the specified rule (SmartPrintRule object) from the collection.
            </summary>
            <param name="value">Rule (SmartPrintRule object) to remove</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SmartPrintRulesCollection.Remove(System.Object)">
            <summary>
            Removes the specified rule (SmartPrintRule object) from the collection.
            </summary>
            <param name="value">rule (SmartPrintRule object) to remove</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SmartPrintRulesCollection.RemoveAt(System.Int32)">
            <summary>
            Removes a rule (SmartPrintRule object) from the collection at the specified index.
            </summary>
            <param name="index">Zero-based index of the rule (SmartPrintRule object) to remove</param>
            <exception cref="T:System.ArgumentException">
            Specified object is not valid; must be a SmartPrintRule object
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.SmartPrintRulesCollection.GetEnumerator">
            <summary>
            Gets an IEnumerator object for enumerating through the rules (SmartPrintRule objects) in the collection.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SmartPrintRulesCollection.Count">
            <summary>
            Gets the number of rules (SmartPrintRule objects) in the collection.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SmartPrintRulesCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the collection is synchronized.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SmartPrintRulesCollection.SyncRoot">
            <summary>
            Gets a rule (SmartPrintRule object) to synchronize access to the collection.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SmartPrintRulesCollection.IsFixedSize">
            <summary>
            Gets whether the collection has a fixed size. 
            (This implementation always returns false.)
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SmartPrintRulesCollection.IsReadOnly">
            <summary>
            Gets whether the collection is read-only.
            (This implementation always returns false.)
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SmartPrintRulesCollection.Item(System.Int32)">
            <summary>
            Gets or sets the rule (SmartPrintRule object) at the specified index.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.PrintInfo">
            <summary>
            Represents the information to use when printing a sheet of the control.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.PrintInfo.#ctor">
            <summary>
            Creates a new PrintInfo object.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.PrintInfo.#ctor(FarPoint.Win.Spread.PrintInfo)">
            <summary>
            Creates a new PrintInfo object based on the specified <see cref="T:FarPoint.Win.Spread.PrintInfo"/> object.
            </summary>
            <param name="pi"><see cref="T:FarPoint.Win.Spread.PrintInfo"/> object on which to base new object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.PrintInfo.#ctor(System.String,System.String,System.String,FarPoint.Win.Spread.PrintMargin,FarPoint.Win.Spread.PrintOrientation,FarPoint.Win.Spread.PrintPageOrder,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,FarPoint.Win.Spread.PrintType,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,FarPoint.Win.Spread.SmartPrintRulesCollection,System.Boolean,System.Boolean,System.Boolean,System.String,System.Int32,System.Boolean,System.String,System.Single,System.Int32,FarPoint.Win.Spread.PrintNotes,System.Drawing.Printing.PaperSource,System.Drawing.Printing.PaperSize,System.Boolean,System.Drawing.Image[],System.Drawing.Color[],System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.Centering,System.Int32,System.Int32)">
            <param name="imgList">Images to use for headers and footers</param>
            <param name="colorList">Colors to use for headers and footers</param>
            <param name="repeatColStart">Index of beginning column of a repeating range</param>
            <param name="repeatColEnd">Index of ending column of a repeating range</param>
            <param name="repeatRowStart">Index of a beginning row of a repeating range</param>
            <param name="repeatRowEnd">Index of ending row of a repeating range</param>
            <param name="center">Specifies type of centering to perform on print out</param>
            <param name="pagesTall">Specifies number of pages tall to fit print out into when smart print is true</param>
            <param name="pagesWide">Specifies number of pages wide to fit print out into when smart print is true</param>
        </member>
        <member name="M:FarPoint.Win.Spread.PrintInfo.Clone">
            <summary>
            Creates a new PrintInfo object that is a copy of the current instance. 
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.PrintInfo.CopyFrom(System.Object)">
            <summary>
            Copies the properties of the specified <see cref="T:FarPoint.Win.Spread.PrintInfo"/> object to the current PrintInfo object.
            </summary>
            <param name="o"><see cref="T:FarPoint.Win.Spread.PrintInfo"/> object from which to copy properties</param>
        </member>
        <member name="M:FarPoint.Win.Spread.PrintInfo.ToString">
            <summary>
            Always returns null.
            </summary>
            <returns>Always returns null.</returns>
        </member>
        <member name="P:FarPoint.Win.Spread.PrintInfo.SmartPrintRules">
            <summary>
            Gets or sets the collection of rules to optimize the printing.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.PrintInfo.Header">
            <summary>
            Gets or sets the text and format of headers on printed pages.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.PrintInfo.Footer">
            <summary>
            Gets or sets the text and format of footers on printed pages.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.PrintInfo.AbortMessage">
            <summary>
            Gets or sets the message to display for the abort dialog.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.PrintInfo.SmartPrintPagesTall">
            <summary>
            Gets or sets the number of pages vertically to check when optimizing printing.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.PrintInfo.SmartPrintPagesWide">
            <summary>
            Gets or sets the number of pages horizontally to check when optimizing the printing.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.PrintInfo.Centering">
            <summary>
            Gets or sets how the printed page is centered.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.PrintInfo.Images">
            <summary>
            Gets or sets the image list for the header and footer.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.PrintInfo.Colors">
            <summary>
            Gets or sets the color list for the header and footer.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.PrintInfo.RepeatColStart">
            <summary>
            Gets or sets the first column for a range of columns to print at the left of each page.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.PrintInfo.RepeatColEnd">
            <summary>
            Gets or sets the last column for a range of columns to print at the left of each page.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.PrintInfo.RepeatRowStart">
            <summary>
            Gets or sets the first row for a range of row to print at the top of each page.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.PrintInfo.RepeatRowEnd">
            <summary>
            Gets or sets the last row for a range of row to print at the top of each page.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.PrintInfo.JobName">
            <summary>
            Gets or sets the name of the print job.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.PrintInfo.Margin">
            <summary>
            Gets or sets the margins for printing.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.PrintInfo.Orientation">
            <summary>
            Gets or sets the page orientation used for printing.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.PrintInfo.PageOrder">
            <summary>
            Gets or sets the order in which pages print.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.PrintInfo.ShowBorder">
            <summary>
            Gets or sets whether to print the outline border around the entire control.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.PrintInfo.ShowColumnHeaders">
            <summary>
            Gets or sets whether to print the column headers.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.PrintInfo.ShowColor">
            <summary>
            Gets or sets whether to print the colors as they appear on the screen.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.PrintInfo.ShowGrid">
            <summary>
            Gets or sets whether to print the grid lines.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.PrintInfo.ShowRowHeaders">
            <summary>
            Gets or sets whether to print the row headers.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.PrintInfo.ShowShadows">
            <summary>
            Gets or sets whether to print the header shadows.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.PrintInfo.UseMax">
            <summary>
            Gets or sets whether to print only rows containing data.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.PrintInfo.PrintType">
            <summary>
            Gets or sets what is to be printed.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.PrintInfo.PageStart">
            <summary>
            Gets or sets the first page to print when printing a page range.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.PrintInfo.PageEnd">
            <summary>
            Gets or sets the last page to print when printing a page range.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.PrintInfo.UseSmartPrint">
            <summary>
            Gets or sets whether the control optimizes the printing using rules.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.PrintInfo.ColStart">
            <summary>
            Gets or sets the first column to print when printing a cell range.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.PrintInfo.ColEnd">
            <summary>
            Gets or sets the last column to print when printing a cell range.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.PrintInfo.RowStart">
            <summary>
            Gets or sets the first row to print when printing a cell range.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.PrintInfo.RowEnd">
            <summary>
            Gets or sets the last row to print when printing a cell range.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.PrintInfo.Preview">
            <summary>
            Gets or sets whether to preview the sheet instead of printing.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.PrintInfo.FirstPageNumber">
            <summary>
            Gets or sets the page number to print on the first page.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.PrintInfo.Printer">
            <summary>
            Gets or sets the name of the printer to use for printing.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.PrintInfo.ShowPrintDialog">
            <summary>
            Gets or sets whether to display a print dialog before printing.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.PrintInfo.BestFitCols">
            <summary>
            Gets or sets whether column widths are adjusted to fit the longest string width for printing.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.PrintInfo.BestFitRows">
            <summary>
            Gets or sets whether row heights are adjusted to fit the tallest string height for printing.
            </summary>   
        </member>
        <member name="P:FarPoint.Win.Spread.PrintInfo.ZoomFactor">
            <summary>
            Gets or sets the zoom factor used for printing this sheet.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.PrintInfo.Opacity">
            <summary>
            Gets or sets the opacity used when printing this sheet.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.PrintInfo.PrintNotes">
            <summary>
            Gets or sets how cell notes are printed after the sheet(s).
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.PrintInfo.PrintShapes">
            <summary>
            Gets or sets whether shapes are printed.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.PrintInfo.PaperSize">
            <summary>
            Gets or sets the paper size for printing.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.PrintInfo.PaperSource">
            <summary>
            Gets or sets the paper source for printing.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.ActionMap">
            <summary>
            Represents an action map, which provides mappings from objects to actions.
            </summary>
            <remarks>
            An action map is usually used with an input map (see InputMap class) to locate 
            a particular action when a key is pressed. An action map can have a parent that 
            is searched for keys not defined in the input map.
            </remarks>
        </member>
        <member name="M:FarPoint.Win.Spread.ActionMap.#ctor">
            <summary>
            Initializes an action map with no parent and no mappings.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.ActionMap.AllKeys">
            <summary>
            Returns the keys that are defined in this action map and its parent.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.ActionMap.Keys">
            <summary>
            Returns the keys defined in this action map.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.ActionMap.Clear">
            <summary>
            Removes all the mappings from this action map.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.ActionMap.Get(System.Object)">
            <summary>
            Returns the binding to an action for the specified key.
            </summary>
            <remarks>
            This method queries the parent action map if the binding is not
            defined in the current action map.
            </remarks>
            <param name="key">Keyboard key for which to get binding</param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Spread.ActionMap.Put(System.Object,FarPoint.Win.Spread.Action)">
            <summary>
            Creates a binding between a key and an action.
            </summary>
            <param name="key">Specified keyboard key</param>
            <param name="action">Specified action</param>
        </member>
        <member name="M:FarPoint.Win.Spread.ActionMap.Remove(System.Object)">
            <summary>
            Removes the binding to an action for the specified key.
            </summary>
            <param name="key">Specified keyboard key</param>
        </member>
        <member name="P:FarPoint.Win.Spread.ActionMap.Parent">
            <summary>
            Gets or sets the parent action map (ActionMap object) of this action map.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.ActionMap.Size">
            <summary>
            Returns the number of mappings defined in this action map.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.ActionMap.ActionMapEntry">
            <summary>
            Private class that represents an entry in an ActionMap.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.Model.SparseMatrix">
            <summary>
            Sparse matrix of objects.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SparseMatrix.#ctor">
            <summary>
            Constructs a new SparseMatrix.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SparseMatrix.#ctor(System.Int32,System.Int32)">
            <summary>
            Constructs a new SparseMatrix with the specified size.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SparseMatrix.#ctor(System.Int32,System.Int32,System.Object[0:,0:])">
            <summary>
            Constructs a new SparseMatrix with the specified size.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SparseMatrix.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new SparseMatrix object form serialization.
            </summary>
            <param name="info">SerializationInfo</param>
            <param name="context">StreamingContext</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SparseMatrix.OnDeserialized(System.EventArgs)">
            <summary>
            Fires the Deserialized event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SparseMatrix.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Saves the SparseMatrix to the SerializationInfo.
            </summary>
            <param name="info">SerializationInfo</param>
            <param name="context">StreamingContext</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SparseMatrix.GetColUsed(System.Int32)">
            <summary>
            Returns the count of used data items in the specified column.
            </summary>
            <param name="col">
            Column index (external)
            </param>
            <returns>
            Number of used data items in the specified column
            </returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SparseMatrix.SetColUsed(System.Int32,System.Int32)">
            <summary>
            Sets the count of used data items in the specified column.
            </summary>
            <param name="col">
            Column index (external)
            </param>
            <param name="used">
            New count of used data items in the column
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SparseMatrix.IncrementColUsed(System.Int32)">
            <summary>
            Increments the count of data items in the specified column.
            </summary>
            <param name="col">
            Column index (external)
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SparseMatrix.DecrementColUsed(System.Int32)">
            <summary>
            Decrements the count of data items in the specified column.
            </summary>
            <param name="col">
            Column index (external)
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SparseMatrix.GetRowUsed(System.Int32)">
            <summary>
            Returns the count of used data items in the specified row.
            </summary>
            <param name="row">
            Row specified
            </param>
            <returns>
            Count of used data items in the specified row
            </returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SparseMatrix.GetRowUsed(FarPoint.Win.Spread.Model.SparseArray)">
            <summary>
            Returns the count of used data items in the specified row.
            </summary>
            <param name="row">
            Row specified
            </param>
            <returns>
            Count of used data items in the specified row
            </returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SparseMatrix.SetRowUsed(System.Int32,System.Int32)">
            <summary>
            Sets the count of used data items in the specified row.
            </summary>
            <param name="row">
            Row specified
            </param>
            <param name="used">
            New count of used data items.
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SparseMatrix.SetRowUsed(FarPoint.Win.Spread.Model.SparseArray,System.Int32)">
            <summary>
            Sets the count of used data items in the specified row.
            </summary>
            <param name="row">
            Row specified
            </param>
            <param name="used">
            New count of used data items
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SparseMatrix.DecrementRowUsed(FarPoint.Win.Spread.Model.SparseArray)">
            <summary>
            Decrements the count of used data items in the specified row.
            </summary>
            <param name="row">
            Row specified
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SparseMatrix.AdjustDataCounts">
            <summary>
            Adjusts the counts of used values in columns and rows.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SparseMatrix.Clear">
            <summary>
            Clears all data in the SparseMatrix.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SparseMatrix.ClearRow(System.Int32)">
            <summary>
            Clears all data in the specified row in the SparseMatrix.
            </summary>
            <param name="row">
            Specifies the index of the row to clear; must be greater than or
            equal to 0 and less than Rows, or an IndexOutOfRangeException is thrown
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SparseMatrix.ClearColumn(System.Int32)">
            <summary>
            Clears all data in the specified column in the SparseMatrix.
            </summary>
            <param name="column">
            Specifies the index of the column to clear; must be greater than or
            equal to 0 and less than Rows, or an IndexOutOfRangeException is thrown
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SparseMatrix.ClearRange(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Clears the specified range in the SparseMatrix.
            </summary>
            <param name="row1">
            Starting row index
            </param>
            <param name="column1">
            Starting column index
            </param>
            <param name="row2">
            Ending row index
            </param>
            <param name="column2">
            Ending column index
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SparseMatrix.InternalClearRange(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Clears the specified range in the SparseMatrix.
            </summary>
            <param name="row1">
            Starting row index
            </param>
            <param name="column1">
            Starting column index
            </param>
            <param name="row2">
            Ending row index
            </param>
            <param name="column2">
            Ending column index
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SparseMatrix.CopyRange(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Copies the contents of a range to another location in the SparseMatrix.
            </summary>
            <param name="row1">
            Starting row index for the range to be copied
            </param>
            <param name="column1">
            Starting column index for the range to be copied
            </param>
            <param name="row2">
            Ending row index for the range to be copied
            </param>
            <param name="column2">
            Ending column index for the range to be copied
            </param>
            <param name="destRow">
            Starting row index for the destination range
            </param>
            <param name="destColumn">
            Starting column index for the destination range
            </param>
            <param name="cloneElements">
            Specifies whether to clone the elements while copying (if the elements support IClonable) 
            or copy the references or values
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SparseMatrix.MoveRange(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Moves the contents of a range to another location in the SparseMatrix.
            </summary>
            <param name="row1">
            Starting row index for the range to be moved
            </param>
            <param name="column1">
            Starting column index for the range to be moved
            </param>
            <param name="row2">
            Ending row index for the range to be moved
            </param>
            <param name="column2">
            Ending column index for the range to be moved
            </param>
            <param name="destRow">
            Starting row index for the destination range
            </param>
            <param name="destColumn">
            Starting column index for the destination range
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SparseMatrix.SwapRange(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="row1"></param>
            <param name="column1"></param>
            <param name="row2"></param>
            <param name="column2"></param>
            <param name="destRow"></param>
            <param name="destColumn"></param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SparseMatrix.InsertRows(System.Int32,System.Int32)">
            <summary>
            Inserts the specified number of new empty rows before the specified row index.
            </summary>
            <param name="row">
            Row index of the insertion point in the SparseMatrix for the new rows; 
            must be greater than or equal to 0 and less than or equal to Rows, or
            an IndexOutOfRangeException is thrown
            </param>
            <param name="count">
            Number of new rows to insert;
            must be greater than 0, or an ArgumentOutOfRangeException is thrown
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SparseMatrix.InsertColumns(System.Int32,System.Int32)">
            <summary>
            Inserts the specified number of new empty columns before the specified column index.
            </summary>
            <param name="column">
            Column index of the insertion point in the SparseMatrix for the new columns;
            must be greater than or equal to 0 and less than or equal to Columns, or
            an IndexOutOfRangeException is thrown
            </param>
            <param name="count">
            Number of new columns to insert;
            must be greater than 0, or an ArgumentOutOfRangeException is thrown
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SparseMatrix.RemoveRows(System.Int32,System.Int32)">
            <summary>
            Removes the specified number of rows starting at the specified row index.
            </summary>
            <param name="row">
            Specifies row index of the first row to remove.
            Must be greater than or equal to 0 and less Rows - nCount, or
            an IndexOutOfRangeException is thrown.
            </param>
            <param name="count">
            Specifies the number of rows to remove.
            Must be greater than 0, or an ArgumentOutOfRangeException is thrown.
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SparseMatrix.RemoveColumns(System.Int32,System.Int32)">
            <summary>
            Removes the specified number of columns starting at the specified column index.
            </summary>
            <param name="column">
            Column index of the first column to remove;
            must be greater than or equal to 0 and less than Columns, or
            an IndexOutOfRangeException is thrown
            </param>
            <param name="count">
            Number of columns to remove; 
            must be greater than 0 and less than Columns - nColumn, 
            or an ArgumentOutOfRangeException is thrown
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SparseMatrix.Transpose">
            <summary>
            Transposes the contents of the SparseMatrix (reversing the row and column coordinates
            of each element, and the number of columns and rows in the matrix).
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SparseMatrix.IsRowEmpty(System.Int32)">
            <summary>
            Returns a value indicating whether or not the specified row contains any values.
            </summary>
            <param name="row">
            Specifies the row index
            </param>
            <returns>
            True if the row contains no values; false otherwise
            </returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SparseMatrix.FirstNonEmptyRow(System.Int32)">
            <summary>
            Returns the index of the first non-empty row.
            </summary>
            <param name="row">Row index to start searching (-1 to start at row 0)</param>
            <returns>Row index for the first row containing a value, or -1 if no rows contain a value</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SparseMatrix.NextNonEmptyRow(System.Int32)">
            <summary>
            Returns the index of the next non-empty row.
            </summary>
            <param name="row">Row index before the row to start searching (-1 to start at row 0)</param>
            <returns>Row index for the next row containing a value, or -1 if no rows contain a value</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SparseMatrix.FirstNonEmptyColumnInRow(System.Int32,System.Int32)">
            <summary>
            Returns the index of the first non-empty column in the row.
            </summary>
            <param name="row">Index of row to search</param>
            <param name="column">Index of column to start search</param>
            <returns>Index of column for the first cell in the row containing a value, or -1 if no columns contain a value</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SparseMatrix.NextNonEmptyColumnInRow(System.Int32,System.Int32)">
            <summary>
            Returns the next non-empty column index in a row.
            </summary>
            <param name="row">
            Row index to search
            </param>
            <param name="column">
            Column index before the column to start searching (-1 to start at column 0)
            </param>
            <returns>
            Column index for the next cell in the row containing a value, or -1 if no columns contain a value
            </returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SparseMatrix.op_Implicit(System.Object[0:,0:])~FarPoint.Win.Spread.Model.SparseMatrix">
            <summary>
            Converts a two-dimensional array (indexed [row,column]) into a SparseMatrix object.
            </summary>
            <param name="array">
            Two-dimensional array (indexes by [row, column])
            </param>
            <returns>
            SparseMatrix object containing the same number of rows and columns and 
            the elements in the array
            </returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SparseMatrix.op_Implicit(FarPoint.Win.Spread.Model.SparseMatrix)~System.Object[0:,0:]">
            <summary>
            Converts a SparseMatrix object into a two-dimensional array (indexed [row,column]).
            </summary>
            <param name="matrix">
            SparseMatrix to convert.
            </param>
            <returns>
            Two-dimensional array containing the same number of rows and columns and 
            the elements in the SparseMatrix
            </returns>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.SparseMatrix.MaxCapacity">
            <summary>
            Returns the maximum count for rows and columns supported by the SparseMatrix.
            This is the largest possible value for the Rows and Columns property.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.Model.SparseMatrix.Deserialized">
            <summary>
            Event that fires on completion of deserialization.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.SparseMatrix.Item(System.Int32,System.Int32)">
            <summary>
            Sets or returns a data item for the specified cell in the SparseMatrix.
            nRow must be greater than or equal to 0 and less than Rows, and
            nColumn must be greater than or equal to 0 and less than Columns, or
            an IndexOutOfRangeException is thrown.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.SparseMatrix.Rows">
            <summary>
            Gets or gets the number of rows in the SparseMatrix.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.SparseMatrix.Columns">
            <summary>
            Sets or returns the number of columns in the SparseMatrix.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.SparseMatrix.DataRows">
            <summary>
            Returns the number of rows in the SparseMatrix containing non-null values.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.SparseMatrix.DataColumns">
            <summary>
            Returns the number of columns in the SparseMatrix containing non-null values.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.SparseMatrix.ElementCount">
            <summary>
            Returns the number of elements in the SparseMatrix.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.RowClipInfoRange">
            <summary>
            Represents a one-dimensional collection of RowClipInfo objects.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.RowClipInfoRange.Item(System.Int32)">
            <summary>
            Gets or sets a RowClipInfo object for the row specified.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.RowClipInfoRange.RowCount">
            <summary>
            Gets the number of rows in the one-dimensional collection.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.RowClipInfo">
            <summary>
            Represents the information for a row (not including the value or style information).
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.RowClipInfo.#ctor">
            <summary>
            Creates a new a set of row information (RowClipInfo object).
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.RowClipInfo.Height">
            <summary>
            Gets or sets the height of cells in this row.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.RowClipInfo.Visible">
            <summary>
            Gets or sets whether the row is visible.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.RowClipInfo.Resizable">
            <summary>
            Gets or sets whether this row can be resized.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.RowClipInfo.PageBreak">
            <summary>
            Gets or sets whether a page break is inserted before this row when printing.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.RowClipInfo.MergePolicy">
            <summary>
            Gets or sets the whether to automatically merge adjacent identical cells in this row.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.RowClipInfo.SheetName">
            <summary>
            Gets or sets the name of the sheet.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.Rows">
            <summary>
            Represents a one-dimensional collection of Row objects.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Rows.#ctor(FarPoint.Win.Spread.SheetView,System.Boolean,System.Boolean)">
            <summary>
            Creates a new Rows object.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Rows.GetDataModel">
            <summary>
            Gets the sheet data model for this row.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Rows.GetAxisModel">
            <summary>
            Gets the sheet axis model for this row.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Rows.Add(System.Int32,System.Int32)">
            <summary>
            Adds a new row or range of rows.
            </summary>
            <param name="index">Row index at which to start</param>
            <param name="count">Number of rows to add</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Rows.Remove(System.Int32,System.Int32)">
            <summary>
            Removes a row or range of rows.
            </summary>
            <param name="index">Index of row at which to start</param>
            <param name="count">Number of rows to remove</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Rows.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of the collection to the array.
            </summary>
            <param name="array">Array</param>
            <param name="index">int</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Rows.System#Collections#IList#Add(System.Object)">
            <summary>
            Not supported (throws InvalidOperationException).
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Rows.AddRange(System.Collections.ICollection)">
            <summary>
            Not supported (throws InvalidOperationException).
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Rows.Clear">
            <summary>
            Not supported (throws InvalidOperationException).
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Rows.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether the collection contains the specified object.
            </summary>
            <param name="value">
            Object to check for in the collection.
            </param>
            <returns>
            True if the object is found in the collection; false otherwise.
            </returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Rows.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Returns the index of the specified object. 
            </summary>
            <param name="value">
            Object for which to search.
            </param>
            <returns>
            Index of the object in the collection, or -1 if the object was not found. 
            </returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Rows.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Not supported (throws InvalidOperationException).
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Rows.System#Collections#IList#Remove(System.Object)">
            <summary>
            Not supported (throws InvalidOperationException).
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Rows.System#Collections#IList#RemoveAt(System.Int32)">
            <summary>
            Not supported (throws InvalidOperationException).
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Rows.Get(System.Int32)">
            <summary>
            Gets a new row for the specified row.
            </summary>
            <param name="row">Row index</param>
            <exception cref="T:System.IndexOutOfRangeException">
            Specified row index is less than -1 or greater than or equal to the row count
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.Rows.Get(System.Int32,System.Int32)">
            <summary>
            Gets a new row for the specified range of rows.
            </summary>
            <param name="row">Starting row index</param>
            <param name="row2">Ending row index</param>
            <exception cref="T:System.IndexOutOfRangeException">
            Specified row index is less than -1 or greater than or equal to the row count
            </exception>
        </member>
        <member name="P:FarPoint.Win.Spread.Rows.Item(System.String)">
            <summary>
            Gets a new row for the specified tag.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Rows.Item(System.Int32)">
            <summary>
            Gets a new row for the specified row.
            </summary>
            <exception cref="T:System.IndexOutOfRangeException">
            Specified row index is less than -1 or greater than or equal to the row count
            </exception>
        </member>
        <member name="P:FarPoint.Win.Spread.Rows.Item(System.Int32,System.Int32)">
            <summary>
            Gets a new row for the specified range of rows.
            </summary>
            <exception cref="T:System.IndexOutOfRangeException">
            Specified row index is less than -1 or greater than or equal to the row count
            </exception>
        </member>
        <member name="P:FarPoint.Win.Spread.Rows.Count">
            <summary>
            Gets or sets the number of rows in the collection.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Rows.Default">
            <summary>
            Gets a row for the default row (-1).
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Rows.Parent">
            <summary>
            Gets the parent object containing this collection of rows. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Rows.System#Collections#ICollection#Count">
            <summary>
            Returns the number of elements in the collection.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Rows.System#Collections#ICollection#IsSynchronized">
            <summary>
            Gets a value indicating whether access to the collection
            is synchronized (this implementation always returns false).
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Rows.System#Collections#ICollection#SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the collection.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Rows.System#Collections#IList#IsFixedSize">
            <summary>
            Gets a value indicating whether the collection has a fixed size (this
            implementation always returns true).
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Rows.System#Collections#IList#IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read-only (this
            implementation always returns true).
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.Rows.DefaultRow">
            <summary>
            Represents the default row in the component.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.Row">
            <summary>
            Represents a row in the component. 
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Row.#ctor(FarPoint.Win.Spread.SheetView,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Creates a new row for the specified row index and whether it is in a header.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Row.#ctor(FarPoint.Win.Spread.SheetView,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Creates a new row for the specified range of row indexes and whether it is in a header.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Row.Invalidate">
            <summary>
            Invalidates the displayed cells and sends the message to repaint them.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Row.GetAxisModel">
            <summary>
            Gets the sheet axis model for this row.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Row.GetDataModel">
            <summary>
            Gets the sheet data model for this row.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Row.GetStyleModel">
            <summary>
            Gets the style model for this row.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Row.IsValid(System.Int32)">
            <summary>
            Determines whether the specified view row index is valid
            in the sheet data model and if so, sets the row field
            to the model row index.
            </summary>
            <param name="viewrow">View row index</param>
            <returns>
            True if viewrow is defined in the data model; false otherwise
            </returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Row.GetStyleInfo">
            <summary>
            Gets the current style properties for the row.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Row.SetStyleInfo">
            <summary>
            Sets the styleInfo field into the style model for this row.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Row.GetPreferredHeight">
            <summary>
            Gets the minimum height necessary to display the text in all cells in this row.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Row.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equivalent to this row.
            </summary>
            <param name="o">Object to compare</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Row.GetHashCode">
            <summary>
            Gets the hash code for this row.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Row.Add">
            <summary>
            Adds a new row or range of rows before this row or range of rows.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Row.Remove">
            <summary>
            Removes this row or range of rows.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Row.ToString">
            <summary>
            Gets a string containing an absolute reference to this
            row in the current reference style.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Row.ToString(FarPoint.Win.Spread.Model.ReferenceStyle)">
            <summary>
            Gets a string containing a reference to this
            row in the specified reference style.
            </summary>
            <param name="referenceStyle">Reference style</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Row.ToString(FarPoint.Win.Spread.Row)">
            <summary>
            Gets a string containing a relative reference to this 
            row in the current reference style.
            </summary>
            <param name="relativeTo">
            Row to use for computing the relative reference
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.Row.ToString(FarPoint.Win.Spread.Row,FarPoint.Win.Spread.Model.ReferenceStyle)">
            <summary>
            Gets a string containing a relative reference to this
            cell in the specified reference style.
            </summary>
            <param name="relativeTo">
            Row to use for computing the relative reference
            </param>
            <param name="referenceStyle">
            Reference style
            </param>
            <exception cref="T:System.ArgumentNullException">
            Row is not specified or is not valid; must provide a valid Row object
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.Row.ResetNoteIndicatorColor">
            <summary>
            Resets the color of the note indicator for cells in this row to the default value.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Row.ResetCanFocus">
            <summary>
            Resets to its default value whether the cells in this row can receive focus.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Row.ResetTabStop">
            <summary>
            Resets to its default value whether the user can set focus to cells in this row using the Tab key.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Row.ResetVisible">
            <summary>
            Resets the visiblity for the row and makes the row inherit the visibility 
            from the default row.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Row.ResetResizable">
            <summary>
            Resets the resizability for the row and makes the row inherit the resizability 
            from the default row.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Row.ResetBackColor">
            <summary>
            Resets the background color for the row and makes the row inherit the background color 
            from the default row.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Row.ResetForeColor">
            <summary>
            Resets the foreground color for the row and makes the row inherit the foreground color 
            from the default row.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Row.ResetBorder">
            <summary>
            Resets the cell border for the row and makes the row inherit the cell border 
            from the default row.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Row.ResetFont">
            <summary>
            Resets the font for the row and makes the row inherit the font from the default row.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Row.ResetHorizontalAlignment">
            <summary>
            Resets the horizontal alignment for the row and makes the row inherit the horizontal alignment 
            from the default row.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Row.ResetVerticalAlignment">
            <summary>
            Resets the vertical alignment for the row and makes the row inherit the vertical alignment 
            from the default row.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Row.ResetLocked">
            <summary>
            Resets the locked state for the row and makes the row inherit the locked state 
            from the default row.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Row.ResetCellType">
            <summary>
            Resets the cell type for the row and makes the row inherit the cell type 
            from the default row.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Row.ResetParentStyleName">
            <summary>
            Resets the name of the parent style for cells in this row to an empty string.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Row.ResetLabel">
            <summary>
            Resets the label for the row and makes the row use the automatic text.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Row.ResetHeight">
            <summary>
            Resets the height for the row and makes the row inherit the height 
            from the default row.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Row.ResetMergePolicy">
            <summary>
            Resets the merge policy for the row and makes the row inherit the merge policy 
            rom the default row.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Row.SheetView">
            <summary>
            Internal use only. Used by the Formula Editor.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Row.Index">
            <summary>
            Gets the index of this row, or the starting index for this range of rows.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Row.Index2">
            <summary>
            Gets the ending index for this range of rows. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Row.Tag">
            <summary>
            Gets or sets the application-defined tag value associated with the cells in this row.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Row.Formula">
            <summary>
            Gets or sets the formula for cells in this row.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Row.Label">
            <summary>
            Gets or sets the header text for this row.  
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Row.Parent">
            <summary>
            Gets the parent collection of rows (Rows object) containing this row.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Row.Height">
            <summary>
            Gets or sets the height of this row in pixels.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified height is out of range; must be between -1 and 9,999,999 pixels
            </exception>
        </member>
        <member name="P:FarPoint.Win.Spread.Row.Resizable">
            <summary>
            Gets or sets whether this row can be resized.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Row.Visible">
            <summary>
            Gets or sets whether this row is visible.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Row.StyleName">
            <summary>
            Gets or sets the name of the custom style for the cells in this row. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Row.ParentStyleName">
            <summary>
            Gets or sets the name of the parent style from which style properties are inherited.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Row.NoteIndicatorColor">
            <summary>
            Gets or sets the default color for the cell note indicator for cells in this row.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Row.CanFocus">
            <summary>
            Gets or sets the default CanFocus setting for cells in this row.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Row.TabStop">
            <summary>
            Gets or sets whether the user can set focus to cells in this row using the Tab key.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Row.BackColor">
            <summary>
            Gets or sets the background color for cells in this row.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Row.ForeColor">
            <summary>
            Gets or sets the default text color for cells in this row.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Row.Border">
            <summary>
            Gets or sets the border for cells in this row.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Row.Font">
            <summary>
            Gets or sets the default font for text in cells in this row.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Row.HorizontalAlignment">
            <summary>
            Gets or sets the default horizontal alignment of text for cells in this row.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Row.VerticalAlignment">
            <summary>
            Gets or sets the default vertical alignment for cells in this row.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Row.PageBreak">
            <summary>
            Gets or sets whether a page break is inserted before this row when printing.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Row.MergePolicy">
            <summary>
            Gets or sets whether to automatically merge adjacent identical cells in this row.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Row.Editor">
            <summary>
            Gets or sets the default editor for cells in this row.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Row.Renderer">
            <summary>
            Gets or sets the default renderer for cells in this row. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Row.Formatter">
            <summary>
            Gets or sets the default formatter for cells in this row.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Row.Locked">
            <summary>
            Gets or sets whether cells in this row are marked as locked.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Row.CellType">
            <summary>
            Gets or sets the default cell type for cells in this row.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Rows.DefaultRow.ToString">
            <summary>
            Gets a string containing a reference to the default row.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Rows.DefaultRow.Formula">
            <summary>
            This property is not applicable. It cannot be set for a default column. 
            </summary>
            Gets or sets the formula for the default row.
        </member>
        <member name="P:FarPoint.Win.Spread.Rows.DefaultRow.Label">
            <summary>
            This property is not applicable. It cannot be set for a default column. 
            </summary>
            Gets or sets the label for the default row.
        </member>
        <member name="P:FarPoint.Win.Spread.Rows.DefaultRow.BackColor">
            <summary>
            Gets or sets the background color for cells in the default row.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Rows.DefaultRow.Border">
            <summary>
            Gets or sets the border for cells in the default row.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Rows.DefaultRow.CellType">
            <summary>
            Gets or sets the default cell type for cells in the default row.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Rows.DefaultRow.Editor">
            <summary>
            Gets or sets the default editor for cells in the default row.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Rows.DefaultRow.Font">
            <summary>
            Gets or sets the default font for cells in the default row.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Rows.DefaultRow.ForeColor">
            <summary>
            Gets or sets the default text color for cells in the default row.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Rows.DefaultRow.Formatter">
            <summary>
            Gets or sets the default formatter for cells in the default row.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Rows.DefaultRow.HorizontalAlignment">
            <summary>
            Gets or sets the default horizontal alignment of text for cells in the default row.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Rows.DefaultRow.Locked">
            <summary>
            Gets or sets whether cells in the default row are marked as locked.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Rows.DefaultRow.ParentStyleName">
            <summary>
            Gets or sets the name of the parent style (NamedStyle object) from which 
            style properties are inherited for this default row. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Rows.DefaultRow.Renderer">
            <summary>
            Gets or sets the default renderer for cells in the default row.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Rows.DefaultRow.StyleName">
            <summary>
            Gets or sets the custom style (NamedStyle object) for the cells in the default row
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Rows.DefaultRow.VerticalAlignment">
            <summary>
            Gets or sets the default vertical alignment of text for cells in the default row.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.AlternatingRows">
            <summary>
            Represents a one-dimensional collection of AlternatingRow objects, 
            which set the style information for alternating rows in the component. 
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.AlternatingRows.#ctor(FarPoint.Win.Spread.SheetView,System.Boolean,System.Boolean)">
            <summary>
            Creates a new collection of alternating rows.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.AlternatingRows.GetStyleModel">
            <summary>
            Gets the sheet style model for the alternating row.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.AlternatingRows.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of the collection to the array.
            </summary>
            <param name="array">Array</param>
            <param name="index">int</param>
        </member>
        <member name="M:FarPoint.Win.Spread.AlternatingRows.System#Collections#IList#Add(System.Object)">
            <summary>
            Not supported (throws InvalidOperationException).
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.AlternatingRows.AddRange(System.Collections.ICollection)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.AlternatingRows.Clear">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.AlternatingRows.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether the collection contains the specified object.
            </summary>
            <param name="value">
            Object to check for in the collection.
            </param>
            <returns>
            True if the object is found in the collection; false otherwise.
            </returns>
        </member>
        <member name="M:FarPoint.Win.Spread.AlternatingRows.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Returns the index of the specified object. 
            </summary>
            <param name="value">
            Object for which to search.
            </param>
            <returns>
            Index of the object in the collection, or -1 if the object was not found. 
            </returns>
        </member>
        <member name="M:FarPoint.Win.Spread.AlternatingRows.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Not supported (throws InvalidOperationException).
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.AlternatingRows.System#Collections#IList#Remove(System.Object)">
            <summary>
            Not supported (throws InvalidOperationException).
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.AlternatingRows.System#Collections#IList#RemoveAt(System.Int32)">
            <summary>
            Not supported (throws InvalidOperationException).
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.AlternatingRows.Get(System.Int32)">
            <summary>
            Gets a new alternating row for the specified alternating row.
            </summary>
            <param name="index">Alternating row index</param>
            <exception cref="T:System.IndexOutOfRangeException">
            Specified alternating row index is less than 0 or greater than or equal to the alternating row count
            </exception>
        </member>
        <member name="P:FarPoint.Win.Spread.AlternatingRows.Item(System.Int32)">
            <summary>
            Gets a new alternating row for the specified alternating row.
            </summary>
            <exception cref="T:System.IndexOutOfRangeException">
            Specified alternating row index is less than 0 or greater than or equal to the alternating row count
            </exception>
        </member>
        <member name="P:FarPoint.Win.Spread.AlternatingRows.Count">
            <summary>
            Gets or sets the number of alternating row styles in this collection.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.AlternatingRows.Parent">
            <summary>
            Gets the parent object containing this collection of alternating rows.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.AlternatingRows.System#Collections#ICollection#Count">
            <summary>
            Returns the number of elements in the collection.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.AlternatingRows.System#Collections#ICollection#IsSynchronized">
            <summary>
            Gets a value indicating whether access to the collection
            is synchronized (this implementation always returns false).
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.AlternatingRows.System#Collections#ICollection#SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the collection.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.AlternatingRows.System#Collections#IList#IsFixedSize">
            <summary>
            Gets a value indicating whether the collection has a fixed size (this
            implementation always returns true).
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.AlternatingRows.System#Collections#IList#IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read-only (this
            implementation always returns true).
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.AlternatingRow">
            <summary>
            Represents a set of style information for alternating rows in the component. 
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.AlternatingRow.#ctor(FarPoint.Win.Spread.SheetView,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Constructs a new AlternatingRow object.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.AlternatingRow.Invalidate">
            <summary>
            Invalidates the displayed cells and sends the message to repaint them.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.AlternatingRow.GetStyleModel">
            <summary>
            Gets the style model for this alternating row.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.AlternatingRow.IsValid">
            <summary>
            Checks the index of this alternating row to make sure it is valid.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.AlternatingRow.GetStyleInfo">
            <summary>
            Gets the style properties for this alternating row.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.AlternatingRow.SetStyleInfo">
            <summary>
            Sets the styles in the style model for this alternating row.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.AlternatingRow.Equals(System.Object)">
            <summary>
            Determines whether the specified object is to this alternating row.
            </summary>
            <param name="o">Object to compare</param>
        </member>
        <member name="M:FarPoint.Win.Spread.AlternatingRow.GetHashCode">
            <summary>
            Gets the hash code of the alternating row.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.AlternatingRow.ResetNoteIndicatorColor">
            <summary>
            Resets the cell note indicator color for cells in this row.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.AlternatingRow.ResetCanFocus">
            <summary>
            Resets to its default value whether the cells in this can receive focus.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.AlternatingRow.ResetTabStop">
            <summary>
            Resets to its default value whether the user can set focus to cells in this row using the Tab key.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.AlternatingRow.ResetBackColor">
            <summary>
            Resets the background color for this row and makes this row 
            inherit the background color from the default row.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.AlternatingRow.ResetForeColor">
            <summary>
            Resets the foreground color for this row and makes this row 
            inherit the foreground color from the default row.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.AlternatingRow.ResetBorder">
            <summary>
            Resets the cell border for this row and makes this row 
            inherit the cell border from the default row.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.AlternatingRow.ResetFont">
            <summary>
            Resets the font for this row and makes this row 
            inherit the font from the default row.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.AlternatingRow.ResetHorizontalAlignment">
            <summary>
            Resets the horizontal alignment for this row and makes this row 
            inherit the horizontal alignment from the default row.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.AlternatingRow.ResetVerticalAlignment">
            <summary>
            Resets the vertical alignment for this row and makes this row 
            inherit the vertical alignment from the default row.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.AlternatingRow.ResetLocked">
            <summary>
            Resets the locked state for this row and makes this row 
            inherit the locked state from the default row.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.AlternatingRow.ResetCellType">
            <summary>
            Resets the cell type for this row and makes this row 
            inherit the cell type from the default row.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.AlternatingRow.Index">
            <summary>
            Gets the index of this alternating row.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.AlternatingRow.Parent">
            <summary>
            Gets the parent AlternatingRows object that contains this 
            alternating row. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.AlternatingRow.StyleName">
            <summary>
            Gets or sets the name of the custom style for cells in this alternating row. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.AlternatingRow.ParentStyleName">
            <summary>
            Gets or sets the name of the parent style from which style properties 
            are inherited for cells in this alternating row.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.AlternatingRow.BackColor">
            <summary>
            Gets or sets the background color for cells in this alternating row.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.AlternatingRow.ForeColor">
            <summary>
            Gets or sets the text color for cells in this alternating row.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.AlternatingRow.Border">
            <summary>
            Gets or sets the border for cells in in this alternating row.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.AlternatingRow.Font">
            <summary>
            Gets or sets the default font for text in cells in this alternating row.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.AlternatingRow.HorizontalAlignment">
            <summary>
            Gets or sets the horizontal alignment for text in the cells in this alternating row.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.AlternatingRow.VerticalAlignment">
            <summary>
            Gets or sets the vertical alignment for text in the cells in this alternating row.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.AlternatingRow.Editor">
            <summary>
            Gets or sets the editor for cells in this alternating row.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.AlternatingRow.Renderer">
            <summary>
            Gets or sets the renderer for cells in this alternating row.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.AlternatingRow.Formatter">
            <summary>
            Gets or sets the formatter for cells in this alternating row.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.AlternatingRow.Locked">
            <summary>
            Gets or sets whether cells in this alternating row are marked as locked.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.AlternatingRow.CellType">
            <summary>
            Gets or sets the cell type for cells in this alternating row.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.AlternatingRow.NoteIndicatorColor">
            <summary>
            Gets or sets the default color for the cell note indicator for cells in this row.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.AlternatingRow.CanFocus">
            <summary>
            Gets or sets whether the user can set focus to the cell using the keyboard or mouse for cells in this row. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.AlternatingRow.TabStop">
            <summary>
            Gets or sets whether the user can set focus to cells in this row using the Tab key.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.NonEmptyItemFlag">
            <summary>
            Specifies the type of contents of a cell.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.NonEmptyItemFlag.Data">
            <summary>
            [1] Indicates that a cell contains data
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.NonEmptyItemFlag.Style">
            <summary>
            [2] Indicates that a cell contains formatting information
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.SheetViewCollection">
            <summary>
            Represents a collection of sheets (SheetView objects). 
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetViewCollection.#ctor(FarPoint.Win.Spread.FpSpread,FarPoint.Win.Spread.SpreadView)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetViewCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds a sheet to the collection.
            </summary>
            <param name="value">Sheet (SheetView object) to add</param>
            <returns>Zero-based index of the sheet in the collection</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetViewCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            Specifies whether the collection contains the specified sheeet.
            </summary>
            <param name="value">Sheet (SheetView object) for which to check in the collection</param>
            <returns>True if the sheet is found in the collection; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetViewCollection.Contains(FarPoint.Win.Spread.SheetView)">
            <summary>
            Specifies whether the collection contains the specified sheet.
            </summary>
            <param name="sheetView">Sheet (SheetView object) for which to check the collection</param>
            <returns>True if the sheet is found in the collection; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetViewCollection.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Returns the index of the specified sheet. 
            </summary>
            <param name="value">Sheet (SheetView object) for which to search</param>
            <returns>Zero-based index of the sheet in the collection, or -1 if the sheet was not found</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetViewCollection.IndexOf(FarPoint.Win.Spread.SheetView)">
            <summary>
            Returns the index of the specified sheet in the collection. 
            </summary>
            <param name="sheetView">Sheet (SheetView object) for which to return the index</param>
            <returns>Zero-based index of the sheet in the collection, or -1 if the sheet was not found</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetViewCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts a sheet into the collection at the specified index.
            </summary>
            <param name="index">Zero-based index at which to insert the sheet</param>
            <param name="value">Sheet (SheetView object) to insert into the collection</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetViewCollection.Insert(System.Int32,FarPoint.Win.Spread.SheetView)">
            <summary>
            Inserts a sheet into the collection at the specified index.
            </summary>
            <param name="index">Zero-based index at which to insert the sheet</param>
            <param name="sheetView">Sheet (SheetView object) to insert into the collection</param>
            <exception cref="T:System.ArgumentNullException">
            Sheet is not specified (that is, specified sheet is null)
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetViewCollection.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes the specified sheet from the collection. 
            </summary>
            <param name="value">Sheet (SheetView object) to remove from the collection</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetViewCollection.Remove(FarPoint.Win.Spread.SheetView)">
            <summary>
            Removes the specified sheet from the collection.
            </summary>
            <param name="sheetView">Sheet (SheetView object) to remove from the collection</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetViewCollection.RemoveAt(System.Int32)">
            <summary>
            Removes a sheet (SheetView object) from the collection at the specified index. 
            </summary>
            <param name="index">Zero-based index of the sheet to remove from the collection</param>
            <exception cref="T:System.IndexOutOfRangeException">
            Specified sheet index is not valid; must be between 0 and the total number of sheets in the collection
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetViewCollection.Add(System.Object)">
            <summary>
            Adds a sheet to the collection.
            </summary>
            <param name="obj">Sheet (SheetView object) to add to the collection</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetViewCollection.AddRange(System.Collections.ICollection)">
            <summary>
            Adds a range of sheets to the collection.
            </summary>
            <param name="c">Collection of sheets to add to the collection</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetViewCollection.AddRange(FarPoint.Win.Spread.SheetView[])">
            <summary>
            Adds an array of SheetView objects to the collection.
            </summary>
            <param name="sheets">array of SheetView objects</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetViewCollection.Clear">
            <summary>
            Removes all the sheets from the collection.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetViewCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the sheets in the collection to an array. 
            </summary>
            <param name="array">Array to which to copy the sheets</param>
            <param name="arrayIndex">Array index at which to start pasting the sheets</param>
        </member>
        <member name="F:FarPoint.Win.Spread.SheetViewCollection.changing">
            <summary>
            Occurs when a sheet is about to be added, removed, or changed in the collection.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SheetViewCollection.changed">
            <summary>
            Occurs when a sheet is added, removed, or changed in the collection.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetViewCollection.Find(System.String)">
            <summary>
            Searches the collection for a sheet with the specified name.
            </summary>
            <param name="name">Name of sheet (SheetView object) to find</param>
            <returns>
            Sheet in the collection with the specified name, 
            or null if no sheet is found
            </returns>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetViewCollection.IsFixedSize">
            <summary>
            Gets whether the collection has a fixed size. 
            (This implementation always returns false.)
            </summary>
            <returns>Always returns false</returns>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetViewCollection.IsReadOnly">
            <summary>
            Gets whether the collection is read-only.
            (This implementation always returns false.)
            </summary>
            <returns>Always returns false</returns>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetViewCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the sheet (SheetView object) at the specified index. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetViewCollection.Count">
            <summary>
            Gets or sets the number of sheets (SheetView objects) in the collection.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetViewCollection.Item(System.Int32)">
            <summary>
            Gets or sets the sheet (SheetView object) at the specified position in the collection.
            </summary>
            <exception cref="T:System.Exception">
            Specified sheet index is invalid; must be between 0 and total number of sheets in the collection
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Sheet index is not specified (that is, specified index is null)
            </exception>
        </member>
        <member name="E:FarPoint.Win.Spread.SheetViewCollection.Changing">
            <summary>
            Occurs when a sheet is about to be added, removed, or changed in the collection.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.SheetViewCollection.Changed">
            <summary>
            Occurs when a sheet is added, removed, or changed in the collection.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.StickyNoteEventHandler">
            <summary>
            Represents a method that handles the StickyNote events.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.StickyNoteEventArgs">
            <summary>
            Represents the data for the StickyNoteCreatedEvent event.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.StickyNoteEventArgs.#ctor(FarPoint.Win.Spread.DrawingSpace.StickyNoteStyleInfo)">
            <summary>
            Initializes a new SheetViewPropertyChangeEventArgs object.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.StickyNoteEventArgs.StickyNoteStyleInfo">
            <summary>
            Gets the StickyNoteStyleInfo of the StickyNote that has changed.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.SheetViewEventArgs">
            <summary>
            Represents the event data for the SheetView events.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetViewEventArgs.#ctor">
            <summary>
            Creates a new SheetViewEventArgs object.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetViewEventArgs.#ctor(System.Int32,System.Int32)">
            <summary>
            Creates a new SheetViewEventArgs object, 
            specifying the row and column indexes.
            </summary>
            <param name="row">Row index</param>
            <param name="column">Column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetViewEventArgs.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a new SheetViewEventArgs object, 
            specifying the row and column indexes and number of rows and columns.
            </summary>
            <param name="row">Row index</param>
            <param name="column">Column index</param>
            <param name="rowCount">Number of rows</param>
            <param name="columnCount">Number of columns</param>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetViewEventArgs.Row">
            <summary>
            Gets the row index.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetViewEventArgs.Column">
            <summary>
            Gets the column index.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetViewEventArgs.RowCount">
            <summary>
            Gets the number of rows.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetViewEventArgs.ColumnCount">
            <summary>
            Gets the number of columns.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.SheetViewEventHandler">
            <summary>
            Represents a method that handles the SheetView events.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.SheetViewPropertyChangeEventArgs">
            <summary>
            Represents the data for the SheetViewPropertyChange event.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetViewPropertyChangeEventArgs.#ctor(System.String)">
            <summary>
            Initializes a new SheetViewPropertyChangeEventArgs object.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetViewPropertyChangeEventArgs.PropertyName">
            <summary>
            Gets the name of the property that has changed.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.SheetViewPropertyChangeEventHandler">
            <summary>
            Represents a defined method that handles the SheetViewPropertyChange event.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.HeaderAutoText">
            <summary>
            Specifies what default labels are displayed in headers.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.HeaderAutoText.Blank">
            <summary>
            [0] Displays blanks in the headers
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.HeaderAutoText.Numbers">
            <summary>
            [1] Displays numbers in the headers
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.HeaderAutoText.Letters">
            <summary>
            [2] Displays letters in the headers
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.ButtonDrawModes">
            <summary>
            Specifies how to display buttons in cells for button and combo box cell types.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.ButtonDrawModes.Always">
            <summary>
            [0] Always displays buttons
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.ButtonDrawModes.CurrentCell">
            <summary>
            [1] Displays buttons only in the current cell
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.ButtonDrawModes.CurrentColumn">
            <summary>
            [2] Displays buttons only in the current column
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.ButtonDrawModes.CurrentRow">
            <summary>
            [4] Displays buttons only in the current row
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.ButtonDrawModes.AlwaysPrimaryButton">
            <summary>
            [8] Always displays buttons for button cells
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.ButtonDrawModes.AlwaysSecondaryButton">
            <summary>
            [16] Always displays buttons for combo box cells
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.ClipboardOptions">
            <summary>
            Specifies which headers are included when data is copied to or pasted from the Clipboard.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.ClipboardOptions.NoHeaders">
            <summary>
            [0] Includes neither column nor row headers when data is copied; 
            does not overwrite selected column or row headers when data is pasted
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.ClipboardOptions.RowHeaders">
            <summary>
            [1] Includes selected row headers when data is copied; 
            overwrites selected row headers when data is pasted
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.ClipboardOptions.ColumnHeaders">
            <summary>
            [2] Includes selected column headers when data is copied; 
            overwrites selected column headers when data is pasted
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.ClipboardOptions.AllHeaders">
            <summary>
            [3] Includes selected headers when data is copied; 
            overwrites selected headers when data is pasted
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.ClipboardPasteOptions">
            <summary>
            Specifies what data is pasted from the Clipboard.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.ClipboardPasteOptions.All">
            <summary>
            [0] Pastes all data objects, including values, formatting, and formulas
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.ClipboardPasteOptions.Values">
            <summary>
            [1] Pastes only values
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.ClipboardPasteOptions.Formatting">
            <summary>
            [2] Pastes only formatting
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.ClipboardPasteOptions.Formulas">
            <summary>
            [3] Pastes only formulas
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.ClipboardPasteOptions.AsLink">
            <summary>
            [4] Pastes as a link to the original cell
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.ClipboardPasteOptions.AsString">
            <summary>
            [5] Pastes as a text string
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.SelectionStyles">
            <summary>
            Specifies the style for the display of selected cells.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SelectionStyles.None">
            <summary>
            [0] Does not change how the cells are displayed when selected
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SelectionStyles.SelectionColors">
            <summary>
            [1] Uses the selection text and background color when cells are selected
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SelectionStyles.SelectionRenderer">
            <summary>
            [2] Uses the default settings in the renderer when cells are selected
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SelectionStyles.Both">
            <summary>
            [3] Uses both the selection color settings and the renderer when cells are selected
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.SheetView">
            <summary>
            Represents an individual sheet in the control.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.IFilterSupport">
            <summary>
            Interface that supports row filters for filtering rows on a sheet.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.IFilterSupport.SetFilteredColumn(System.Int32,System.String)">
            <summary>
            Sets a column as filtered, and passes the selected drop-down list string by which to filter. 
            </summary>
            <param name="columnIndex">Column index</param>
            <param name="filterBy">String containing what to filter by</param>
        </member>
        <member name="M:FarPoint.Win.Spread.IFilterSupport.ResetFilteredColumn(System.Int32)">
            <summary>
            Resets a column to be unfiltered.
            </summary>
            <param name="columnIndex">Column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.IFilterSupport.InvalidateRowFilter(System.Boolean,System.Boolean)">
            <summary>
            Invalidates the row filter and causes the columns to be re-painted.
            </summary>
            <param name="clear">Whether to clear</param>
            <param name="forceInvalidate">Whether to force the invalidate</param>
        </member>
        <member name="M:FarPoint.Win.Spread.IFilterSupport.GetDropDownFilterItems(System.Int32)">
            <summary>
            Gets the list of items to display in the filter drop-down list.
            </summary>
            <param name="columnIndex">Column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.#ctor">
            <summary>
            Creates a sheet (SheetView object).
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.#ctor(System.String)">
            <summary>
            Creates a sheet (SheetView object) with a specified name.
            </summary>
            <param name="name">Name of sheet</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.#ctor(FarPoint.Win.Spread.Model.ISheetDataModel)">
            <summary>
            Creates a sheet (SheetView object) according to a specified data model.
            </summary>
            <param name="dataModel">Data model</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.#ctor(FarPoint.Win.Spread.Model.ISheetDataModel,FarPoint.Win.Spread.NamedStyleCollection)">
            <summary>
            Creates a sheet (SheetView object) according to a specified data model and named style.
            </summary>
            <param name="dataModel">Data model</param>
            <param name="namedStyles">Named style</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a sheet (SheetView object) from serialization.
            </summary>
            <param name="info">SerializationInfo</param>
            <param name="context">StreamingContext</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the object to the SerializationInfo.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.Init">
            <summary>
            Initializes all internal fields.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.Reset">
            <summary>
            Resets the view on this sheet to its original state.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.ExpandRow(System.Int32,System.Boolean)">
            <summary>
            Expands or collapses the specified row on this sheet. 
            </summary>
            <param name="row">Index of row to expand or collapse</param>
            <param name="expand">True to expand; false to collapse</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified row index is out of range; must be between 0 and the total number of rows    
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.IsRowExpanded(System.Int32)">
            <summary>
            Gets whether the row on this sheet displays a child view.
            </summary>
            <param name="row">Row index</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified row index is out of range; must be between 0 and the total number of rows   
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.SetRowExpandable(System.Int32,System.Boolean)">
            <summary>
            Sets whether or not the row on this sheet can be expanded to show the child view.
            </summary>
            <param name="row">Row index</param>
            <param name="expandable">True if the row can be expanded; false otherwise</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified row index is out of range; must be between 0 and the total number of rows    
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.GetRowExpandable(System.Int32)">
            <summary>
            Gets whether the row on this sheet is expandable. 
            </summary>
            <param name="row">Row index</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified row index is out of range; must be between 0 and the total number of rows    
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.GetChildView(System.Int32,System.Int32)">
            <summary>
            Creates the sheet (SheetView object) for the specified row and the specified relation index.
            </summary>
            <param name="row">Row whose child sheet is to be created</param>
            <param name="relationIndex">Index to the data relation collection</param>
            <exception cref="T:System.Exception">
            Specified sheet does not support a child sheet
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified row index is out of range; must be between 0 and the number of rows
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified relation index is out of range; must be between 0 and the number of relations
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.GetRootSheet">
            <summary>
            Gets the top <see cref="T:FarPoint.Win.Spread.SheetView"/> object.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.GetChildSheets">
            <summary>
            Gets a list of child sheet views that have been created.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.FindChildView(System.Int32,System.Int32)">
            <summary>
            Gets the child view for this sheet with the specified name.
            </summary>
            <param name="row">Row index of the related sheet</param>
            <param name="relationIndex">Relation index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.SetChildVisible(FarPoint.Win.Spread.SheetView,System.Boolean)">
            <summary>
            Sets whether to make the child view on this sheet visible when the parent row is expanded.
            </summary>
            <param name="child">Child view to show</param>
            <param name="visible">True to make it visible when parent row is expanded</param>
            If this is set to true, the child view is displayed when the parent row of the 
            child view is expanded. If this is set to false or the parent row is not expanded, 
            the child view is not displayed.
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.GetChildVisible(FarPoint.Win.Spread.SheetView)">
            <summary>
            Gets whether to show the child view on this sheet when the parent row is expanded. 
            </summary>
            <param name="child">Child view to show</param>
            If this method returns true and the parent row of the child view is expanded, 
            the child view is displayed; otherwise, the child view is not displayed.
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.GetChildRelation(System.Int32)">
            <summary>
            Gets the name of the child data relation at the specified index on the sheet.
            </summary>
            <param name="index">Index of relation (child view)</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.GetLastNonEmptyRow(FarPoint.Win.Spread.NonEmptyItemFlag)">
            <summary>
            Gets the row index of the last row that contains data or formatting on this sheet.
            </summary>
            <param name="dataFlag">Whether to look for data or formatting (NonEmptyItemFlag setting)</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.GetLastNonEmptyColumn(FarPoint.Win.Spread.NonEmptyItemFlag)">
            <summary>
            Gets the index of the last column that contains data or formatting on this sheet.
            </summary>
            <param name="dataFlag">Whether to look for data or formatting (NonEmptyItemFlag setting)</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.ShouldSerializeNamedStyles">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.SetActiveCell(System.Int32,System.Int32)">
            <summary>
            Sets the active cell on this sheet.
            </summary>
            <param name="row">Row index of cell</param>
            <param name="column">Column index of cell</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.SetActiveCell(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Sets the active cell on this sheet.
            </summary>
            <param name="row">Row index of cell</param>
            <param name="column">Column index of cell</param>
            <param name="clearSelection">Whether or not clear selections</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.AddSelection(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds a selection on this sheet.
            </summary>
            <param name="row">Starting row index of selection </param>
            <param name="column">Starting column index of selection </param>
            <param name="rowCount">Number of rows in selection </param>
            <param name="columnCount">Number of columns in selection </param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.GetSelection(System.Int32)">
            <summary>
            Gets the selection on this sheet with the specified index.
            </summary>
            <param name="index">Index into the list of selections</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.RemoveSelection(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Removes the specified selection from this sheet.
            </summary>
            <param name="row">Starting row index of selection to remove </param>
            <param name="column">Starting column index of selection to remove </param>
            <param name="rowCount">Number of rows in selection to remove </param>
            <param name="columnCount">Number of columns in selection to remove </param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.ClearSelection">
            <summary>
            Removes all selections from this sheet.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.OpenSpreadFile(System.String)">
            <summary>
            Opens a saved Spread file into this sheet.
            </summary>
            <param name="fileName">Path and name of the file to open</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.ShouldSerializeGrayAreaBackColor">
            <summary>
            Gets whether the GrayAreaBackColor property should be serialized.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.ShouldSerializeSheetCornerHorizontalGridLine">
            <summary>
            Gets whether the horizontal grid line for the corner should be serialized.
            </summary>
            <returns>true if the horizontal grid line for the corner should be serialized; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.ShouldSerializeSheetCornerVerticalGridLine">
            <summary>
            Gets whether the vertical grid line should be serialized.
            </summary>
            <returns>True if VerticalGridLine should be serialized; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.ShouldSerializeHorizontalGridLine">
            <summary>
            Gets whether the horizontal grid line for the data area should be serialized.
            </summary>
            <returns>True if HorizontalGridLine should be serialized; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.ShouldSerializeVerticalGridLine">
            <summary>
            Gets whether the vertical grid line for the data area should be serialized.
            </summary>
            <returns>True if VerticalGridLine should be serialized; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.ShouldSerializeZoomFactor">
            <summary>
            Gets whether the zoom factor should be serialized.
            </summary>
            <returns>True if ZoomFactor should be serialized; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.GetStickyNoteStyleInfo(System.Int32,System.Int32)">
            <summary>
            Gets the style information for the cell notes on this sheet that stay visible.
            </summary>
            <param name="row">Row index of cell</param>
            <param name="column">Column index of cell</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.SetStickyNoteStyleInfo(System.Int32,System.Int32,FarPoint.Win.Spread.DrawingSpace.StickyNoteStyleInfo)">
            <summary>
            Sets the style information for the cell notes on this sheet that stay visible.
            </summary>
            <param name="row">Row index of cell</param>
            <param name="column">Column index of cell</param>
            <param name="info">Style information</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.ShowNotes(System.Boolean)">
            <summary>
            Shows or hides all cell notes on the sheet.
            </summary>
            <param name="show">Whether to show the cell notes</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.Recalculate">
            <summary>
            Evaluates all the formulas in cells on the sheet that have changed 
            since the last calculation cycle.
            </summary>
            There is no Spread 6 equivalent.
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.RecalculateAll">
            <summary>
            Evaluates all the formulas in cells on the sheet  
            (including those that have not changed since the last calculation cycle).
            </summary>
            This accomplishes the same as Spread6's ReCalc method.
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.ClearRange(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Removes all of the data, formatting, formulas, and notes from a range of cells on this sheet.
            </summary>
            <param name="row">Row index of first cell in range</param>
            <param name="column">Column index of first cell in range</param>
            <param name="rowCount">Number of rows in range</param>
            <param name="columnCount">Number of columns in range</param>
            <param name="dataOnly">Whether to remove only data</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.CopyRange(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Copies the data, formatting, formulas, and notes from a block of cells on the sheet to a new location.
            </summary>
            <param name="fromRow">Row index of top-left cell in block to copy</param>
            <param name="fromColumn">Column index of top-left cell in block to copy</param>
            <param name="toRow">Row index of top-left cell in destination</param>
            <param name="toColumn">Column index of top-left cell in destination</param>
            <param name="rowCount">Number of rows in the block</param>
            <param name="columnCount">Number of columns in the block</param>
            <param name="dataOnly">Whether only the data is copied, or the data and formatting</param>
            <exception cref="T:System.InvalidOperationException">
            Operation is not valid; cannot copy entire sheet of cells
            </exception>
            <exception cref="T:System.InvalidOperationException">
            Operation is not valid; cannot copy entire columns over partial columns
            </exception>
            <exception cref="T:System.InvalidOperationException">
            Operation is not valid; cannot copy entire rows over partial rows
            </exception>
            <exception cref="T:System.InvalidOperationException">
            Operation is not valid; cannot copy a range of cells over part of a spanned cell
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.MoveRange(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Moves the data, formatting, formulas, and notes from a block of cells on this sheet to a new location.
            </summary>
            <param name="fromRow">Row index of top-left cell in block to move</param>
            <param name="fromColumn">Column index of top-left cell in block to move</param>
            <param name="toRow">Row index for destination of upper-left cell in block</param>
            <param name="toColumn">Column index for destination of upper-left cell in block</param>
            <param name="rowCount">Number of rows in the block</param>
            <param name="columnCount">Number of columns in the block</param>
            <param name="dataOnly">Whether data only or data with formatting are swapped</param>
            <exception cref="T:System.InvalidOperationException">
            Operation is not valid; cannot move entire sheet of cells
            </exception>
            <exception cref="T:System.InvalidOperationException">
            Operation is not valid; cannot move entire columns over partial columns
            </exception>
            <exception cref="T:System.InvalidOperationException">
            Operation is not valid; cannot move entire rows over partial columns
            </exception>
            <exception cref="T:System.InvalidOperationException">
            Operation is not valid; cannot move a range of cells over part of a spanned cell
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.SwapRange(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Swaps the data and formatting in a block of cells on this sheet 
            with another block of cells on this sheet. 
            </summary>
            <param name="fromRow">Row index of the top-left cell in the block from which to swap</param>
            <param name="fromColumn">Column index of the top-left cell in the block from which to swap</param>
            <param name="toRow">Row index of the top-left cell in the destination block</param>
            <param name="toColumn">Column index of the top-left cell in the destination block</param>
            <param name="rowCount">Number of rows in the block of cells</param>
            <param name="columnCount">Number of columns in the block of cells</param>
            <param name="dataOnly">Whether only the data is copied, or the data and formatting</param>
            <exception cref="T:System.InvalidOperationException">
            Operation is not valid; cannot swap entire sheet of cells
            </exception>
            <exception cref="T:System.InvalidOperationException">
            Operation is not valid; cannot swap entire columns over partial columns
            </exception>
            <exception cref="T:System.InvalidOperationException">
            Operation is not valid; cannot swap entire rows over partial rows
            </exception>
            <exception cref="T:System.InvalidOperationException">
            Operation is not valid; cannot swap a range of cells over part of a spanned cell
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.FillRange(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.FillDirection)">
            <summary>
            Fills a range of cells on this sheet.
            </summary>
            <param name="row">Row index of the starting cell in the block to fill </param>
            <param name="column">Column index of the starting cell in the block to fill </param>
            <param name="rowCount">Number of rows in the block of cells to fill </param>
            <param name="columnCount">Number of columns in the block of cells to fill </param>
            <param name="fillCount">Number </param>
            <param name="fillDirection">Direction of fill </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified row index is not valid; must be between -1 and the total number of rows
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified column index is not valid; must be between -1 and the total number of columns
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified row count is not valid; must be -1 or 
            between 0 and the total number of rows minus the current row index
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified column count is not valid; must be -1 or 
            between 0 and the total number of columns minus the current column index
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified fill count is not valid
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            Specified fill direction is not valid; must be one of the allowed enumeration settings
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.ClipboardCut">
            <summary>
            Cuts the contents from the sheet to the Clipboard.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.ClipboardCutDataOnly">
            <summary>
            Cuts only the data to the Clipboard.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.ClipboardCopy">
            <summary>
            Copies the contents from the sheet to the Clipboard.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.ClipboardCopy(System.Boolean)">
            <summary>
            Copies the contents from the sheet to the Clipboard.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.ClipboardCopy(System.Boolean,FarPoint.Win.Spread.Model.CellRange)">
            <summary>
            Copies the contents from the sheet to the Clipboard.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.GetClipDataObject(System.Boolean,FarPoint.Win.Spread.Model.CellRange)">
            <summary>
            Gets a dataobject with necessary formats for clipboard usage: CellInfoRange, ColumnInfoRange and RowInfoRange
            </summary>
            <param name="fromCutting"></param>
            <param name="cellRange"></param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.ClipboardPaste">
            <summary>
            Pastes the contents from the Clipboard to the sheet.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.ClipboardPaste(FarPoint.Win.Spread.ClipboardPasteOptions)">
            <summary>
            Pastes the contents from the Clipboard to the sheet according to the specified paste option.
            </summary>
            <param name="pasteOption">Clipboard paste option (a setting of the <see cref="T:FarPoint.Win.Spread.ClipboardPasteOptions"/> enumeration</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.ClipboardCopyShape">
            <summary>
            Copies the active shape to the clipboard.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.ClipboardCutShape">
            <summary>
            Cuts the active shape to the clipboard.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.ClipboardPasteShape">
            <summary>
            Pastes the shape from the clipboard.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.ShouldSerializeSheetCornerStyle">
            <summary>
            Gets whether the style for the sheet corner should be serialized.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.IsColumnBound(System.Int32)">
            <summary>
            Gets whether the specified column on this sheet is bound to a data source.
            </summary>
            <param name="column">Column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.BindDataColumn(System.Int32,System.String)">
            <summary>
            Binds the column to the data source column for a sheet.
            </summary>
            <param name="column">Column index</param>
            <param name="columnName">Name of the data source column</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.GetDataView(System.Boolean)">
            <summary>
            Gets the DataView object on this sheet.
            </summary>
            <param name="create">Whether to re-create the DataView</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.AddUnboundRows(System.Int32,System.Int32)">
            <summary>
            Adds unbound rows to the data model for a sheet.
            </summary>
            <param name="row">Row index at which to start adding rows</param>
            <param name="count">Number of rows to add</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.AddRowToDataSource(System.Int32,System.Boolean)">
            <summary>
            Adds the unbound row to the data source for a sheet.
            </summary>
            <param name="row">Row index at which to add row</param>
            <param name="autoFillData">Whether to automatically fill the row with data</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.GetUnboundValue(System.Int32,System.Int32)">
            <summary>
            Gets the unbound value for the cell on this sheet.
            </summary>
            <param name="row">Row index</param>
            <param name="column">Column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.IsRowBound(System.Int32)">
            <summary>
            Gets whether the specified row on this sheet is bound to a data source.
            </summary>
            <param name="row">Row index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.IndexToLetters(System.Int32)">
            <summary>
            Converts a row or column index to a text represention
            consisting of letters.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.LettersToIndex(System.String)">
            <summary>
            Converts a column A1 notation string to an index.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.GetRowAutoText(System.Int32)">
            <summary>
            Gets the automatic text displayed in the row header for the specified row on this sheet.
            </summary>
            <param name="row">Row index of the row header</param>
            <excpetion cref="T:System.ArgumentOutOfRangeException">
            Specified row index is out of range; must be at least zero.
            </excpetion>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.GetColumnAutoText(System.Int32)">
            <summary>
            Gets the automatic text displayed in the column header for the specified column on this sheet.
            </summary>
            <param name="column">Column index of column header</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified column index is out of range; must be at least zero
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.GetViewRowFromModelRow(System.Int32)">
            <summary>
            Gets the row on the sheet that corresponds to the specified row index in the model.
            </summary>
            <param name="modelrow">Row index in model</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.GetViewColumnFromModelColumn(System.Int32)">
            <summary>
            Gets the column on the sheet that corresponds to the specified column index in the model.
            </summary>
            <param name="modelcolumn">Column index in model</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.GetModelRowFromViewRow(System.Int32)">
            <summary>
            Gets the row index in the data model that corresponds to the specified row index in the sheet.
            </summary>
            <param name="row">Row index in the sheet</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.SetModelRowForViewRow(System.Int32,System.Int32)">
            <summary>
            Sets the row index in the data model that corresponds to the specified row index in the sheet.
            </summary>
            <param name="viewRow">Row index in the sheet</param>
            <param name="modelRow">Row index in the data model</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified row in the sheet is out of range; must be between -1 and the total number of rows
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified row in the model is out of range; must be between -1 and the total number of rows
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.GetModelColumnFromViewColumn(System.Int32)">
            <summary>
            Gets the column index in the data model that corresponds to the specified column index in the sheet.
            </summary>
            <param name="column">Column index in the sheet</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.SetModelColumnForViewColumn(System.Int32,System.Int32)">
            <summary>
            Sets the column index in the data model that corresponds to the specified column index in the sheet.
            </summary>
            <param name="viewColumn">Column index in the sheet</param>
            <param name="modelColumn">Column index in the data model</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified column in the sheet is out of range; must be between -1 and the total number of columns in the sheet
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified column in the model is out of range; must be between -1 and the total number of columns in the model
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.OnDataModelChanged(System.Object,FarPoint.Win.Spread.Model.SheetDataModelEventArgs)">
            <summary>
            Changes the data model for this sheet in synchronization with the data source.
            </summary>
            <param name="sender">Object that raised the event</param>
            <param name="e"><see cref="T:FarPoint.Win.Spread.Model.SheetDataModelEventArgs"/> object that contains event data</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.OnSheetRowAxisModelChanged(System.Object,FarPoint.Win.Spread.Model.SheetAxisModelEventArgs)">
            <summary>
            Changes the sheet row axis model in synchronization with the data source.
            </summary>
            <param name="sender">Object that raised the event </param>
            <param name="e"><see cref="T:FarPoint.Win.Spread.Model.SheetAxisModelEventArgs"/> object that contains event data </param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.OnSheetColumnAxisModelChanged(System.Object,FarPoint.Win.Spread.Model.SheetAxisModelEventArgs)">
            <summary>
            Changes the sheet column axis model in synchronization with the data source.
            </summary>
            <param name="sender">Object that raised the event </param>
            <param name="e"><see cref="T:FarPoint.Win.Spread.Model.SheetAxisModelEventArgs"/> object that contains event data </param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.OnSpanModelChanged(System.Object,FarPoint.Win.Spread.Model.SheetSpanModelEventArgs)">
            <summary>
            Changes the span model in sync with the data source for this sheet.
            </summary>
            <param name="sender">Object that raised the event</param>
            <param name="e"><see cref="T:FarPoint.Win.Spread.Model.SheetSpanModelEventArgs"/> object that contains event data</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.GetPreferredColumnWidth(System.Int32)">
            <summary>
            Gets the width of the widest cell (based on text contents) in the specified column on this sheet.
            </summary>
            <param name="column">Column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.GetPreferredColumnWidth(System.Int32,System.Boolean)">
            <summary>
            Gets the width of the widest cell (based on text contents) in the specified column on this sheet.
            </summary>
            <param name="column">Column index</param>
            <param name="ignoreHeaders">Whether to ignore column header cells</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.GetPreferredPrintColumnWidth(System.Drawing.Graphics,System.Int32)">
            <summary>
            Gets the width of the widest cell (based on text contents) in the specified column 
            on this sheet for printing to the specified graphics device.
            </summary>
            <param name="g">Graphics device interface</param>
            <param name="column">Column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.GetPreferredRowHeight(System.Int32)">
            <summary>
            Gets the height in pixels of the tallest cell (based on text contents) in the specified row on this sheet.
            </summary>
            <param name="row">Row index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.GetPreferredRowHeight(System.Int32,System.Boolean)">
            <summary>
            Gets the height in pixels of the tallest cell (based on text contents) in the specified row on this sheet.
            </summary>
            <param name="row">Row index</param>
            <param name="ignoreHeaders">Whether to ignore the row header cells</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.GetPreferredPrintRowHeight(System.Drawing.Graphics,System.Int32)">
            <summary>
            Gets the height in pixels of the tallest cell (based on text contents) in the specified row on this sheet.
            </summary>
            <param name="row">Row index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.GetPreferredCellSize(System.Int32,System.Int32)">
            <summary>
            Gets the desired size of the given cell on this sheet.
            </summary>
            <param name="row">Row index</param>
            <param name="col">Column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.GetColumnHeaderRowHeight(System.Int32)">
            <summary>
            Gets the height in pixels for the specified row.
            </summary>
            <param name="row">Row index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.SetColumnHeaderRowHeight(System.Int32,System.Int32)">
            <summary>
            Sets the height in pixels for the specified row on this sheet.
            </summary>
            <param name="row">Row index</param>
            <param name="value">Height in pixels</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.GetRowHeight(System.Int32)">
            <summary>
            Gets the height in pixels for the specified row on this sheet.
            </summary>
            <param name="row">Row index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.SetRowHeight(System.Int32,System.Int32)">
            <summary>
            Sets the height in pixels for the specified row on this sheet.
            </summary>
            <param name="row">Row index</param>
            <param name="value">Height in pixels</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.SetMultipleRowHeights(System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the height in pixels for the specified rows on this sheet.
            </summary>
            <param name="row">Row index of first row</param>
            <param name="count">Number of rows for which to set the height</param>
            <param name="value">Height in pixels</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.SetOutlineBorder(FarPoint.Win.Spread.Model.CellRange,FarPoint.Win.IBorder)">
            <summary>
            Sets borders to the outline of a range of cells.
            </summary>
            <param name="cr">Cell range around which to put outline border</param>
            <param name="border">Border to place around the outside of the range of cells</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.SetInsideBorder(FarPoint.Win.Spread.Model.CellRange,FarPoint.Win.IBorder)">
            <summary>
            Sets borders to the inside of a range of cells.
            </summary>
            <param name="cr">Cell range to which to apply borders</param>
            <param name="border">Border to put around cells in the range</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.GetRowLabel(System.Int32,System.Int32)">
            <summary>
            Gets the text in the specified row header cell on this sheet.
            </summary>
            <param name="row">Row index</param>
            <param name="column">Row header column index</param>    
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.SetRowLabel(System.Int32,System.Int32,System.String)">
            <summary>
            Sets the value for a specified cell in the row header on this sheet. 
            </summary>
            <param name="row">Row index</param>
            <param name="column">Row header column index</param>
            <param name="value">Text for the label</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.GetColumnHeaderRowSizeable(System.Int32)">
            <summary>
            Gets whether the user can resize the specified row in the column header.  
            </summary>
            <param name="row">Row index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.SetColumnHeaderRowSizeable(System.Int32,System.Boolean)">
            <summary>
            Sets whether users can resize individual rows in the column header. 
            </summary>
            <param name="row">Row index</param>
            <param name="sizeable">True to allow users to resize the row; false to prohibit them</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.GetRowSizeable(System.Int32)">
            <summary>
            Gets whether the user can resize the specified row on this sheet.  
            </summary>
            <param name="row">Row index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.SetRowSizeable(System.Int32,System.Boolean)">
            <summary>
            Sets whether users can resize individual rows on this sheet. 
            </summary>
            <param name="row">Row index</param>
            <param name="sizeable">True to allow users to resize the row; false to prohibit them</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.GetRowVisible(System.Int32)">
            <summary>
            Gets whether a row on this sheet is displayed. 
            </summary>
            <param name="row">Row index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.SetRowVisible(System.Int32,System.Boolean)">
            <summary>
            Sets whether a row on this sheet is displayed.
            </summary>
            <param name="row">Row index</param>
            <param name="visible">True to display the row; false to hide the row</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.GetRowMerge(System.Int32)">
            <summary>
            Gets whether or how cells in a row on this sheet that have the same content 
            are grouped in a single cell spanning multiple columns.
            </summary>
            <param name="row">Row index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.SetRowMerge(System.Int32,FarPoint.Win.Spread.Model.MergePolicy)">
            <summary>
            Sets whether or how cells in a row on this sheet that have the same content 
            are grouped in a single cell spanning multiple columns.
            </summary>
            <param name="row">Row index (use -1 for all rows)</param>
            <param name="value">MergePolicy enumeration setting </param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.GetRowHeaderColumnWidth(System.Int32)">
            <summary>
            Gets the width in pixels for the specified column.
            </summary>
            <param name="column">Column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.SetRowHeaderColumnWidth(System.Int32,System.Int32)">
            <summary>
            Sets the width in pixels for the specified column.
            </summary>
            <param name="column">Column index</param>
            <param name="value">Width in pixels</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.GetColumnWidth(System.Int32)">
            <summary>
            Gets the width in pixels for the specified column on this sheet.
            </summary>
            <param name="column">Column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.SetColumnWidth(System.Int32,System.Int32)">
            <summary>
            Sets the width in pixels for the specified column on this sheet.
            </summary>
            <param name="column">Column index</param>
            <param name="value">Width in pixels</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.SetMultipleColumnWidths(System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the width in pixels for the specified columns on this sheet.
            </summary>
            <param name="column">Column index of first column</param>
            <param name="count">Number of columns for which to set the width</param>
            <param name="value">Width in pixels</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.GetNoteStyle(System.Int32,System.Int32)">
            <summary>
            Gets the composited style of notes of a specified cell on this sheet.
            </summary>
            <param name="row">Row index of cell</param>
            <param name="column">Column index of cell</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.UpdateNotes(System.Int32,System.Int32)">
            <summary>
            Updates cell note appearances based on style being set or on changes to note text.
            </summary>
            <param name="row">Row index of cell</param>
            <param name="column">Column index of cell</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.UpdateNotes(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Updates notes appearances based on style being set or on changes to note text.
            </summary>
            <param name="row">Row index of cell</param>
            <param name="column">Column index of cell</param>
            <param name="regenerateNote">Whether to regenerate cell notes</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.GetNote(System.Int32,System.Int32)">
            <summary>
            Gets the note of a specified cell on this sheet.
            </summary>
            <param name="row">Row index of cell</param>
            <param name="column">Column index of cell</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified row index is out of range; must be between 0 and the total number of rows 
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified column index is out of range; must be between 0 and the total number of columns 
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.SetNote(System.Int32,System.Int32,System.String)">
            <summary>
            Sets a note in a specified cell on this sheet.
            </summary>
            <param name="row">Row index of specified cell</param>
            <param name="column">Column index of specified cell</param>
            <param name="value">Note text to associate with the cell</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified row index is out of range; must be between 0 and the total number of rows 
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified column index is out of range; must be between 0 and the total number of columns 
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.GetValue(System.Int32,System.Int32)">
            <summary>
            Gets unformatted data from the specified cell on this sheet.
            </summary>
            <param name="row">Row index</param>
            <param name="column">Column index</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified row index is out of range; must be between 0 and the total number of rows 
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified column index is out of range; must be between 0 and the total number of columns 
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.SetValue(System.Int32,System.Int32,System.Object)">
            <summary>
            Sets the value for the specified cell on this sheet.
            </summary>
            <param name="row">Row index</param>
            <param name="column">Column index</param>
            <param name="value">Value to set for the specified cell</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified row index is out of range; must be between 0 and the total number of rows 
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified column index is out of range; must be between 0 and the total number of columns 
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.SetValue(System.Int32,System.Int32,System.Object,System.Boolean)">
            <summary>
            Sets the value for the specified cell on this sheet.
            </summary>
            <param name="row">Row index</param>
            <param name="column">Column index</param>
            <param name="value">Value to set for the specified cell</param>
            <param name="validate">Perform value validation</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified row index is out of range; must be between 0 and the total number of rows 
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified column index is out of range; must be between 0 and the total number of columns 
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.GetText(System.Int32,System.Int32)">
            <summary>
            Gets the formatted text in the cell on this sheet 
            using the <see cref="T:FarPoint.Win.Spread.CellType.IFormatter"/> object for the cell.
            </summary>
            <param name="row">Row index</param>
            <param name="column">Column index</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified row index is out of range; must be between 0 and the total number of rows 
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified column index is out of range; must be between 0 and the total number of columns 
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.SetText(System.Int32,System.Int32,System.String)">
            <summary>
            Sets the formatted text in the cell on this sheet 
            using the <see cref="T:FarPoint.Win.Spread.CellType.IFormatter"/> object for the cell.
            </summary>
            <param name="row">Row index</param>
            <param name="column">Column index</param>
            <param name="value">Text for the specified cell</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified row index is out of range; must be between 0 and the total number of rows 
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified column index is out of range; must be between 0 and the total number of columns 
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.GetFormula(System.Int32,System.Int32)">
            <summary>
            Gets the formula of the specified cell on this sheet.
            </summary>
            <param name="row">Row index of the cell</param>
            <param name="column">Column index of the cell</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified row index is out of range; must be between 0 and the total number of rows 
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified column index is out of range; must be between 0 and the total number of columns 
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.SetFormula(System.Int32,System.Int32,System.String)">
            <summary>
            Sets a formula in a specified cell on this sheet.
            </summary>
            <param name="row">Row index of the specified cell</param>
            <param name="column">Column index of the specified cell</param>
            <param name="value">Formula to place in the specified cell</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified row index is out of range; must be between 0 and the total number of rows 
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified column index is out of range; must be between 0 and the total number of columns 
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.GetExpression(System.Int32,System.Int32)">
            <summary>
            Gets the formula of the specified cell on this sheet.
            </summary>
            <param name="row">Row index of the cell</param>
            <param name="column">Column index of the cell</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified row index is out of range; must be between 0 and the total number of rows 
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified column index is out of range; must be between 0 and the total number of columns 
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.SetExpression(System.Int32,System.Int32,FarPoint.CalcEngine.Expression)">
            <summary>
            Sets a formula in a specified cell on this sheet.
            </summary>
            <param name="row">Row index of the specified cell</param>
            <param name="column">Column index of the specified cell</param>
            <param name="value">Formula to place in the specified cell</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified row index is out of range; must be between 0 and the total number of rows 
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified column index is out of range; must be between 0 and the total number of columns 
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.AddCustomName(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Adds a custom name to the model using the specified string value.
            </summary>
            <param name="name">Custom name to add</param>
            <param name="value">String value for the custom name</param>
            <param name="baseRow">Base row index for calculating relative row references in the value</param>
            <param name="baseColumn">Base column index for calculating relative column references in the value</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.AddCustomName(System.String,FarPoint.CalcEngine.Expression)">
            <summary>
            Adds a custom name to the model using the specified expression value.
            </summary>
            <param name="name">Custom name to add</param>
            <param name="value">Expression value for the custom name</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.RemoveCustomName(System.String)">
            <summary>
            Removes a custom name on this sheet from the model.
            </summary>
            <param name="name">Custom name to remove</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.ClearCustomNames">
            <summary>
            Removes all custom names on this sheet from the model.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.GetCustomName(System.String,System.Int32,System.Int32)">
            <summary>
            Gets the string value for a custom name on this sheet from the model.
            </summary>
            <param name="name">Custom name to get</param>
            <param name="baseRow">Base row index for calculating relative row references in the value</param>
            <param name="baseColumn">Base column index for calculating relative column references in the value</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.GetCustomName(System.String)">
            <summary>
            Gets the expression value for a custom name on this sheet from the model.
            </summary>
            <param name="name">Custom name to get</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.GetCustomNameEnumerator">
            <summary>
            Gets an IEnumerator on this sheet that enumerates through the custom names defined in the model.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.AddCustomFunction(FarPoint.CalcEngine.FunctionInfo)">
            <summary>
            Adds a user-defined custom function (FunctionInfo object) to the model for use in formulas.
            </summary>
            <param name="functionInfo">FunctionInfo object of the custom function to add</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.RemoveCustomFunction(System.String)">
            <summary>
            Removes a user-defined custom function (FunctionInfo object) on this sheet from the model.
            </summary>
            <param name="name">Name of custom function to remove</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.ClearCustomFunctions">
            <summary>
            Removes all user-defined custom functions (FunctionInfo object) on this sheet from the model.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.GetCustomFunction(System.String)">
            <summary>
            Gets a user-defined custom function (FunctionInfo object) from the model for this sheet.
            </summary>
            <param name="name">Name of custom function to get</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.GetCustomFunctionEnumerator">
            <summary>
            Gets an IEnumerator for this sheet that enumerates through the names of 
            the user-defined custom functions (FunctionInfo objects) in the model.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.GetColumnLabel(System.Int32,System.Int32)">
            <summary>
            Gets the text in the specified column header cell on this sheet. 
            </summary>
            <param name="row">Column header row index</param>
            <param name="column">Column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.SetColumnLabel(System.Int32,System.Int32,System.String)">
            <summary>
            Sets the value for a specified cell in a column header on this sheet.
            </summary>
            <param name="row">Column header row index</param>
            <param name="column">Column index</param>
            <param name="value">Text for the label</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.GetColumnSortIndicator(System.Int32)">
            <summary>
            Gets the sort indicator for the specified column on this sheet.
            </summary>
            <param name="column">Column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.SetColumnSortIndicator(System.Int32,FarPoint.Win.Spread.Model.SortIndicator)">
            <summary>
            Sets the sort indicator for the specified column on this sheet. 
            </summary>
            <param name="column">Index of column to set</param>
            <param name="order">SortIndicator enumeration setting</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.GetRowHeaderColumnSizeable(System.Int32)">
            <summary>
            Gets whether the user can resize a specified column.
            </summary>
            <param name="column">Column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.SetRowHeaderColumnSizeable(System.Int32,System.Boolean)">
            <summary>
            Sets whether users can resize individual columns.
            </summary>
            <param name="column">Column index</param>
            <param name="sizeable">True to allow users to resize the column; false to prohibit them</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.GetColumnSizeable(System.Int32)">
            <summary>
            Gets whether the user can resize a specified column on this sheet.
            </summary>
            <param name="column">Column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.SetColumnSizeable(System.Int32,System.Boolean)">
            <summary>
            Sets whether users can resize individual columns on this sheet.
            </summary>
            <param name="column">Column index</param>
            <param name="sizeable">True to allow users to resize the column; false to prohibit them</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.GetColumnVisible(System.Int32)">
            <summary>
            Gets whether a column on this sheet is displayed. 
            </summary>
            <param name="column">Column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.SetColumnVisible(System.Int32,System.Boolean)">
            <summary>
            Sets whether a column on this sheet is displayed.
            </summary>
            <param name="column">Column index</param>
            <param name="visible">True to display the column; false to hide the column</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.GetColumnMerge(System.Int32)">
            <summary>
            Gets whether or how cells in a column on this sheet that have the same content 
            are grouped in a single cell spanning multiple rows.
            </summary>
            <param name="column">Column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.SetColumnMerge(System.Int32,FarPoint.Win.Spread.Model.MergePolicy)">
            <summary>
            Sets whether or how cells in a column on this sheet that have the same content 
            are grouped in a single cell spanning multiple rows.
            </summary>
            <param name="column">Column index (use -1 for all columns)</param>
            <param name="value">MergePolicy enumeration setting</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.AddRows(System.Int32,System.Int32)">
            <summary>
            Adds a row or rows to the data model for a sheet.
            </summary>
            <param name="row">Row where the new rows are to be added</param>
            <param name="count">Number of rows to be added</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.RemoveRows(System.Int32,System.Int32)">
            <summary>
            Removes the row or rows on this sheet at the specified index.
            </summary>
            <param name="row">Index of first row to be removed</param>
            <param name="count">Number of rows to be removed</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.AddColumns(System.Int32,System.Int32)">
            <summary>
            Adds the column or columns to the data model at the specified index.
            </summary>
            <param name="column">Position at which to add the new column(s)</param>
            <param name="count">Number of columns to add</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.RemoveColumns(System.Int32,System.Int32)">
            <summary>
            Removes the column or columns on this sheet at the specified index.
            </summary>
            <param name="column">Index of first column to remove</param>
            <param name="count">Number of columns to remove</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.GetSpanCell(System.Int32,System.Int32)">
            <summary>
            Gets the range of cells that are spanned at a specified cell on this sheet.
            </summary>
            <param name="row">Row index of the specified cell</param>
            <param name="column">Column index of the specified cell</param>
            <returns>CellRange object containing the span information, or null if no span exists</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.AddSpanCell(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds a span of cells on this sheet.
            </summary>
            <param name="row">Row index of cell at which to start span</param>
            <param name="column">Column index of cell at which to start span</param>
            <param name="rowCount">Number of rows to span</param>
            <param name="columnCount">Number of columns to span</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.AddColumnHeaderSpanCell(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds a span of cells to a column header for a sheet.
            </summary>
            <param name="row">Row index of cell to start span</param>
            <param name="column">Column index of cell to start span</param>
            <param name="rowCount">Number or rows to span</param>
            <param name="columnCount">Number of columns to span</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.AddRowHeaderSpanCell(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds a span of cells to a row header for a sheet.
            </summary>
            <param name="row">Row index of cell to start span</param>
            <param name="column">Column index of cell to start span</param>
            <param name="rowCount">Number or rows to span</param>
            <param name="columnCount">Number of columns to span</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.ClearSpanCells">
            <summary>
            Removes all spans from this sheet. 
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.ClearColumnHeaderSpanCells">
            <summary>
            Removes all spans from the column headers. 
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.ClearRowHeaderSpanCells">
            <summary>
            Removes all spans from the row headers. 
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.RemoveSpanCell(System.Int32,System.Int32)">
            <summary>
            Removes the span that contains a specified anchor cell from a range of cells on this sheet. 
            </summary>
            <param name="row">Row index of anchor cell for span (at which spanned cells started)</param>
            <param name="column">Column index of anchor cell for span (at which spanned cells started)</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.RemoveColumnHeaderSpanCell(System.Int32,System.Int32)">
            <summary>
            Removes the span that contains a specified anchor cell from a range of cells in the column headers. 
            </summary>
            <param name="row">Row index of anchor cell for span (at which spanned cells started)</param>
            <param name="column">Column index of anchor cell for span (at which spanned cells started)</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.RemoveRowHeaderSpanCell(System.Int32,System.Int32)">
            <summary>
            Removes the span that contains a specified anchor cell from a range of cells in the row headers. 
            </summary>
            <param name="row">Row index of anchor cell for span (at which spanned cells started)</param>
            <param name="column">Column index of anchor cell for span (at which spanned cells started)</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.OnStickyNoteCreated(System.Object,System.EventArgs)">
            <summary>
            Occurs when a note is created in the sheet's notes container.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.FireStickyNoteCreated(FarPoint.Win.Spread.DrawingSpace.Internal.CellNote)">
            <summary>
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.FirePropertyChanged(System.String)">
            <summary>
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.FireChanged">
            <summary>
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.FireRowChanged(System.Int32,System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.FireColumnChanged(System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.FireCellChanged(System.Int32,System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.RaiseCellChanged(System.Int32,System.Int32)">
            <summary>
            Raises the <see cref="E:FarPoint.Win.Spread.SheetView.CellChanged"/> event 
            (that a change has been made to a cell on this sheet).
            </summary>
            <param name="row">Row index of cell</param>
            <param name="column">Column index of cell</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.RaiseCellChanged(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Raises the <see cref="E:FarPoint.Win.Spread.SheetView.CellChanged"/> event 
            (that a change has been made to a cell on this sheet).
            </summary>
            <param name="row">Row index</param>
            <param name="column">Column index</param>
            <param name="rowCount">Number of rows in range of cells</param>
            <param name="columnCount">Number of columns in range of cells</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.RaisePropertyChanged(System.String)">
            <summary>
            Raises the <see cref="E:FarPoint.Win.Spread.SheetView.PropertyChanged"/> event for this sheet.
            </summary>
            <param name="propertyName">Name of property to pass in <see cref="T:FarPoint.Win.Spread.SheetViewPropertyChangeEventArgs"/> object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.SortRange(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,FarPoint.Win.Spread.SortInfo[])">
            <summary>
            Sorts a range of cells on this sheet in the data model.
            </summary>
            <param name="row">Index of the starting row of the block of cells to sort</param>
            <param name="column">Index of the starting column of the block of cells to sort</param>
            <param name="rowCount">Number of rows in the block of cells</param>
            <param name="columnCount">Number of columns in the block of cells</param>
            <param name="byRows">Whether to sort by rows. True to sort by rows; false to sort by columns</param>
            <param name="sortInfo">SortInfo object with sort criteria and how to perform sort</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.SortRows(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Sorts all the rows on this sheet by the specified column.
            </summary>
            <param name="keyColumn">Column index whose values are compared during sorting</param>
            <param name="ascending">Whether to sort in ascending order</param>
            <param name="showIndicator">Whether the sort indicator should be displayed</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.SortRows(System.Int32,System.Boolean,System.Boolean,System.Collections.IComparer)">
            <summary>
            Sorts all the rows on this sheet by the specified column using the specified comparison.
            </summary>
            <param name="keyColumn">Column index whose values are compared during sorting </param>
            <param name="ascending">Whether to sort in ascending order</param>
            <param name="showIndicator">Whether the sort indicator should be displayed</param>
            <param name="comparer">IComparer object used to compare the values</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.SortRows(System.Int32,System.Int32,FarPoint.Win.Spread.SortInfo[])">
            <summary>
            Sorts a range of rows on this sheet according to the specified sort information.
            </summary>
            <param name="row">Index of first row in range to sort</param>
            <param name="rowCount">Number of rows in range to sort</param>
            <param name="sortInfo">Array of SortInfo objects with the column indexes and sort order</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.SortColumns(System.Int32,System.Boolean)">
            <summary>
            Sorts all the columns on the sheet by the specified row.
            </summary>
            <param name="keyRow">Index of the row to use as a key to sorting</param>
            <param name="ascending">Whether to sort in ascending order</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.SortColumns(System.Int32,System.Boolean,System.Collections.IComparer)">
            <summary>
            Sorts all the columns on the sheet by the specified row using the specified comparison.
            </summary>
            <param name="keyRow">Index of the row to use as a key to sorting</param>
            <param name="ascending">Whether to sort in ascending order</param>
            <param name="comparer">IComparer object used to compare the values</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.SortColumns(System.Int32,System.Int32,FarPoint.Win.Spread.SortInfo[])">
            <summary>
            Sorts a specified range of columns on the sheet by the specified sort information.
            </summary>
            <param name="column">Index of first column to start sorting </param>
            <param name="columnCount">Number of columns in range to sort</param>
            <param name="sortInfo">Array of SortInfo objects with the row indexes and sort order</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.ShouldSerializeDefaultStyle">
            <summary>
            Gets whether the DefaultStyle property should be serialized.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.InitPropArray">
            <summary>
            Property names.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.FarPoint#Win#ISerializeSupport#Serialize(System.Xml.XmlTextWriter)">
            <summary>
            Saves the sheet to XML.
            </summary>
            <param name="w">XmlTextWriter object to which to save the SheetView object</param>
            <returns>True if successful; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.FarPoint#Win#ISerializeSettings#Serialize(System.Xml.XmlTextWriter)">
            <summary>
            Saves the settings of the sheet to a XML.
            </summary>
            <param name="w">XmlTextWriter object to which to save the SheetView settings</param>
            <returns>True if successful; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.FarPoint#Win#ISerializeStyles#Serialize(System.Xml.XmlTextWriter)">
            <summary>
            Saves the styles of the sheet to XML.
            </summary>
            <param name="w">XmlTextWriter object to which to save the SheetView styles</param>
            <returns>True if successful; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.FarPoint#Win#ISerializeData#Serialize(System.Xml.XmlTextWriter)">
            <summary>
            Saves the contents of the sheet to XML.
            </summary>
            <param name="w">XmlTextWriter object to which to save the SheetView contents</param>
            <returns>True if successful; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.FarPoint#Win#ISerializeData#Serialize(System.Xml.XmlTextWriter,System.Boolean)">
            <summary>
            Saves the contents of the sheet to XML, with or without the data source and bound data.
            </summary>
            <param name="w">XmlTextWriter object to which to save the SheetView contents</param>
            <param name="saveDataSource">Whether to save the data source and bound data</param>
            <returns>True if successful; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.FarPoint#Win#ISerializePresentation#Serialize(System.Xml.XmlTextWriter)">
            <summary>
            Saves the presentation of the sheet to XML.
            </summary>
            <param name="w">XmlTextWriter object to which to save the SheetView presentation</param>
            <returns>True if successful; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.FarPoint#Win#ISerializeDrawing#Deserialize(System.Xml.XmlNodeReader)">
            <summary>
            Loads the drawing objects of the sheet from XML.
            </summary>
            <param name="r">XmlNodeReader from which to load the drawing objects</param>
            <returns>True if successful; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.FarPoint#Win#ISerializeDrawing#Serialize(System.Xml.XmlTextWriter)">
            <summary>
            Saves the drawing objects of the sheet to XML.
            </summary>
            <param name="w">XmlTextWriter object to which to save the SheetView drawing objects</param>
            <returns>True if successful; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.FarPoint#Win#ISerializeSupport#Deserialize(System.Xml.XmlNodeReader)">
            <summary>
            Loads the object of the sheet from XML.
            </summary>
            <param name="r">XmlNodeReader from which to load the object</param>
            <returns>True if successful; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.DeserializeCategories(System.Xml.XmlNodeReader)">
            <summary>
            Loads the categories of the sheet from XML.
            </summary>
            <param name="r">XmlNodeReader from which to load the categories</param>
            <returns>True if successful; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.FarPoint#Win#ISerializeSettings#Deserialize(System.Xml.XmlNodeReader)">
            <summary>
            Loads the settings of the sheet from XML.
            </summary>
            <param name="r">XmlNodeReader from which to load the settings</param>
            <returns>True if successful; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.FarPoint#Win#ISerializeStyles#Deserialize(System.Xml.XmlNodeReader)">
            <summary>
            Loads the styles of the sheet from XML.
            </summary>
            <param name="r">XmlNodeReader from which to load the styles</param>
            <returns>True if successful; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.FarPoint#Win#ISerializeData#Deserialize(System.Xml.XmlNodeReader)">
            <summary>
            Loads the contents of the sheet from XML.
            </summary>
            <param name="r">XmlNodeReader from which to load the contents</param>
            <returns>True if successful; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.FarPoint#Win#ISerializePresentation#Deserialize(System.Xml.XmlNodeReader)">
            <summary>
            Loads the presentation of the sheet from XML.
            </summary>
            <param name="r">XmlNodeReader from which to load the presentation</param>
            <returns>True if successful; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.LoadFormulas(System.Boolean)">
            Loads formulas that are deserialized during deserialization. But, not parsing yet.
            This method is called after all the sheets has been created and deserialized.
            <summary>
            Loads formulas that are deserialized but not parsed yet, 
            to be used after all sheets have been created and deserialized.
            </summary>
            <param name="recalculate">Whether to recalculate all the formulas in cells on the sheet that have changed</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.SerializeProp(System.Xml.XmlTextWriter,System.String,System.Object)">
            <summary>
            Serializes the individual properties.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.SerializeProp(System.Object)">
            <summary>
            Serializes the individual properties.
            </summary>
            <param name="prop">object</param>
            <returns>String</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.DeserializeProp(System.Object@,System.String)">
            <summary>
            Deserializes the individual propertiess
            </summary>
            <param name="prop">ref object</param>
            <param name="s">String</param>
            <returns>object</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.SaveTextFile(System.String,System.Boolean)">
            <summary>
            Saves the sheet to a text file.
            </summary>
            <param name="fileName">Path and name of file to which to save the text of the sheet</param>
            <param name="unformatted">True to bypass the IFormatter in the StyleInfo for the cell so data is unformatted; false otherwise</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.SaveTextFile(System.IO.Stream,System.Boolean)">
            <summary>
            Saves the sheet as text to a stream.
            </summary>
            <param name="stream">Stream to which to save the text of the sheet</param>
            <param name="unformatted">True to bypass the IFormatter in the StyleInfo for the cell so data is unformatted; false otherwise</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.SaveTextFile(System.String,System.Boolean,FarPoint.Win.Spread.Model.IncludeHeaders,System.String,System.String,System.String)">
            <summary>
            Saves the sheet to a text file with the specified name, formatting settings, and delimiters.
            </summary>
            <param name="fileName">Path and name of file to which to save the text of the sheet</param>
            <param name="unformatted">True to bypass the IFormatter in the StyleInfo for the cell so data is unformatted; false otherwise</param>
            <param name="includeHeaders">Whether to export headers as data</param>
            <param name="rowDelimiter">Row delimiter string</param>
            <param name="columnDelimiter">Column delimiter string</param>
            <param name="cellDelimiter">Cell delimiter string</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.SaveTextFile(System.IO.Stream,System.Boolean,FarPoint.Win.Spread.Model.IncludeHeaders,System.String,System.String,System.String)">
            <summary>
            Saves the sheet as delimited text to a stream with specific delimiters.
            </summary>
            <param name="stream">Stream to which to save the text of the sheet</param>
            <param name="unformatted">True to bypass the IFormatter in the StyleInfo for the cell so data is unformatted; false otherwise</param>
            <param name="includeHeaders">Whether to export headers as data</param>
            <param name="rowDelimiter">Row delimiter string</param>
            <param name="columnDelimiter">Column delimiter string</param>
            <param name="cellDelimiter">Cell delimiter string</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.SaveTextFileRange(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Boolean,FarPoint.Win.Spread.Model.IncludeHeaders,System.String,System.String,System.String)">
            <summary>
            Saves the range of cells in a sheet to a text file  
            with the specified name, formatting settings, and delimiters.
            </summary>
            <param name="row">Starting row index</param>
            <param name="column">Starting column index</param>
            <param name="rowCount">Number of rows</param>
            <param name="columnCount">Number of columns</param>
            <param name="fileName">Path and name of file to which to save the text of the range</param>
            <param name="unformatted">True to bypass the IFormatter in the StyleInfo for the cell so data is unformatted; false otherwise</param>
            <param name="includeHeaders">Whether to export headers as data</param>
            <param name="rowDelimiter">Row delimiter string</param>
            <param name="columnDelimiter">Column delimiter string</param>
            <param name="cellDelimiter">Cell delimiter string</param>
            <exception cref="T:System.ArgumentException">
            Cell delimiter cannot be contained in a row or column delimiter
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.SaveTextFileRange(System.Int32,System.Int32,System.Int32,System.Int32,System.IO.Stream,System.Boolean,FarPoint.Win.Spread.Model.IncludeHeaders,System.String,System.String,System.String)">
            <summary>
            Saves the range of cells in the sheet as delimited text 
            to a stream with specified delimiters.
            </summary>
            <param name="row">Starting row index</param>
            <param name="column">Starting column index</param>
            <param name="rowCount">Number of rows</param>
            <param name="columnCount">Number of columns</param>
            <param name="stream">Stream to which to save the text of the range</param>
            <param name="unformatted">True to bypass the IFormatter in the StyleInfo for the cell so data is unformatted; false otherwise</param>
            <param name="includeHeaders">Whether to export headers as data</param>
            <param name="rowDelimiter">Row delimiter string</param>
            <param name="columnDelimiter">Column delimiter string</param>
            <param name="cellDelimiter">Cell delimiter string</param>
            <exception cref="T:System.ArgumentException">
            Cell delimiter cannot be contained in a row or column delimiter
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.LoadTextFile(System.String,System.Boolean)">
            <summary>
            Loads text from a specified file into the sheet.
            </summary>
            <param name="fileName">Path and name of the file to load</param>
            <param name="unformatted">True to bypass the IFormatter in the StyleInfo for the cell so data is unformatted; false otherwise</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.LoadTextFile(System.IO.Stream,System.Boolean)">
            <summary>
            Loads text from a specified stream into the sheet.
            </summary>
            <param name="stream">Stream to which to save</param>
            <param name="unformatted">True to bypass the IFormatter in the StyleInfo for the cell so data is unformatted; false otherwise</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.LoadTextFile(System.String,System.Boolean,FarPoint.Win.Spread.Model.IncludeHeaders,System.String,System.String,System.String)">
            <summary>
            Loads delimited text from a specified file into the sheet with or without headers.
            </summary>
            <param name="fileName">Path and name of the file to load</param>
            <param name="unformatted">True to bypass the IFormatter in the StyleInfo for the cell so data is unformatted; false otherwise</param>
            <param name="includeHeaders">Whether to export headers as data</param>
            <param name="rowDelimiter">Row delimiter string</param>
            <param name="columnDelimiter">Column delimiter string</param>
            <param name="cellDelimiter">Cell delimiter string</param>
            <exception cref="T:System.ArgumentException">
            Cell delimiter cannot be contained in a row or column delimiter
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.LoadTextFile(System.IO.Stream,System.Boolean,FarPoint.Win.Spread.Model.IncludeHeaders,System.String,System.String,System.String)">
            <summary>
            Loads delimited text from a specified stream into the sheet with or without headers.
            </summary>
            <param name="stream">Stream to which to save</param>
            <param name="unformatted">True to bypass the IFormatter in the StyleInfo for the cell so data is unformatted; false otherwise</param>
            <param name="includeHeaders">Whether to export headers as data</param>
            <param name="rowDelimiter">Row delimiter string</param>
            <param name="columnDelimiter">Column delimiter string</param>
            <param name="cellDelimiter">Cell delimiter string</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.GetClip(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets a tab-delimited string that contains the formatted data 
            in a specified range of cells on this sheet.
            </summary>
            <param name="row">Starting row index of the range of cells (or -1 for all rows)</param>
            <param name="column">Starting column index of the range of cells (or -1 for all columns)</param>
            <param name="rowCount">Number of rows in the range (or -1 for all rows)</param>
            <param name="columnCount">Number of columns in the range (or -1 for all columns)</param>
            <returns>Tab-delimited string that contains the formatted data in the range</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified row index is out of range; must be between -1 and the total number of rows 
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified column index is out of range; must be between -1 and the total number of columns 
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.GetClipValue(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets a tab-delimited string that contains the unformatted data 
            in a range of cells on this sheet.
            </summary>
            <param name="row">Starting row index of the range of cells (or -1 for all rows)</param>
            <param name="column">Starting column index of the range of cells (or -1 for all columns)</param>
            <param name="rowCount">Number of rows in the range (or -1 for all rows) </param>
            <param name="columnCount">Number of columns in the range (or -1 for all columns) </param>
            <returns>Tab-delimited string that contains the unformatted data in the range of cells</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified row index is out of range; must be between 0 and the total number of rows 
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified column index is out of range; must be between 0 and the total number of columns 
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.SetClipSpecial(System.Int32,System.Int32,System.Int32,System.Int32,System.Object,FarPoint.Win.Spread.ClipboardPasteOptions)">
            <summary>
            Sets the information to paste from the Clipboard for a specified range of cells 
            on this sheet based on the paste option.
            </summary>
            <param name="row">Starting row index of the range of cells (or -1 for all rows)</param>
            <param name="column">Starting column index of the range of cells (or -1 for all columns)</param>
            <param name="rowCount">Number of rows in the range of cells (or -1 for all rows)</param>
            <param name="columnCount">Number of columns in the range of cells (or -1 for all columns)</param>
            <param name="value">CellInfo object to set into the cells of the specified range</param>
            <param name="pasteOption">Clipboard paste option that determines what to paste</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified row index is out of range; must be between 0 and the total number of rows 
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified column index is out of range; must be between 0 and the total number of columns 
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.SetClipSpecial(System.Int32,System.Int32,System.Int32,System.Int32,System.Object,FarPoint.Win.Spread.ClipboardPasteOptions,System.Boolean,System.Boolean)">
            <summary>
            Sets the information to paste from the Clipboard for a specified range of cells 
            on this sheet based on the paste option.
            </summary>
            <param name="row">Starting row index of the range of cells (or -1 for all rows)</param>
            <param name="column">Starting column index of the range of cells (or -1 for all columns)</param>
            <param name="rowCount">Number of rows in the range of cells (or -1 for all rows)</param>
            <param name="columnCount">Number of columns in the range of cells (or -1 for all columns)</param>
            <param name="value">CellInfo object to set into the cells of the specified range</param>
            <param name="pasteOption">Clipboard paste option that determines what to paste</param>
            <param name="rowHeader">True to include row headers, false otherwise</param>
            <param name="columnHeader">True to include column headers, false otherwise</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified row index is out of range; must be between 0 and the total number of rows 
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified column index is out of range; must be between 0 and the total number of columns 
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.SetClip(System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Sets a tab-delimited string of formatted text 
            in a specified range of cells on this sheet.
            </summary>
            <param name="row">Starting row index of the range of cells (or -1 for all rows)</param>
            <param name="column">Starting column index of the range of cells (or -1 for all columns) </param>
            <param name="rowCount">Number of rows in the range of cells (or -1 for all rows) </param>
            <param name="columnCount">Number of columns in the range of cells (or -1 for all columns) </param>
            <param name="value">Tab-delimited string (formatted data) to set into the cells of the specified range</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified row index is out of range; must be between 0 and the total number of rows 
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified column index is out of range; must be between 0 and the total number of columns 
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.SetClipValue(System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Sets a tab-delimited string of unformatted data 
            in a specified range of cells on this sheet.
            </summary>
            <param name="row">Starting row index or -1 for all rows</param>
            <param name="column">Starting column index or -1 for all columns</param>
            <param name="rowCount">Number of rows or -1 for all rows</param>
            <param name="columnCount">Number of columns or -1 for all columns</param>
            <param name="value">Tab-delimited string (data only) to set into the specified range of cells</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified row index is out of range; must be between 0 and the total number of rows 
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified column index is out of range; must be between 0 and the total number of columns 
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.OpenExcel(System.String,System.String)">
            <summary>
            Opens an Excel file and loads the specified sheet (by name) from that file into this sheet.
            </summary>
            <param name="fileName">Path and name of the file to open</param>
            <param name="excelSheetName">Name of the sheet to load from the file</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.OpenExcel(System.String,System.Int32)">
            <summary>
            Opens an Excel file and load the specified sheet (by number) from that file into this sheet.
            </summary>
            <param name="fileName">Path and name of the file to open</param>
            <param name="excelSheetIndex">Index of the sheet to load from the file</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.ShouldSerializeModels">
            <summary>
            Gets whether the document models for the sheet should be persisted.
            </summary>
            <returns>True if the SheetView.Models property should be saved; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.GetEditor(System.Int32,System.Int32)">
            <summary>
            Gets the editor used to edit a specified cell on this sheet. 
            </summary>
            <param name="row">Row index of the cell</param>
            <param name="column">Column index of the cell</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.GetRenderer(System.Int32,System.Int32)">
            <summary>
            Gets the renderer used to render a specified cell on this sheet. 
            </summary>
            <param name="row">Row index of the cell</param>
            <param name="column">Column index of the cell</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.GetCellType(System.Int32,System.Int32)">
            <summary>
            Gets the composited (that is, inherited) cell type for a specified cell on the sheet.
            </summary>
            <param name="row">Row index of the cell</param>
            <param name="column">Column index of the cell</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.GetStyleInfo(System.Int32,System.Int32)">
            <summary>
            Gets the style information for a specified cell on this sheet.
            </summary>
            <param name="row">Row index</param>
            <param name="column">Column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.GetStyleInfo(System.Int32,System.Int32,FarPoint.Win.Spread.StyleInfo)">
            <summary>
            Gets the style information for a specified cell on this sheet using the specified StyleInfo object.
            </summary>
            <param name="row">Row index of specified cell</param>
            <param name="column">Column index of specified cell</param>
            <param name="info"><see cref="T:FarPoint.Win.Spread.StyleInfo"/> object in which to return the style information</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.SetStyleInfo(System.Int32,System.Int32,FarPoint.Win.Spread.StyleInfo)">
            <summary>
            Sets the style for a cell, a column, a row, or an entire sheet.
            </summary>
            <param name="row">Row index</param>
            <param name="column">Column index</param>
            <param name="info"><see cref="T:FarPoint.Win.Spread.StyleInfo"/> object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.AutoSortColumn(System.Int32)">
            <summary>
            Automatically sorts the rows of a sheet according to the specified column.
            </summary>
            <param name="column">Index of column to set</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.AutoSortColumn(System.Int32,System.Boolean)">
            <summary>
            Automatically sorts the rows of a sheet according to the specified column in the specified order 
            and shows the sort indicator (unless disabled).
            </summary>
            <param name="column">Index of column to set</param>
            <param name="ascending">True for ascending sort; false for descending</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.AutoSortColumn(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Automatically sorts the rows of a sheet according to the specified column in the specified order 
            and using the sort indicator as specified.
            </summary>
            <param name="column">Index of column to set</param>
            <param name="ascending">True for ascending sort; false for descending</param>
            <param name="showIndicator">True to show the sort indicator; false otherwise</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.GetColumnAllowAutoSort(System.Int32)">
            <summary>
            Gets whether the specified column on this sheet allows automatic sorting.
            </summary>
            <param name="column">Index of column to set</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.SetColumnAllowFilter(System.Int32,System.Boolean)">
            <summary>
            Sets whether the specified column on this sheet allows filtering.
            </summary>
            <param name="column">Index of the single column that is set</param>
            <param name="allowAutoSort">True to allow filtering for the specified column; false otherwise</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.SetColumnAllowFilter(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Sets whether the specified columns on this sheet allow filtering.
            </summary>
            <param name="column">Index of the first column that is set</param>
            <param name="count">Number of columns to set</param>
            <param name="allowAutoSort">True to allow filtering for the specified columns; false otherwise</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified column index is out of range; must be between -1 and the total number of columns
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.SetColumnAllowAutoSort(System.Int32,System.Boolean)">
            <summary>
            Sets whether the specified column on this sheet allows automatic sorting.
            </summary>
            <param name="column">Index of the single column that is set</param>
            <param name="allowAutoSort">True to allow automatic sorting for the specified column; false otherwise</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.SetColumnAllowAutoSort(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Sets whether the specified columns on this sheet allow automatic sorting.
            </summary>
            <param name="column">Index of the first column that is set</param>
            <param name="count">Number of columns to set</param>
            <param name="allowAutoSort">True to allow automatic sorting for the specified columns; false otherwise</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified column index is out of range; must be between -1 and the total number of columns
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.GetColumnShowSortIndicator(System.Int32)">
            <summary>
            Gets whether the specified column on this sheet should show a sort indicator when automatically sorted.
            </summary>
            <param name="column">Column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.SetColumnShowSortIndicator(System.Int32,System.Boolean)">
            <summary>
            Sets whether the specified column on this sheet should show a sort indicator 
            when automatically sorted.
            </summary>
            <param name="column">Index of the single column that is set</param>
            <param name="showIndicator">True if the column should show the sort indicator; false otherwise</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.SetColumnShowSortIndicator(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Sets whether the specified columns on this sheet should show a sort indicator 
            when automatically sorted.
            </summary>
            <param name="column">Index of the first column that is set</param>
            <param name="count">Number of columns to set</param>
            <param name="showIndicator">True if the columns should show the sort indicator; false otherwise</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified column index is out of range; must be between -1 and the total number of columns
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.GetSelections">
            <summary>
            Gets an ordered array of <see cref="T:FarPoint.Win.Spread.Model.CellRange"/> objects, from largest to smallest, containing the selected cells
            on the sheet with minimal overlap between the ranges.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.GetArray(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets a two-dimensional array of objects containing the data for the specified range of cells on the sheet.
            </summary>
            <param name="row">Row index of first cell in range</param>
            <param name="column">Column index of first cell in range</param>
            <param name="rowCount">Number of rows in range</param>
            <param name="columnCount">Number of columns in range</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.SetArray(System.Int32,System.Int32,System.Object[0:,0:])">
            <summary>
            Sets the values in the specified two-dimensional array of objects 
            into the specified range of cells on this sheet.
            </summary>
            <param name="row">Row index</param>
            <param name="column">Column index</param>
            <param name="value">Array from which to set values</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.IsAnyCellInRowSelected(System.Int32)">
            <summary>
            Gets whether any cells in the specified row on this sheet are selected.
            </summary>
            <param name="row">Row index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.IsAnyCellInColumnSelected(System.Int32)">
            <summary>
            Gets whether any cells in the specified column on this sheet are selected.
            </summary>
            <param name="column">Column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.IsSelected(System.Int32,System.Int32)">
            <summary>
            Gets whether the specified cell on this sheet is selected.
            </summary>
            <param name="row">Row index</param>
            <param name="column">Column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.GetColumnPageBreak(System.Int32)">
            <summary>
            Gets whether a forced page break is inserted before the specified column on this sheet when printing.
            </summary>
            <param name="column">Column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.GetRowPageBreak(System.Int32)">
            <summary>
            Gets whether a forced page break is inserted before the specified row on this sheet when printing.
            </summary>
            <param name="row">Row index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.SetColumnPageBreak(System.Int32,System.Boolean)">
            <summary>
            Sets whether a forced page break is inserted before the specified column on this sheet when printing.
            </summary>
            <param name="column">Column index</param>
            <param name="value">True to force a page break before the specified column; false otherwise</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.SetRowPageBreak(System.Int32,System.Boolean)">
            <summary>
            Sets whether a forced page break is inserted before the specified row on this sheet when printing.
            </summary>
            <param name="row">Row index</param>
            <param name="value">True to force a page break before the specified row; false otherwise</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.GetColumnFromTag(FarPoint.Win.Spread.Column,System.Object)">
            <summary>
            Gets a column on this sheet with a specific tag.
            </summary>
            <param name="columnToStart">Column object in Columns collection from which to start (pass null to start from beginning)</param>
            <param name="tagToFind">Tag object to identify the Column you are looking for</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.GetRowFromTag(FarPoint.Win.Spread.Row,System.Object)">
            <summary>
            Gets a row on this sheet with a specific tag.
            </summary>
            <param name="rowToStart">Row object in Rows collection from which to start (pass null to start from beginning)</param>
            <param name="tagToFind">Tag object to identify the Row you are looking for</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.GetCellFromTag(FarPoint.Win.Spread.Cell,System.Object)">
            <summary>
            Gets a cell with a specific tag on the sheet.
            </summary>
            <param name="cellToStart">Cell object in Cells collection from which to start (pass null to start from beginning)</param>
            <param name="tagToFind">Tag object to identify the Cell you are looking for</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.GetTag(System.Int32,System.Int32)">
            <summary>
            Gets the application-defined tag value for the specified cell, column, row, or entire sheet.
            </summary>
            <param name="row">Row index</param>
            <param name="column">Column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.SetTag(System.Int32,System.Int32,System.Object)">
            <summary>
            Sets the application-defined tag value for the specified cell, column, row, or entire sheet.
            </summary>
            <param name="row">Row index (Set to -1 for all rows)</param>
            <param name="column">Column index (Set to -1 for all columns)</param>
            <param name="value">Tag value for the specified cell, column, row, or sheet</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.RemoveShape(System.String)">
            <summary>
            Removes the shape from the drawing container for the sheet.
            </summary>
            <param name="name">Name of shape</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.ClearShapes">
            <summary>
            Removes all shapes from the drawing container for the sheet.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.AddShape(FarPoint.Win.Spread.DrawingSpace.PSShape)">
            <summary>
            Adds a shape to the drawing container for the sheet.
            </summary>
            <param name="shape">Shape to add</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.AddShape(FarPoint.Win.Spread.DrawingSpace.PSShape,System.Int32,System.Int32)">
            <summary>
            Adds a shape to the drawing container for the sheet at the specified row and column.
            </summary>
            <param name="shape">Shape to add</param>
            <param name="row">Row index at which to add shape</param>
            <param name="column">Column index at which to add shape</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.GetShape(System.String)">
            <summary>
            Gets a shape.
            </summary>
            <param name="name">Name of shape</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.SetNoteBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the location and dimensions for a cell note when the style sets the note to always be shown.
            </summary>
            <param name="row">Row index of cell with note</param>
            <param name="column">Column index of cell with note</param>
            <param name="x">X-coordinate of beginning of note</param>
            <param name="y">Y-coordinate of beginning of note</param>
            <param name="width">Number of pixels in width of note</param>
            <param name="height">Number of pixels in height of note</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.SetFilteredColumn(System.Int32,System.String)">
            <summary>
            Applies the row filtering to the specified column when the specified filter item 
            is selected from the drop-down list. 
            (Internal use only.)
            </summary>
            <param name="column">Column index</param>
            <param name="filterBy">String by which to filter the rows in this column; item in the filter drop-down list</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.ResetFilteredColumn(System.Int32)">
            <summary>
            Resets the display of rows based on the "(All)" filter item 
            in the drop-down list. (Internal use only.)
            </summary>
            <param name="column">Column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.InvalidateRowFilter(System.Boolean,System.Boolean)">
            <summary>
            Resets all the temporary filter settings and filters the rows again
            based on the filter settings of each column.  (Internal use only.)
            </summary>
            <param name="clear">Whether to clear</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.FilterRows(System.Int32,System.String)">
            <summary>
            Filters the rows based on the specified column and the specified filter item.
            </summary>
            <param name="column">Colum index</param>
            <param name="filterBy">String by which to filter the rows in this column; filter item in the drop-down list</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.AddFilterListItem(System.Int32,System.Int32,System.Collections.ArrayList,System.Collections.ArrayList)">
            <summary>
            Adds an filter item to the drop-down list of filter items.
            </summary>
            <param name="row">Row index</param>
            <param name="column">Column index</param>
            <param name="list">List of filter items</param>
            <param name="occurrenceCountList">List of occurences</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.GetDropDownFilterItems(System.Int32)">
            <summary>
            Gets the filter items to be displayed in the drop-down list for the specified column.
            </summary>
            <param name="column">Column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.HasBlanks(System.Int32)">
            <summary>
            Determines whether the intersected filtered-in list for the specified column contains blanks.
            </summary>
            <param name="column">Column index</param>
            <returns>Whether it has blanks</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.HasNonBlanks(System.Int32)">
            <summary>
            Determines whether the intersected filtered-in list for the specified column contains NonBlanks.
            </summary>
            <param name="column">Column index</param>
            <returns>Whether it has non-blanks</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.SetRowFilter(FarPoint.Win.Spread.IRowFilter)">
            <summary>
            Sets the row filter for this sheet.
            </summary>
            <param name="rowFilter">Row filter</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.ClearRowFilter">
            <summary>
            Clears the row filter for this sheet.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.ClearRowFilter(System.Int32,System.Int32)">
            <summary>
            Clears the row filter for a specified column range for this sheet.
            </summary>
            <param name="column">Column index of starting column</param>
            <param name="columnCount">Number of columns in the range</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.GetColumnAllowFilter(System.Int32)">
            <summary>
            Gets whether this column contains a column filter definition.
            </summary>
            <param name="column">Column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.AutoFilterColumn(System.Int32,System.String,System.Int32)">
            <summary>
            Automatically filters the rows in the specified column according to the specified filter.
            </summary>
            <param name="column">Column index</param>
            <param name="filterString">Filter string</param>
            <param name="filterItemIndex">Filter item index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.AutoFilterReset(System.Int32)">
            <summary>
            Resets the filters on the rows in the specified column.
            </summary>
            <param name="column">Column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.SetFormulaConditionalFormat(System.Int32,System.Int32,FarPoint.Win.Spread.NamedStyle,System.String)">
            <summary>
            Sets conditional formatting based on a specified formula for a specified cell.
            </summary>
            <param name="row">Row index of the cell</param>
            <param name="column">Column index of the cell</param>
            <param name="style">Style to be applied to the cell if the formula evaluates to true</param>
            <param name="formula">Formula to evaluate for the condition</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.SetConditionalFormat(System.Int32,System.Int32,FarPoint.Win.Spread.NamedStyle,FarPoint.Win.Spread.ComparisonOperator,System.String)">
            <summary>
            Sets conditional formatting based on a specified comparison for a specified cell.
            </summary>
            <param name="row">Row index of the cell</param>
            <param name="column">Column index of the cell</param>
            <param name="style">Style to be applied to the cell if the condition is satisfied</param>
            <param name="op">Comparison operator to apply to the cell value and the specified value</param>
            <param name="value">String with the specified value</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.SetConditionalFormat(System.Int32,System.Int32,FarPoint.Win.Spread.NamedStyle,FarPoint.Win.Spread.ComparisonOperator,System.String,System.String)">
            <summary>
            Sets conditional formatting based on a specified comparison for a specified cell.
            </summary>
            <param name="row">Row index of the cell</param>
            <param name="column">Column index of the cell</param>
            <param name="style">Style to be applied to the cell if the condition is satisfied</param>
            <param name="op">Comparison operator to apply to the cell value and the parameter values</param>
            <param name="firstCondition">First specified value</param>
            <param name="lastCondition">Last specified value</param>
            <exception cref="T:System.ArgumentNullException">No condition is specified or specified condition is empty</exception>
            <exception cref="T:System.ArgumentException">Specified condition is not valid; must be a string</exception>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.SetConditionalFormat(System.Int32,System.Int32,FarPoint.Win.Spread.NamedStyle,FarPoint.Win.Spread.ComparisonOperator,FarPoint.CalcEngine.Expression,FarPoint.CalcEngine.Expression)">
            <summary>
            Sets conditional formatting based on a specified expression for a specified cell.
            </summary>
            <param name="row">Row index of the cell</param>
            <param name="column">Column index of the cell</param>
            <param name="style">Style to be applied to the cell if the condition is satisfied</param>
            <param name="op">Comparison operator to apply to the cell value and the specified value</param>
            <param name="firstCondition">First specified expression</param>
            <param name="lastCondition">First specified expression</param>
            <exception cref="T:System.ArgumentNullException">
            No condition is specified or specified condition is empty
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.SetConditionalFormat(System.Int32,System.Int32,FarPoint.Win.Spread.NamedStyle,FarPoint.Win.Spread.ComparisonOperator,FarPoint.CalcEngine.Expression)">
            <summary>
            Sets conditional formatting based on a specified expression for a specified cell.
            </summary>
            <param name="row">Row index of the cell</param>
            <param name="column">Column index of the cell</param>
            <param name="style">Style to be applied to the cell if the condition is satisfied</param>
            <param name="op">Comparison operator to apply to the cell value and the specified value</param>
            <param name="condition">Specified expression</param>
            <exception cref="T:System.ArgumentNullException">
            No condition is specified or specified condition is empty
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.GetConditionalFormats(System.Int32,System.Int32)">
            <summary>
            Gets the conditional formats for the cell at the specified row and column.
            </summary>
            <param name="row">Row index of the cell</param>
            <param name="column">Column index of the cell</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.GetConditionalFormats(System.Int32@,System.Int32@,System.Boolean)">
            <summary>
            Gets the conditional formats for the cells starting at the specified row and column.
            </summary>
            <param name="row">Row index of the first cell</param>
            <param name="column">Column index of the first cell</param>
            <param name="findNext">Whether to continue to find cells with conditional formats</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.ClearConditionalFormats(System.Int32,System.Int32)">
            <summary>
            Clears the conditional formats for the cell at the specified row and column.
            </summary>
            <param name="row">Row index of the cell</param>
            <param name="column">Column index of the cell</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.SuspendFormulaParsing">
            <summary>
            Suspends parsing of formulas.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.ResumeFormulaParsing">
            <summary>
            Resumes parsing of formulas and parses all formulas set while parsing was suspended.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.MoveColumn(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Moves the specified column from its current index to the specified index,
            and shifts each column in between and the destination column one
            column in the direction of the specified column.
            </summary>
            <param name="fromIndex">Current index of the column to move</param>
            <param name="toIndex">New index of the column after the move</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.MoveRow(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Moves the specified row from its current index to the specified index,
            and shifts each row in between and the destination row one
            row in the direction of the specified row.
            </summary>
            <param name="fromIndex">Current index of the row to move</param>
            <param name="toIndex">New index of the row after the move</param>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.ParentRowIndex">
            <summary>
            Gets the index of the parent row on this sheet.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.ParentRelationName">
            <summary>
            Gets the data relation name for this sheet.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.Parent">
            <summary>
            Gets or sets the name of the parent sheet (<see cref="T:FarPoint.Win.Spread.SheetView"/> object) of this sheet.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.ChildViews">
            <summary>
            Returns the child sheets.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.ChildRelationCount">
            <summary>
            Gets the number of child relations (data relation count) for a sheet.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.Visible">
            <summary>
            Gets or sets whether to display the sheet.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.SheetName">
            <summary>
            Gets or sets the name of the sheet.
            </summary>
            <exception cref="T:System.ArgumentException">Specified sheet name is not valid; must not be null or empty</exception>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.RestrictColumns">
            <summary>
            Gets or sets whether users are restricted from typing data in a column on this sheet 
            that is more than one column beyond the last column that contains data.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.RestrictRows">
            <summary>
            Gets or sets whether users are restricted from typing data in a row on this sheet 
            that is more than one row beyond the last row that contains data.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.RowCount">
            <summary>
            Gets or sets the number of rows on this sheet.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.ColumnCount">
            <summary>
            Gets or sets the number of columns in the sheet.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.ColumnHeaderRowCount">
            <summary>
            Gets or sets the number of rows in the column headers for the sheet.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified row count is out of range; must be between 0 and 256
            </exception>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.RowHeaderColumnCount">
            <summary>
            Gets or sets the number of columns in the row header on this sheet.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified column count is out of range; must be between 0 and 256
            </exception>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.NamedStyles">
            <summary>
            Gets or sets a <see cref="T:FarPoint.Win.Spread.NamedStyleCollection"/> of NamedStyle objects for this sheet.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.SaveNamedStyles">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.OperationMode">
            <summary>
            Gets or sets the mode that determines mouse, keyboard, and selection behavior for this sheet.
            </summary>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            Specified operation mode is not valid
            </exception>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.ActiveRowIndex">
            <summary>
            Gets or sets the row index of the active cell on the sheet.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.IsBlockSelected">
            <summary>
            Gets whether a block of cells on this sheet is currently selected.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.ActiveColumnIndex">
            <summary>
            Gets or sets the column index of the active cell on the sheet.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.SelectionCount">
            <summary>
            Gets the number of selections on this sheet.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.DataAutoCellTypes">
            <summary>
            Gets or sets whether a bound sheet automatically sets the cell type for the cells in a column.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.DataAutoHeadings">
            <summary>
            Gets or sets whether a bound sheet automatically assigns the data field names 
            to be the text in the column headers. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.DataAutoSizeColumns">
            <summary>
            Gets or sets whether a bound sheet automatically sizes its columns 
            based on the data in the associated database fields. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.DataSource">
            <summary>
            Gets or sets the name of the data source that populates the sheet.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            Data model does not support IDataSourceSupport interface
            </exception>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.DataMember">
            <summary>
            Gets or sets the name of the data member that populates the sheet.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            Data model does not support IDataSourceSupport interface
            </exception>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.FrozenRowCount">
            <summary>
            Gets or sets the number of non-scrolling rows on this sheet.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified value is out of range; must be greater than or equal to zero
            </exception>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.FrozenColumnCount">
            <summary>
            Gets or sets the number of non-scrolling columns on this sheet.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified value is out of range; must be greater than or equal to zero
            </exception>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.FrozenTrailingRowCount">
            <summary>
            Gets or sets the number of non-scrolling rows on the trailing edge of this sheet.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified value is out of range; must be greater than or equal to zero
            </exception>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.FrozenTrailingColumnCount">
            <summary>
            Gets or sets the number of non-scrolling columns on the trailing edge of this sheet.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified value is out of range; must be greater than or equal to zero
            </exception>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.GrayAreaBackColor">
            <summary>
            Gets or sets the color in the area between the sheet and the edge of the control.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.SelectionStyle">
            <summary>
            Gets or sets how selections on this sheet are drawn.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.SelectionBackColor">
            <summary>
            Gets or sets the background color of selections on this sheet.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.SelectionForeColor">
            <summary>
            Gets or sets the foreground color of selections on this sheet.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.LockBackColor">
            <summary>
            Gets or sets the background color of locked cells on this sheet.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.LockForeColor">
            <summary>
            Gets or sets the foreground color of locked cells on this sheet.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.SheetCornerHorizontalGridLine">
            <summary>
            Gets or sets the horizontal grid line for the sheet corner.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            No value is specified (specified value is null)
            </exception>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.SheetCornerVerticalGridLine">
            <summary>
            Gets or sets the vertical grid line for the sheet corner.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            No value is specified (specified value is null)
            </exception>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.RowHeaderHorizontalGridLine">
            <summary>
            Gets or sets the horizontal grid line in the row header on this sheet.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            No value is specified (specified value is null)
            </exception>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.RowHeaderVerticalGridLine">
            <summary>
            Gets or sets the vertical grid line in the row header on this sheet.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            No value is specified (specified value is null)
            </exception>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.ColumnHeaderHorizontalGridLine">
            <summary>
            Gets or sets the horizontal grid line for the sheet.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            No value is specified (specified value is null)
            </exception>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.ColumnHeaderVerticalGridLine">
            <summary>
            Gets or sets the vertical grid line in the column header for the sheet.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            No value is specified (specified value is null)
            </exception>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.HorizontalGridLine">
            <summary>
            Gets or sets the horizontal grid line for this sheet.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            No value is specified (specified value is null)
            </exception>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.VerticalGridLine">
            <summary>
            Gets or sets the vertical grid line on this sheet.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            No value is specified (specified value is null)
            </exception>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.PrintInfo">
            <summary>
            Gets or sets a <see cref="T:FarPoint.Win.Spread.PrintInfo"/> object that determines  
            printing behavior for the sheet.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.AllowNoteEdit">
            <summary>
            Gets or sets whether notes on this sheet are editable when the sheet is not protected.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.Protect">
            <summary>
            Gets or sets whether cells on this sheet that are marked as locked are uneditable.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.ReferenceStyle">
            <summary>
            Gets or sets the style for cell and range references in formulas in cells on this sheet.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.AutoCalculation">
            <summary>
            Gets or sets whether the control recalculates each formula 
            when the contents of dependent cells change for a sheet. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.Iteration">
            <summary>
            Gets or sets whether circular references are evaluated on this sheet. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.MaximumIterations">
            <summary>
            Gets or sets the maximum number of iterations for calculating circular references on this sheet.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.MaximumChange">
            <summary>
            Gets or sets the maximum amount of change below which iterations stop 
            when circular references are evaluated on this sheet.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.Tag">
            <summary>
            Gets or sets an application-defined tag value associated with the cells in this sheet.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.SheetCornerStyle">
            <summary>
            Gets or sets the style information for the sheet corner.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.SheetCornerStyleName">
            <summary>
            Gets or sets the name of the style for the sheet corner.
            </summary>
            <exception cref="T:System.ArgumentException">
            Specified NamedStyle object could not be found in the collection
            </exception>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.AutoGenerateColumns">
            <summary>
            Gets or sets whether to automatically generate the columns for a sheet based on the data source.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.StartingRowNumber">
            <summary>
            Gets or sets the number or letter displayed in the first row header on this sheet.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.StartingColumnNumber">
            <summary>
            Gets or sets the number or letter displayed in the first column header on this sheet.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.RowHeaderAutoText">
            <summary>
            Gets or sets whether row headers on this sheet display letters or numbers or are blank.
            </summary>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            Specified header setting is not valid; must be one of the HeaderAutoText enumeration settings
            </exception>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.ColumnHeaderAutoTextIndex">
            <summary>
            Gets or sets which column header row for the sheet displays the automatic text 
            when there are multiple column header rows.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.RowHeaderAutoTextIndex">
            <summary>
            Gets or sets which row header column on this sheet displays the automatic text 
            when there are multiple row header columns.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.ColumnHeaderAutoText">
            <summary>
            Gets or sets whether column headers for the sheet display letters or numbers or are blank.
            </summary>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            Specified header setting is not valid; must be one of the HeaderAutoText enumeration settings
            </exception>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.ColumnHeaderVisible">
            <summary>
            Gets or sets whether the column headers for this sheet are visible.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.RowHeaderVisible">
            <summary>
            Gets or sets whether the row headers for this sheet are visible.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.DesignMode">
            <summary>
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.DataModel">
            <summary>
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.RowHeaderDataModel">
            <summary>
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.ColumnHeaderDataModel">
            <summary>
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.RowHeaderStyleModel">
            <summary>
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.ColumnHeaderStyleModel">
            <summary>
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.RowAxisModel">
            <summary>
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.ColumnAxisModel">
            <summary>
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.RowHeaderColumnAxisModel">
            <summary>
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.ColumnHeaderRowAxisModel">
            <summary>
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.SelectionModel">
            <summary>
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.SpanModel">
            <summary>
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.RowHeaderSpanModel">
            <summary>
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.ColumnHeaderSpanModel">
            <summary>
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.StyleModel">
            <summary>
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.AutoUpdateNotes">
            <summary>
            Gets or sets whether cell notes are automatically updated
            when changes are made to the note style or to the text,
            or notes are added, removed, or moved.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.SheetView.StickyNoteCreated">
            <summary>
            Occurs when a sticky note is created on the sheet.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.SheetView.PropertyChanged">
            <summary>
            Occurs when the user changes a property of the sheet.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.SheetView.Changed">
            <summary>
            Occurs when a change is made to the sheet that may require the entire sheet 
            to be repainted (as with DefaultStyle or AlternatingRows).
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.SheetView.RowChanged">
            <summary>
            Occurs when a change is made to a row or range of rows on this sheet
            that may require the row or range of rows be repainted.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.SheetView.ColumnChanged">
            <summary>
            Occurs when a change is made to a column or range of columns 
            that may require the column or range of columns be repainted.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.SheetView.CellChanged">
            <summary>
            Occurs when a change is made to a cell or range of cells on this sheet
            that may require the cell or range of cells be repainted.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.Cells">
            <summary>
            Gets a <see cref="T:FarPoint.Win.Spread.Cells"/> object for the cells in the data area of the sheet.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.Columns">
            <summary>
            Gets a <see cref="T:FarPoint.Win.Spread.Columns"/> object for the columns in the data area of the sheet.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.Rows">
            <summary>
            Gets a <see cref="T:FarPoint.Win.Spread.Rows"/> object for the rows in the data area of the sheet.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.AlternatingRows">
            <summary>
            Gets an <see cref="T:FarPoint.Win.Spread.AlternatingRows"/> object for the alternating rows 
            in the data area of the sheet.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.ColumnHeader">
            <summary>
            Gets the <see cref="T:FarPoint.Win.Spread.ColumnHeader"/> object for the column header area of the sheet.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.RowHeader">
            <summary>
            Gets the <see cref="T:FarPoint.Win.Spread.RowHeader"/> object for the row header area of the sheet.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.DefaultStyle">
            <summary>
            Gets or sets a <see cref="T:FarPoint.Win.Spread.StyleInfo"/> object for the default style of the sheet.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.DefaultStyleName">
            <summary>
            Gets or sets the name of the default style for the sheet.
            </summary>
            <exception cref="T:System.ArgumentException">
            Specified NamedStyle object could not be found in the collection
            </exception>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.ZoomFactor">
            <summary>
            Gets or sets the scaling factor for displaying this sheet.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified scaling amount is out of range; must be betwen 0.1 (10%) and 4.0 (400%)
            </exception>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.Models">
            <summary>
            Gets or sets a <see cref="T:FarPoint.Win.Spread.SheetView.DocumentModels"/> object 
            that contains all the models for the sheet.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            Model object is not specified (or specified object is null)
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Model.ColumnAxis object is not specified (or specified object is null)
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Model.ColumnHeaderData object is not specified (or specified object is null)
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Model.ColumnHeaderRowAxis object is not specified (or specified object is null)
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Models.ColumnHeaderSpan object is not specified (or specified object is null)
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Model.ColumnHeaderStyle object is not specified (or specified object is null)
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Model.Data object is not specified (or specified object is null)
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Model.RowAxis object is not specified (or specified object is null)
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Model.RowHeaderColumnAxis object is not specified (or specified object is null)
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Model.RowHeaderData object is not specified (or specified object is null)
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Model.RowHeaderSpan object is not specified (or specified object is null)
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Model.RowHeaderStyle object is not specified (or specified object is null)
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Model.Selection object is not specified (or specified object is null)
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Model.Span object is not specified (or specified object is null)
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Model.Style object is not specified (or specified object is null)
            </exception>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.ActiveSkin">
            <summary>
            Gets or sets the skin for the sheet.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.AutoSortColumns">
            <summary>
            Gets or sets whether to allow automatic sorting for a sheet and whether to show the sort indicator.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.ColumnAutoSorted">
            <summary>
            Gets the index of the last column that was automatically sorted for the sheet.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.ColumnHeaderAutoSortIndex">
            <summary>
            Gets or sets which column header row in the sheet displays the sort indicator when there are multiple column header rows.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.ColumnHeaderAutoFilterIndex">
            <summary>
            Gets or sets which column header row in the sheet displays the filter indicator when there are multiple column header rows. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.ActiveCell">
            <summary>
            Gets a <see cref="T:FarPoint.Win.Spread.Cell"/> object for the active cell on the sheet.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.ActiveColumn">
            <summary>
            Gets a <see cref="T:FarPoint.Win.Spread.Column"/> object for the active column on the sheet.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.ActiveRow">
            <summary>
            Gets a <see cref="T:FarPoint.Win.Spread.Row"/> object for the active row on the sheet.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.NonEmptyRowCount">
            <summary>
            Gets a value that is one more than the index of the last row on this sheet containing data.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.NonEmptyColumnCount">
            <summary>
            Gets a value that is one more than the index of the last column on this sheet containing data.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.SelectionPolicy">
            <summary>
            Gets the selection policy for the sheet for normal operation mode.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.SelectionUnit">
            <summary>
            Gets or sets the smallest unit users or the application can select on this sheet.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.SerializeModels">
            <summary>
            Gets or sets whether the DocumentModels for this sheet should be serialized to the form resources, 
            rather than generating code that initializes the Cells, Columns, Rows, and AlternatingRows.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.RowFilter">
            <summary>
            Gets or sets the row filter for the sheet.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.DrawingContainer">
            <summary>
            Gets or sets a drawing container for the sheet for a drawing object in the drawing space.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.NotesContainer">
            <summary>
            Gets or sets the drawing container for cell notes in the drawing space.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.Model.BaseSheetStyleModel">
            <summary>
            Represents the partial (abstract) implementation of the ISheetStyleModel interface 
            for a style model for a sheet. 
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.Model.ISheetStyleModel">
            <summary>
            Interface that supports creating a model that represents cell style information for a sheet. 
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.ISheetStyleModel.IsEmpty">
            <summary>
            Determines whether no styles are set in the model. 
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.ISheetStyleModel.GetCompositeInfo(System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.StyleInfo)">
            <summary>
            Gets the style information for a cell, column, row, 
            or model as a composite of settings. 
            </summary>
            <param name="row">
            Row index of the cell in the model, or -1 to specify an entire column or the model default
            </param>
            <param name="column">
            Column index of the cell in the model, or -1 to specify an entire row or the model default
            </param>
            <param name="altIndex">
            Alternating row index of the cell in the model, or -1 to skip composing any alternating style
            </param>
            <param name="destInfo">
            Style set (StyleInfo object) to use for composing the styles;
            if destInfo is null then a new StyleInfo is created and used
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.ISheetStyleModel.GetDirectInfo(System.Int32,System.Int32,FarPoint.Win.Spread.StyleInfo)">
            <summary>
            Gets the direct style for the specified cell, column, row,
            or model default.  
            </summary>
            <param name="row">
            Row index of the cell in the model, or -1 to specify an entire column or the model default
            </param>
            <param name="column">
            Column index of the cell in the model, or -1 to specify an entire row or the model default
            </param>
            <param name="destInfo">
            Style set (StyleInfo object) to use for getting the style;
            if destInfo is null then a new StyleInfo is created and used
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.ISheetStyleModel.GetDirectAltRowInfo(System.Int32,FarPoint.Win.Spread.StyleInfo)">
            <summary>
            Gets the specified alternating row style in the model.
            </summary>
            <param name="index">
            Index of the alternating row style to get; must be between 0 and AltRowCount-1
            </param>
            <param name="destInfo">
            Style set (StyleInfo object) to use for composing the styles; 
            if destInfo is null then a new StyleInfo should be created and used
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.ISheetStyleModel.SetDirectInfo(System.Int32,System.Int32,FarPoint.Win.Spread.StyleInfo)">
            <summary>
            Sets the direct style for the specified cell, column, row,
            or model default.
            </summary>
            <param name="row">
            Row index of the cell in the model, or -1 to specify an entire column or the model default
            </param>
            <param name="column">
            Column index of the cell in the model, or -1 to specify an entire row or the model default
            </param>
            <param name="info">
            Style set (StyleInfo object)
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.ISheetStyleModel.SetDirectAltRowInfo(System.Int32,FarPoint.Win.Spread.StyleInfo)">
            <summary>
            Sets the specified alternating row style in the model.
            </summary>
            <param name="index">
            Index of the alternating row style to set; must be between 0 and AltRowCount-1
            </param>
            <param name="info">
            Style set (StyleInfo object)
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.ISheetStyleModel.IsRowUsed(System.Int32)">
            <summary>
            Gets whether the row in the model contains style settings. 
            </summary>
            <param name="row">Row index in the model</param>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.ISheetStyleModel.AltRowCount">
            <summary>
            Gets or sets the number of alternating row styles in the model.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.Model.ISheetStyleModel.Changed">
            <summary>
            Occurs when the style model has changed.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.BaseSheetStyleModel.IsEmpty">
            <summary>
            Determines whether the model has no style settings.
            </summary>
            This implementation always returns true. 
        </member>
        <member name="M:FarPoint.Win.Spread.Model.BaseSheetStyleModel.GetCompositeInfo(System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.StyleInfo)">
            <summary>
            Gets the style information as a composite of settings 
            for the specified cell, column, row, or model default.
            </summary>
            This implementation does nothing and returns null.
            <param name="row">
            Row index of the cell in the model,
            or -1 to specify an entire column or the model default
            </param>
            <param name="column">
            Column index of the cell in the model,
            or -1 to specify an entire row or the model default
            </param>
            <param name="altIndex">
            Alternating row index of the cell,
            or -1 to skip composing any alternating style
            </param>
            <param name="destInfo">
            Destination StyleInfo object for composing the styles; 
            if null, then a new StyleInfo should be created and used
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.BaseSheetStyleModel.GetDirectInfo(System.Int32,System.Int32,FarPoint.Win.Spread.StyleInfo)">
            <summary>
            Gets the direct style information for the specified cell, column, row,
            or model default.  
            </summary>
            This implementation does nothing and returns null.
            <param name="row">
            Row index of the cell in the model, 
            or -1 to specify an entire column or the model default
            </param>
            <param name="column">
            Column index of the cell in the model,
            or -1 to specify an entire row or the model default
            </param>
            <param name="destInfo">
            Destination StyleInfo object for getting the style; 
            if null, then a new StyleInfo should be created and used
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.BaseSheetStyleModel.GetDirectAltRowInfo(System.Int32,FarPoint.Win.Spread.StyleInfo)">
            <summary>
            Gets the style information for the specified alternating row in the model.
            </summary>
            This implementation does nothing and returns null.
            <param name="index">
            Index of the alternating row style to get; 
            must be between 0 and AltRowCount-1
            </param>
            <param name="destInfo">
            Destination StyleInfo object for composing the styles; 
            if null, then a new StyleInfo should be created and used
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.BaseSheetStyleModel.SetDirectInfo(System.Int32,System.Int32,FarPoint.Win.Spread.StyleInfo)">
            <summary>
            Sets the direct style information for the specified cell, column, row,
            or model default.
            </summary>
            This implementation does nothing.
            <param name="row">
            Row index of the cell in the model, 
            or -1 to specify an entire column or the model default
            </param>
            <param name="column">
            Column index of the cell in the model,
            or -1 to specify an entire row or the model default
            </param>
            <param name="info">Source StyleInfo object that has style information</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.BaseSheetStyleModel.SetDirectAltRowInfo(System.Int32,FarPoint.Win.Spread.StyleInfo)">
            <summary>
            Sets the specified alternating row style in the model.
            </summary>
            This implementation does nothing and returns null.
            <param name="index">
            Index of the alternating row style to set; 
            must be between 0 and AltRowCount-1
            </param>
            <param name="info">Source StyleInfo object that has style information</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.BaseSheetStyleModel.IsRowUsed(System.Int32)">
            <summary>
             Gets whether the row contains style settings.
            </summary>
            <param name="row">Row index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.BaseSheetStyleModel.NextNonEmptyColumnInRow(System.Int32,System.Int32)">
            <summary>
            Gets the index of the next column in a specified row that contains style settings.
            </summary>
            <param name="row">Row index</param>
            <param name="column">Column index before the column to start looking (-1 to start at column 0)</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.BaseSheetStyleModel.NextNonEmptyRow(System.Int32)">
            <summary>
            Gets the index of the next non-empty row after the specified row index.
            </summary>
            <param name="row">Row index after which to start looking (-1 to start at row 0)</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.BaseSheetStyleModel.FireChanged(System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.Model.SheetStyleModelEventType)">
            <summary>
            Creates a SheetStyleModelEventArgs with the specifies event
            data and calls OnChanged to raise the Changed event.
            </summary>
            <param name="row">
            Row index where the event occurred,
            or -1 if all rows affected
            </param>
            <param name="column">
            Column index where the event occurred,
            or -1 if all columns affected
            </param>
            <param name="rowCount">
            Number of rows, or -1 if all rows affected
            </param>
            <param name="columnCount">
            Number of columns, or -1 if all columns affected
            </param>
            <param name="type">Type of event that occurred</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.BaseSheetStyleModel.OnChanged(FarPoint.Win.Spread.Model.SheetStyleModelEventArgs)">
            <summary>
            Raises the Changed event.
            </summary>
            <param name="e">
            SheetStyleModelEventArgs object that contains the event data
            </param>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.BaseSheetStyleModel.AltRowCount">
            <summary>
            Gets or sets the number of alternating row styles in the model.
            </summary>
            This implementation does nothing and always returns 0.
        </member>
        <member name="P:FarPoint.Win.Spread.Model.BaseSheetStyleModel.NonEmptyColumnCount">
            <summary>
            Gets the number of columns in the model that contain style settings.
            </summary>
            This implementation does nothing and always returns 0.
        </member>
        <member name="P:FarPoint.Win.Spread.Model.BaseSheetStyleModel.NonEmptyRowCount">
            <summary>
            Gets the number of rows in the model that contain style settings.
            </summary>
            This implementation does nothing and always returns 0.
        </member>
        <member name="E:FarPoint.Win.Spread.Model.BaseSheetStyleModel.Changed">
            <summary>
            Occurs when the user makes a change to the model 
            that affects the style of the sheet.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.Model.BaseSheetAxisModel">
            <summary>
            Represents the partial (abstract) implementation of the ISheetAxisModel interface 
            for an axis model for a sheet. 
            </summary> 
        </member>
        <member name="T:FarPoint.Win.Spread.Model.ISheetAxisModel">
            <summary>
            Interface that supports creating a model that represents column and row information.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.ISheetAxisModel.IsEmpty">
            <summary>
            Determines whether there are no rows and columns in the model.  
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.ISheetAxisModel.GetSize(System.Int32)">
            <summary>
            Gets the size of the specified row or column. 
            </summary>
            <param name="index">Row or column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.ISheetAxisModel.SetSize(System.Int32,System.Int32)">
            <summary>
            Sets the size of the specified row or column.
            </summary>
            <param name="index">Row or column index</param>
            <param name="value">New size in pixels</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.ISheetAxisModel.GetVisible(System.Int32)">
            <summary>
            Gets whether the control displays the specified row or column. 
            </summary>
            <param name="index">Row or column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.ISheetAxisModel.SetVisible(System.Int32,System.Boolean)">
            <summary>
            Sets whether the control displays the specified row or column. 
            </summary>
            <param name="index">Row or column index</param>
            <param name="value">Set to True to display the specified row or column</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.ISheetAxisModel.GetResizable(System.Int32)">
            <summary>
            Gets whether users can resize the specified row or column. 
            </summary>
            <param name="index">Row or column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.ISheetAxisModel.SetResizable(System.Int32,System.Boolean)">
            <summary>
            Sets whether users can resize the specified row or column. 
            </summary>
            <param name="index">Row or column index</param>
            <param name="value">Set to True to let users resize the specified row or column</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.ISheetAxisModel.GetPageBreak(System.Int32)">
            <summary>
            Gets whether page break occurs at the specified row or the column.
            </summary>
            <param name="index">Row or column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.ISheetAxisModel.SetPageBreak(System.Int32,System.Boolean)">
            <summary>
            Sets whether a page break occurs at the specified row or the column.
            </summary>
            <param name="index">Row or column index</param>
            <param name="value">Whether a page break occurs</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.ISheetAxisModel.GetMergePolicy(System.Int32)">
            <summary>
            Gets the cell merge policy for the specified row or column.
            </summary>
            <param name="index">Row or column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.ISheetAxisModel.SetMergePolicy(System.Int32,FarPoint.Win.Spread.Model.MergePolicy)">
            <summary>
            Sets the cell merge policy for the specified row or column.
            </summary>
            <param name="index">Row or column index</param>
            <param name="value">Value with the merge policy</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.ISheetAxisModel.GetTag(System.Int32)">
            <summary>
            Gets the data associated with the specified row or column. 
            </summary>
            <param name="index">Row or column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.ISheetAxisModel.SetTag(System.Int32,System.Object)">
            <summary>
            Sets the data associated with the specified row or column.
            </summary>
            <param name="index">Row or column index</param>
            <param name="value">Object containing date to associate with row or column</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.ISheetAxisModel.GetSortIndicator(System.Int32)">
            <summary>
            Gets the sort indicator for the specified row or column.
            </summary>
            <param name="index">Row or column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.ISheetAxisModel.SetSortIndicator(System.Int32,FarPoint.Win.Spread.Model.SortIndicator)">
            <summary>
            Sets the sort indicator for the specified row or column. 
            </summary>
            <param name="index">Row or column index</param>
            <param name="value">Sort indicator value</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.ISheetAxisModel.IsPropertySet(System.Int32,FarPoint.Win.Spread.Model.SheetAxisProperty)">
            <summary>
            Determines whether the specified SheetAxisModel property is set.
            </summary>
            <param name="index">Row or column index</param>
            <param name="prop">Property to evaluate</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.ISheetAxisModel.ResetProperty(System.Int32,FarPoint.Win.Spread.Model.SheetAxisProperty)">
            <summary>
            Resets the specified SheetAxisModel property to its default value.
            </summary>
            <param name="index">Row or column index</param>
            <param name="prop">Property to reset</param>
        </member>
        <member name="E:FarPoint.Win.Spread.Model.ISheetAxisModel.Changed">
            <summary>
            Occurs when the axis model has changed.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.BaseSheetAxisModel.IsEmpty">
            <summary>
            Determines whether no rows and columns exist in the model. 
            (This implementation always returns false.)
            </summary>
            <returns>Always returns false</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.BaseSheetAxisModel.GetSize(System.Int32)">
            <summary>
            Gets the size of the specified row or column. 
            (This implementation always returns 60.) 
            </summary>
            <param name="index">Row or column index</param>
            <returns>Always returns 60</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.BaseSheetAxisModel.SetSize(System.Int32,System.Int32)">
            <summary>
            Sets the size of the specified row or column. 
            (This implementation does nothing.)
            </summary>
            <param name="index">Row or column index</param>
            <param name="value">Size in pixels</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.BaseSheetAxisModel.GetVisible(System.Int32)">
            <summary>
            Gets whether the control displays the specified row or column. 
            (This implementation always returns true.) 
            </summary>
            <param name="index">Row or column index</param>
            <returns>Always returns true</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.BaseSheetAxisModel.SetVisible(System.Int32,System.Boolean)">
            <summary>
            Sets whether the control displays the specified row or column. 
            (This implementation does nothing.) 
            </summary>
            <param name="index">Row or column index</param>
            <param name="value">Set to True to display the specified row or column</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.BaseSheetAxisModel.GetResizable(System.Int32)">
            <summary>
            Gets whether users can resize the specified row or column. 
            (This implementation always returns true.)
            </summary>
            <param name="index">Row or column index</param>
            <returns>Always returns true</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.BaseSheetAxisModel.SetResizable(System.Int32,System.Boolean)">
            <summary>
            Sets whether users can resize the specified row or column. 
            (This implementation does nothing.)
            </summary>
            <param name="index">Row or column index</param>
            <param name="value">Whether users can resize the specified row or column</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.BaseSheetAxisModel.GetPageBreak(System.Int32)">
            <summary>
            Gets whether a page break occurs at the specified row or column.
            </summary>
            <param name="index">Row or column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.BaseSheetAxisModel.SetPageBreak(System.Int32,System.Boolean)">
            <summary>
            Sets whether a page break occurs at the specified row or column.
            </summary>
            <param name="index">Row or column index</param>
            <param name="value">Whether a page break occurs</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.BaseSheetAxisModel.GetMergePolicy(System.Int32)">
            <summary>
            Gets the cell merge policy for the specified row or column.
            </summary>
            <param name="index">Row or column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.BaseSheetAxisModel.SetMergePolicy(System.Int32,FarPoint.Win.Spread.Model.MergePolicy)">
            <summary>
            Sets the cell merge policy for the specified row or column.
            </summary>
            <param name="index">Row or column index</param>
            <param name="value">Value with merge policy</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.BaseSheetAxisModel.GetTag(System.Int32)">
            <summary>
            Gets the data associated with the specified row or column. 
            (This implementation always returns null.) 
            </summary>
            <param name="index">Row or column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.BaseSheetAxisModel.SetTag(System.Int32,System.Object)">
            <summary>
            Sets the data associated with the specified row or column. 
            (This implementation does nothing.)
            </summary>
            <param name="index">Row or column index</param>
            <param name="value">Object containing date to associate with specified row or column</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.BaseSheetAxisModel.GetSortIndicator(System.Int32)">
            <summary>
            Gets the sort indicator for the specified row or column. 
            (This implementation always returns None.) 
            </summary>
            <param name="index">Row or column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.BaseSheetAxisModel.SetSortIndicator(System.Int32,FarPoint.Win.Spread.Model.SortIndicator)">
            <summary>
            Sets the sort indicator for the specified row or column.
            (This implementation does nothing.)
            </summary>
            <param name="index">Row or column index</param>
            <param name="value">Sort indicator value</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.BaseSheetAxisModel.IsPropertySet(System.Int32,FarPoint.Win.Spread.Model.SheetAxisProperty)">
            <summary>
            Determines whether a specified SheetAxisModel property is set. 
            (This implementation always returns false.) 
            </summary>
            <param name="index">Row or column index</param>
            <param name="prop">Property to evaluate</param>
            <returns>This implementation always returns false</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.BaseSheetAxisModel.ResetProperty(System.Int32,FarPoint.Win.Spread.Model.SheetAxisProperty)">
            <summary>
            Resets a specified field of a SheetAxisProperty object to its default value. 
            (This implementation does nothing.)
            </summary>
            <param name="index">Row or column index</param>
            <param name="prop">Property to reset</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.BaseSheetAxisModel.FireChanged(System.Int32,System.Int32,FarPoint.Win.Spread.Model.SheetAxisModelEventType)">
            <summary>
            Fires the Changed event.
            </summary>
            <param name="index">Row or column index</param>
            <param name="count">Number of rows or columns</param>
            <param name="type">Type of event that was raised</param>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.BaseSheetAxisModel.Count">
            <summary>
            Gets the number of rows or columns.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Spread.Model.BaseSheetAxisModel.Changed">
            <summary>
            Occurs when the user makes a change to the model 
            that affects the axis (row or column) of the sheet.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.SheetView.PropInfo">
            <summary>
            Represents the property information.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SheetView.PropInfo.category">
            <summary>
            Property category
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SheetView.PropInfo.name">
            <summary>
            Property name
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SheetView.PropInfo.prop">
            <summary>
            Property value
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SheetView.PropInfo.createSubElement">
            <summary>
            Sets createSubElement to false.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.PropInfo.#ctor(System.String,System.String,System.Object)">
            <summary>
            Creates a PropInfo object.
            </summary>
            <param name="category">String of category</param>
            <param name="name">String of name</param>
            <param name="prop">Object of property</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.PropInfo.#ctor(System.String,System.String,System.Object,System.Boolean)">
            <summary>
            Creates a PropInfo object.
            </summary>
            <param name="category">String of category</param>
            <param name="name">String of name</param>
            <param name="prop">Object of property</param>
            <param name="createSubElement">Whether to create as a sub-element</param>
        </member>
        <member name="T:FarPoint.Win.Spread.SheetView.DocumentModels">
            <summary>
            Represents the DocumentModels object that contains all of the models that make up the sheet document.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.DocumentModels.#ctor">
            <summary>
            Creates a new, empty DocumentsModels object.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.DocumentModels.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the DocumentModel object to the SerializationInfo.
            </summary>
            <param name="info">SerializationInfo</param>
            <param name="context">StreamingContext</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.DocumentModels.SetViewColumnIndex(System.Int32,System.Int32)">
            <summary>
            Sets the column index in the sheet for the specified column index in the data model.
            </summary>
            <param name="modelColumnIndex">Column index in the model</param>
            <param name="value">Column index in the sheet</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.DocumentModels.SetViewRowIndex(System.Int32,System.Int32)">
            <summary>
            Sets the row index in the sheet for the specified row index in the data model.
            </summary>
            <param name="modelRowIndex">Row index in the data model</param>
            <param name="value">Row index in the sheet</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.DocumentModels.ResetViewColumnIndexes">
            <summary>
            Resets all column indexes in the sheet to be the same as the column indexes in the corresponding data model.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.DocumentModels.ResetViewRowIndexes">
            <summary>
            Resets all row indexes in the sheet to be the same as the row indexes in the corresponding data model.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.DocumentModels.IsAnyColumnViewIndexSet">
            <summary>
            Determines whether any columns have been mapped to different column indexes in the sheet.
            </summary>
            <returns>true if there is a mapping; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.DocumentModels.IsAnyRowViewIndexSet">
            <summary>
            Determines whether any rows have been mapped to different row indexes in the sheet.
            </summary>
            <returns>true if there is a mapping; false otherwise</returns>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.DocumentModels.ColumnAxis">
            <summary>
            Gets or sets the column axis model.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            Model is not specified (or specified value is null)
            </exception>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.DocumentModels.ColumnHeaderData">
            <summary>
            Gets or sets the column header data model.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            Model is not specified (or specified value is null)
            </exception>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.DocumentModels.ColumnHeaderRowAxis">
            <summary>
            Gets or sets the column header row axis model.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            Model is not specified (or specified value is null)
            </exception>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.DocumentModels.ColumnHeaderSpan">
            <summary>
            Gets or sets the column header span model.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            Model is not specified (or specified value is null)
            </exception>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.DocumentModels.ColumnHeaderStyle">
            <summary>
            Gets or sets the column header style model.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            Model is not specified (or specified value is null)
            </exception>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.DocumentModels.Data">
            <summary>
            Gets or sets the data model.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            Model is not specified (or specified value is null)
            </exception>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.DocumentModels.RowAxis">
            <summary>
            Gets or sets the row axis model.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            Model is not specified (or specified value is null)
            </exception>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.DocumentModels.RowHeaderColumnAxis">
            <summary>
            Gets or sets the row header column axis model.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            Model is not specified (or specified value is null)
            </exception>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.DocumentModels.RowHeaderData">
            <summary>
            Gets or sets the row header data model.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            Model is not specified (or specified value is null)
            </exception>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.DocumentModels.RowHeaderSpan">
            <summary>
            Gets or sets the row header span model.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            Model is not specified (or specified value is null)
            </exception>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.DocumentModels.RowHeaderStyle">
            <summary>
            Gets or sets the row header style model.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            Model is not specified (or specified value is null)
            </exception>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.DocumentModels.Selection">
            <summary>
            Gets or sets the selection model.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            Model is not specified (or specified value is null)
            </exception>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.DocumentModels.Span">
            <summary>
            Gets or sets the span model.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            Model is not specified (or specified value is null)
            </exception>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.DocumentModels.Style">
            <summary>
            Gets or sets the style model.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            Model is not specified (or specified value is null)
            </exception>
        </member>
        <member name="T:FarPoint.Win.Spread.SheetView.SaveAutoSortColumns">
            <summary>
            Saves the sorting settings for all columns in a sheet.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SheetView.SaveAutoSortColumns.allowAutoSort">
            <summary>
            The values of AllowAutoSort for the columns.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SheetView.SaveAutoSortColumns.showIndicator">
            <summary>
            The values of ShowSortIndicator for the columns.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.SaveAutoSortColumns.#ctor(System.Collections.BitArray,System.Collections.BitArray)">
            <summary>
            Creates a new set of sorting settings.
            </summary>
            <param name="allowAutoSort">Values of AllowAutoSort for the columns</param>
            <param name="showIndicator">Values of ShowSortIndicator for the columns</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.SaveAutoSortColumns.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new set of sorting settings from serialization.
            </summary>
            <param name="info">SerializationInfo</param>
            <param name="context">StreamingContext</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetView.SaveAutoSortColumns.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates the SerializationInfo class with information about the automatic sorting settings.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.SaveAutoSortColumns.AllowAutoSort">
            <summary>
            Gets the values of AllowAutoSort (whether to allow automatic sorting) 
            for the columns in this sheet.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SheetView.SaveAutoSortColumns.ShowIndicator">
            <summary>
            Gets the values of ShowSortIndicator (whether to show a sort indicator when automatically sorted) 
            for the columns in the sheet.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetViewDesigner.OpenExcelSheets.#ctor(System.Collections.ArrayList)">
            <summary>
            Represents an array of Excel file sheet names.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetViewDesigner.OpenExcelSheets.Dispose(System.Boolean)">
            <summary>
            Cleans up any resources being used.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SheetViewDesigner.OpenExcelSheets.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.Model.IncludeHeaders">
            <summary>
            Specifies which spreadsheet headers should be included.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.Model.IncludeHeaders.None">
            <summary>
            Includes neither column nor row headers
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.Model.IncludeHeaders.ColumnHeadersCustomOnly">
            <summary>
            Includes only column headers, custom headers only
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.Model.IncludeHeaders.RowHeadersCustomOnly">
            <summary>
            Includes only row headers, custom headers only
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.Model.IncludeHeaders.BothCustomOnly">
            <summary>
            Includes both column and row headers, custom headers only
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.Model.SpreadSerializer">
            <summary>
            Represents the serializer object for opening from and saving to a file 
            the entire Spread control and all its data.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SpreadSerializer.SaveXml(FarPoint.Win.Spread.FpSpread,System.String,System.Boolean)">
            <summary>
            Saves an entire Spread control to an XML file.
            </summary>
            <param name="spread">FpSpread control to save</param>
            <param name="fileName">Path and name of file to which to save the FpSpread as XML</param>
            <param name="dataOnly">Whether to save only the data in the FpSpread</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SpreadSerializer.SaveXml(FarPoint.Win.Spread.FpSpread,System.IO.Stream,System.Boolean)">
            <summary>
            Saves an entire Spread control to an XML stream.
            </summary>
            <param name="spread">FpSpread control to save</param>
            <param name="stream">Stream to which to save the FpSpread as XML</param>
            <param name="dataOnly">Whether to save only the data in the FpSpread</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SpreadSerializer.OpenXml(FarPoint.Win.Spread.FpSpread,System.String)">
            <summary>
            Loads the specified XML data (for an entire Spread control) from a file into a Spread control.
            </summary>
            <param name="spread">FpSpread control into which to load the XML data</param>
            <param name="fileName">Path and name of the file from which load the XML data</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SpreadSerializer.OpenXml(FarPoint.Win.Spread.FpSpread,System.IO.Stream)">
            <summary>
            Loads the specified XML data (for an entire Spread control) from a stream into a Spread control.
            </summary>
            <param name="spread">FpSpread control into which to load the XML data</param>
            <param name="stream">Stream from which to load the XML data</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SpreadSerializer.CustomSerializeProp(System.Xml.XmlTextWriter,System.String,System.Object)">
            <summary>
            Retrieve a hash table of property settings from an object and serialize the
            properties to the provided XML writer.
            </summary>
            <param name="w">XmlTextWriter to which to write the XML</param>
            <param name="name">File name</param>
            <param name="o">Object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SpreadSerializer.GetDelimiterIndexes(System.String,System.String)">
            <summary>
            Returns a SparseArray containing the integer indexes
            where the specified delimiter string occurs in the specified data string.
            </summary>
            <param name="data">Data string to search</param>
            <param name="delimiter">Delimiter string for which to search</param>
            <returns>SparseArray containing the indexes where the delimiter occurs, or null if the data or delimiter is null or empty, or if the delimiter does not occur in the data</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SpreadSerializer.SplitRows(System.String,System.String,System.String,System.String)">
            <summary>
            Splits the specified delimited string into an array of row strings.
            </summary>
            <param name="data">Delimited string to split</param>
            <param name="rowDelimiter">Row delimiter string</param>
            <param name="cellDelimiter">Cell delimiter string, or null</param>
            <returns>Array of row strings</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SpreadSerializer.SplitCells(System.String,System.String,System.String,System.String)">
            <summary>
            Splits the specified delimited row string into an array of cell strings.
            </summary>
            <param name="data">Delimited row string to split</param>
            <param name="columnDelimiter">Column delimiter string</param>
            <param name="cellDelimiter">Cell delimiter string, or null</param>
            <returns>Array of cell strings</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SpreadSerializer._GetClip(FarPoint.Win.Spread.SheetView,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.String,System.String,System.String)">
            <summary>
            Gets a delimited string containing the data from a range in a sheet.
            </summary>
            <param name="sheetView">Sheet from which to get data</param>
            <param name="row">Starting row index</param>
            <param name="column">Starting column index</param>
            <param name="rowCount">Number of rows</param>
            <param name="columnCount">Number of columns</param>
            <param name="unformatted">True to bypass the IFormatter in the StyleInfo for the cell; false otherwise</param>
            <param name="rowHeader">True to get data from the row header; false otherwise</param>
            <param name="columnHeader">True to get data from the column header; false otherwise</param>
            <param name="rowDelimiter">Row delimiter string</param>
            <param name="columnDelimiter">Column delimiter string</param>
            <param name="cellDelimiter">Cell delimiter string</param>
            <returns>Delimited string containing the data from the range in the sheet</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SpreadSerializer._SetClip(FarPoint.Win.Spread.SheetView,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Sets a delimited string into a sheet.
            </summary>
            <param name="sheetView">Sheet to which to set data</param>
            <param name="row">Starting row index</param>
            <param name="column">Starting column index</param>
            <param name="rowCount">Number of rows</param>
            <param name="columnCount">Number of columns</param>
            <param name="unformatted">True to bypass the IFormatter in the StyleInfo for the cell; false otherwise</param>
            <param name="rowHeader">True to get data from the row header; false otherwise</param>
            <param name="columnHeader">True to get data from the column header; false otherwise</param>
            <param name="value">Delimited string value to set</param>
            <param name="rowDelimiter">Row delimiter string; defaults to "\r\n"</param>
            <param name="columnDelimiter">Column delimiter string; defaults to string.Empty</param>
            <param name="cellDelimiter">Cell delimiter string; defaults to "\""</param>
            <param name="expandrows">Specifies whether the row count in the data model should get expanded to the size of the range in the string.</param>
            <param name="expandcolumns">Specifies whether the column count in the data model should get expanded to the size of the range in the string.</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SpreadSerializer.SaveTextFileRange(FarPoint.Win.Spread.SheetView,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Boolean,FarPoint.Win.Spread.Model.IncludeHeaders,System.String,System.String,System.String)">
            <summary>
            Saves the sheet to a text file using the specified save flags.
            </summary>
            <param name="sheetView">Sheet to save</param>
            <param name="row">Starting row index</param>
            <param name="column">Starting column index</param>
            <param name="rowCount">Number of rows</param>
            <param name="columnCount">Number of columns</param>
            <param name="fileName">Path and name of file to which to save the file</param>
            <param name="unformatted">True to bypass the IFormatter in the StyleInfo for the cell and save unformatted data; false otherwise</param>
            <param name="includeHeaders">Which headers are exported as data</param>
            <param name="rowDelimiter">Row delimiter string</param>
            <param name="columnDelimiter">Column delimiter string</param>
            <param name="cellDelimiter">Cell delimiter string</param>
            <returns>True if successful; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SpreadSerializer.SaveTextFileRange(FarPoint.Win.Spread.SheetView,System.Int32,System.Int32,System.Int32,System.Int32,System.IO.Stream,System.Boolean,FarPoint.Win.Spread.Model.IncludeHeaders,System.String,System.String,System.String)">
            <summary>
            Saves the sheet to a text file using the specified save flags.
            </summary>
            <param name="sheetView">Sheet to save</param>
            <param name="row">Starting row index</param>
            <param name="column">Starting column index</param>
            <param name="rowCount">Number of rows</param>
            <param name="columnCount">Number of columns</param>
            <param name="stream">Stream to save the file to</param>
            <param name="unformatted">True to bypass the IFormatter in the StyleInfo for the cell and save unformatted data; false otherwise</param>
            <param name="includeHeaders">Which headers are exported as data</param>
            <param name="rowDelimiter">Row delimiter string</param>
            <param name="columnDelimiter">Column delimiter string</param>
            <param name="cellDelimiter">Cell delimiter string</param>
            <returns>True if successful; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SpreadSerializer.GetRangeText(FarPoint.Win.Spread.SheetView,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,FarPoint.Win.Spread.Model.IncludeHeaders,System.String,System.String,System.String)">
            <summary>
            Gets the text from a range in the specified sheet using the specified delimiters.
            </summary>
            <param name="sheetView">Sheet to save</param>
            <param name="row">Starting row index</param>
            <param name="column">Starting column index</param>
            <param name="rowCount">Number of rows</param>
            <param name="columnCount">Number of columns</param>
            <param name="unformatted">True to bypass the IFormatter in the StyleInfo for the cell and save unformatted data; false otherwise</param>
            <param name="includeHeaders">Which headers are exported as data</param>
            <param name="rowDelimiter">Row delimiter string</param>
            <param name="columnDelimiter">Column delimiter string</param>
            <param name="cellDelimiter">Cell delimiter string</param>
            <returns>String containing the data in the range in the sheet.</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SpreadSerializer.LoadTextFile(FarPoint.Win.Spread.SheetView,System.String,System.Boolean,FarPoint.Win.Spread.Model.IncludeHeaders,System.String,System.String,System.String)">
            <summary>
            Loads the text file with the specified formatting.
            </summary>
            <param name="sheetView">Sheet into which to load the text data</param>
            <param name="fileName">Path and name of file from which to load text</param>
            <param name="unformatted">Whether to bypass formatting</param>
            <param name="includeHeaders">Whether headers are handled as data</param>
            <param name="rowDelimiter">Row delimiter string</param>
            <param name="columnDelimiter">Column delimiter string</param>
            <param name="cellDelimiter">Cell delimiter string</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SpreadSerializer.LoadTextFile(FarPoint.Win.Spread.SheetView,System.IO.Stream,System.Boolean,FarPoint.Win.Spread.Model.IncludeHeaders,System.String,System.String,System.String)">
            <summary>
            Loads the text from a stream with the specified formatting.
            </summary>
            <param name="sheetView">Sheet into which to load the text data</param>
            <param name="stream">Stream from which to load text</param>
            <param name="unformatted">Whether to bypass formatting</param>
            <param name="includeHeaders">Whether headers are handled as data</param>
            <param name="rowDelimiter">Row delimiter string</param>
            <param name="columnDelimiter">Column delimiter string</param>
            <param name="cellDelimiter">Cell delimiter string</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SpreadSerializer.LoadTextFile(FarPoint.Win.Spread.SheetView,System.Boolean,FarPoint.Win.Spread.Model.IncludeHeaders,System.String,System.String,System.String,System.String)">
            <summary>
            Loads the text (string) data with the specified formatting.
            </summary>
            <param name="sheetView">Sheet into which to load the text data</param>
            <param name="unformatted">Whether to bypass formatting</param>
            <param name="includeHeaders">Whether headers are handled as data</param>
            <param name="rowDelimiter">Row delimiter string</param>
            <param name="columnDelimiter">Column delimiter string</param>
            <param name="cellDelimiter">Cell delimiter string</param>
            <param name="data">String containing data to load</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SpreadSerializer.IsSpreadXmlFile(System.String)">
            <summary>
            Determines whether the specified file contains a top-level Spread XML node. 
            </summary>
            <param name="fileName">Path and file name to consider as a source of Spread XML</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SpreadSerializer.IsSpreadXmlFile(System.IO.Stream)">
            <summary>
            Determines whether the specified stream contains a top-level Spread XML node.
            </summary>
            <param name="stream">Stream to consider as a source of Spread XML</param>
        </member>
        <member name="T:FarPoint.Win.Spread.Model.MergePolicy">
            <summary>
            Specifies how the control handles automatic merging of cells based on the values in the cells.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.Model.MergePolicy.None">
            <summary>
            Never automatically merges cells
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.Model.MergePolicy.Always">
            <summary>
            Always automatically merges neighboring cells with identical values
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.Model.MergePolicy.Restricted">
            <summary>
            Automatically merges cells neighboring cells with identical values 
            if the corresponding cells in another row or column are similarly merged
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.Model.IMovable">
            <summary>
            Interface that supports arranging the data in an object in the data model. 
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.IMovable.Add(System.Int32,System.Int32)">
            <summary>
            Adds items at the specified location.
            </summary>
            <param name="index">Location at which to start adding items</param>
            <param name="count">Number of items to add</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.IMovable.Remove(System.Int32,System.Int32)">
            <summary>
            Removes items from the specified location.
            </summary>
            <param name="index">Location at which to start removing items</param>
            <param name="count">Number of items to remove</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.IMovable.Clear(System.Int32,System.Int32)">
            <summary>
            Clears the values from the specified location. 
            </summary>
            <param name="index">Location at which to start clearing values</param>
            <param name="count">Number of items from which to clear values</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.IMovable.Copy(System.Int32,System.Int32,System.Int32)">
            <summary>
            Copies items from specified location to another. 
            </summary>
            <param name="fromIndex">Location from which to begin copying</param>
            <param name="toIndex">Location at which to paste copied items</param>
            <param name="count">Number of items to copy</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.IMovable.Move(System.Int32,System.Int32,System.Int32)">
            <summary>
            Moves items from specified location to another. 
            </summary>
            <param name="fromIndex">Location from which to begin the move</param>
            <param name="toIndex">Location at which to paste moved items</param>
            <param name="count">Number of items to move</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.IMovable.Swap(System.Int32,System.Int32,System.Int32)">
            <summary>
            Swaps items from one specified location to another.
            </summary>
            <param name="fromIndex">Location at which to begin the swap</param>
            <param name="toIndex">Location at which to swap items</param>
            <param name="count">Number of items to swap</param>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.IMovable.Count">
            <summary>
            Gets the number of items.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.Model.SheetAxisOrientation">
            <summary>
            Specifies the orientation for the layout information, whether by row or column, 
            for the axis model for the sheet.
            </summary> 
        </member>
        <member name="F:FarPoint.Win.Spread.Model.SheetAxisOrientation.Horizontal">
            <summary>
            Orients the layout by column (along the horizontal axis)
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.Model.SheetAxisOrientation.Vertical">
            <summary>
            Orients the layout by row (along the vertical axis)
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.Model.SheetAxisModelEventType">
            <summary>
            Specifies the type of Change event that has occurred for an axis model for the sheet. 
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.Model.SheetAxisModelEventType.LayoutItemsUpdated">
            <summary>
            Indicates that items have changed in a way that may affect the layout 
            (for example, the size or visible state has changed)
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.Model.SheetAxisModelEventType.AppearanceItemsUpdated">
            <summary>
            Indicates that items have changed in a way that does not affect the layout 
            (for example, the label or the sort indicator has changed)
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.Model.SheetAxisModelEventType.ItemsAdded">
            <summary>
            Indicates that items have been added to the model
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.Model.SheetAxisModelEventType.ItemsRemoved">
            <summary>
            Indicates that items have been removed from model
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.Model.SheetAxisModelEventType.ModelUpdated">
            <summary>
            Indicates that the entire model has changed
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.Model.SheetAxisModelEventArgs">
            <summary>
            Represents the event data for the Changed event of the axis model for the sheet. 
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SheetAxisModelEventArgs.#ctor(System.Int32,System.Int32,FarPoint.Win.Spread.Model.SheetAxisModelEventType)">
            <summary>
            Creates a new Changed event arguments object for the axis model for the sheet.
            </summary>
            <param name="index">Gets the index where the event happens</param>
            <param name="count">Gets the number of items being affected</param>
            <param name="type">Gets the event type</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SheetAxisModelEventArgs.ToString">
            <summary>
            Gets the string representation of the event.
            </summary>
            <returns>String representation of event</returns>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.SheetAxisModelEventArgs.Index">
            <summary>
            Gets the index where the event happens.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.SheetAxisModelEventArgs.Count">
            <summary>
            Gets the number of items being affected.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.SheetAxisModelEventArgs.Type">
            <summary>
            Gets the event type.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.Model.SheetAxisModelEventHandler">
            <summary>
            Handles the Changed event for the axis model for the sheet. 
            </summary> 
        </member>
        <member name="T:FarPoint.Win.Spread.Model.DefaultSheetAxisModel">
            <summary>
            	Represents the full (concrete) implementation of the ISheetAxisModel interface 
            	for an axis model for a sheet, which represents rows and columns on a sheet.  
            </summary> 
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetAxisModel.#ctor">
            <summary>
            Creates an axis model (DefaultSheetAxisModel object) with zero rows, zero columns, no parent model. 
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetAxisModel.#ctor(System.Int32,FarPoint.Win.Spread.Model.SheetAxisOrientation)">
            <summary>
            Creates an axis model (DefaultSheetAxisModel object) with the specified number of rows or columns, and no parent model. 
            </summary>
            <param name="count">Number of rows or columns in the model</param>
            <param name="orientation">Orientation of the model</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetAxisModel.#ctor(System.Int32,FarPoint.Win.Spread.Model.SheetAxisOrientation,FarPoint.Win.Spread.Model.ISheetAxisModel)">
            <summary>
            Creates an axis model (DefaultSheetAxisModel object) with the specified parent model and number of rows or columns. 
            </summary>
            <param name="count">Number of rows or columns in the model</param>
            <param name="orientation">Model orientation</param>
            <param name="parent">Parent ISheetAxisModel</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetAxisModel.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates an axis model (DefaultSheetAxisModel object) from serialization.
            </summary>
            <param name="info">SerializationInfo</param>
            <param name="context">StreamingContext</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetAxisModel.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Saves the DefaultSheetAxisModel to the SerializationInfo.
            </summary>
            <param name="info">SerializationInfo</param>
            <param name="context">StreamingContext</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetAxisModel.IsEmpty">
            <summary>
            Determines whether there are no rows and columns in the model. 
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetAxisModel.GetSize(System.Int32)">
            <summary>
            Gets the size of the specified row or column. 
            </summary>
            <param name="index">Row or column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetAxisModel.SetSize(System.Int32,System.Int32)">
            <summary>
            Sets the size of the specified row or column. 
            </summary>
            <param name="index">Row or column index</param>
            <param name="value">Size in pixels</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified size is not valid; must be greater than or equal to zero
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetAxisModel.GetVisible(System.Int32)">
            <summary>
            Gets whether the control displays the specified row or column. 
            </summary>
            <param name="index">Row or column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetAxisModel.SetVisible(System.Int32,System.Boolean)">
            <summary>
            Sets whether the control displays the specified row or column. 
            </summary>
            <param name="index">Row or column index</param>
            <param name="value">Whether the control displays the specified row or column</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetAxisModel.GetResizable(System.Int32)">
            <summary>
            Gets whether users can resize the specified row or column. 
            </summary>
            <param name="index">Row or column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetAxisModel.SetResizable(System.Int32,System.Boolean)">
            <summary>
            Sets whether users can resize the specified row or column. 
            </summary>
            <param name="index">Row or column index</param>
            <param name="value">Whether the specified row or column can be resized</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetAxisModel.GetPageBreak(System.Int32)">
            <summary>
            Gets whether a page break occurs at the specified row or column.
            </summary>
            <param name="index">Row or column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetAxisModel.SetPageBreak(System.Int32,System.Boolean)">
            <summary>
            Sets whether a page break occurs at the specified row or column.
            </summary>
            <param name="index">Row or column index</param>
            <param name="value">Whether the page break occurs</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetAxisModel.GetMergePolicy(System.Int32)">
            <summary>
            Gets the cell merge policy for the specified row or column.
            </summary>
            <param name="index">Row or colum index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetAxisModel.SetMergePolicy(System.Int32,FarPoint.Win.Spread.Model.MergePolicy)">
            <summary>
            Sets the cell merge policy for the row or column.
            </summary>
            <param name="index">Row or column index</param>
            <param name="value">Value with merge policy</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetAxisModel.GetTag(System.Int32)">
            <summary>
            Gets the data associated with the specified row or column. 
            </summary>
            <param name="index">Row or column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetAxisModel.SetTag(System.Int32,System.Object)">
            <summary>
            Sets the data associated with the specified row or column.
            </summary>
            <param name="index">Row or column index</param>
            <param name="value">Object containing data</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetAxisModel.GetSortIndicator(System.Int32)">
            <summary>
            Gets the sort indicator for the specified row or column. 
            </summary>
            <param name="index">Row or column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetAxisModel.SetSortIndicator(System.Int32,FarPoint.Win.Spread.Model.SortIndicator)">
            <summary>
            Sets the sort indicator for the specified row or column.
            </summary>
            <param name="index">Row or column index</param>
            <param name="value">Value with the SortIndicator enumeration</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetAxisModel.FarPoint#Win#Spread#Model#IMovable#Add(System.Int32,System.Int32)">
            <summary>
            This IMovable method is used internally by the control to
            keep the row and column counts in sync between the models
            and is not intended to be called directly from your code.
            Use the IRangeSupport methods in the data model, or the
            wrapper methods in the SheetView instead.
            </summary>
            <param name="index">Row or column index</param>
            <param name="count">Number of rows or columns to add</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetAxisModel.FarPoint#Win#Spread#Model#IMovable#Remove(System.Int32,System.Int32)">
            <summary>
            This IMovable method is used internally by the control to
            keep the row and column counts in sync between the models
            and is not intended to be called directly from your code.
            Use the IRangeSupport methods in the data model, or the
            wrapper methods in the SheetView instead.
            </summary>
            <param name="index">Row or column index at which to start deleting rows or columns</param>
            <param name="count">Number of rows or columns to delete</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetAxisModel.Clear(System.Int32,System.Int32)">
            <summary>
            Removes the values from the specified rows or columns.
            </summary>
            <param name="index">Index before which to clear the rows or columns</param>
            <param name="count">Number of rows or columns to clear</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetAxisModel.Copy(System.Int32,System.Int32,System.Int32)">
            <summary>
            Copies one or more rows or columns and pastes them at the specified location. 
            </summary>
            <param name="fromIndex">Row or column index at which to start copying rows or columns</param>
            <param name="toIndex">Row or column index at which to paste rows or columns</param>
            <param name="count">Number of rows or columns to copy</param>
            <exception cref="T:System.IndexOutOfRangeException">Specified start index is not valid; must be between 0 and the total count</exception>
            <exception cref="T:System.IndexOutOfRangeException">Specified destination index is not valid; must be between 0 and the total count</exception>
            <exception cref="T:System.ArgumentException">Specified count is not valid; must be between 1 and the total count</exception>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetAxisModel.Move(System.Int32,System.Int32,System.Int32)">
            <summary>
            Moves one or more rows or columns and pastes them at the specified location.
            </summary>
            <param name="fromIndex">Row or column index at which to start moving rows or columns</param>
            <param name="toIndex">Row or column index at which to paste rows or columns</param>
            <param name="count">Number of rows or columns to move</param>
            <exception cref="T:System.IndexOutOfRangeException">Specified start index is not valid; must be between 0 and the total count</exception>
            <exception cref="T:System.IndexOutOfRangeException">Specified destination index is not valid; must be between 0 and the total count</exception>
            <exception cref="T:System.ArgumentException">Specified count is not valid; must be between 1 and the total count</exception>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetAxisModel.Swap(System.Int32,System.Int32,System.Int32)">
            <summary>
            Swaps one or more rows or columns. 
            </summary>
            <param name="fromIndex">Row or column index at which to start swapping rows or columns</param>
            <param name="toIndex">Row or column index at which to swap rows or columns</param>
            <param name="count">Number of rows or columns to swap</param>
            <exception cref="T:System.IndexOutOfRangeException">Specified start index is not valid; must be between 0 and the total count</exception>
            <exception cref="T:System.IndexOutOfRangeException">Specified destination index is not valid; must be between 0 and the total count</exception>
            <exception cref="T:System.ArgumentException">Specified count is not valid; must be between 1 and the total count</exception>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetAxisModel.IsPropertySet(System.Int32,FarPoint.Win.Spread.Model.SheetAxisProperty)">
            <summary>
            Determines whether the specified SheetAxisModel property is set.
            </summary>
            <param name="index">Row or column index</param>
            <param name="prop">Property to evaluate</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetAxisModel.ResetProperty(System.Int32,FarPoint.Win.Spread.Model.SheetAxisProperty)">
            <summary>
            Resets the specified SheetAxisModel property to its default value.
            </summary>
            <param name="index">Row or column index</param>
            <param name="prop">Property to reset</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetAxisModel.Serialize(System.Xml.XmlTextWriter)">
            <summary>
            Saves the Spread to XML.
            </summary>
            <param name="w">XmlTextWriter object to which to save the Spread</param>
            <returns>True if successful; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetAxisModel.Deserialize(System.Xml.XmlNodeReader)">
            <summary>
            Loads an object from XML.
            </summary>
            <param name="r">XmlNodeReader from which to load the object</param>
            <returns>True if successful; false otherwise</returns>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.DefaultSheetAxisModel.Parent">
            <summary>
            Gets or sets the parent sheet axis model.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.DefaultSheetAxisModel.Count">
            <summary>
            Gets the number of rows or columns in the model.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.DefaultSheetAxisModel.Orientation">
            <summary>
            Gets the axis orientation; whether the object is a row or column. 
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.Model.SheetAxisProperty">
            <summary>
            Represents the properties for the axis model for the sheet.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.Model.SheetAxisProperty.Size">
            <summary>
            Represents the axis model Size property.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.Model.SheetAxisProperty.Visible">
            <summary>
            Represents the axis model Visible property.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.Model.SheetAxisProperty.Resizable">
            <summary>
            Represents the axis model Resizable property.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.Model.SheetAxisProperty.PageBreak">
            <summary>
            Represents the axis model PageBreak property.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.Model.SheetAxisProperty.MergePolicy">
            <summary>
            Represents the axis model MergePolicy property.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.Model.SheetAxisProperty.Tag">
            <summary>
            Represents the axis model Tag property.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.Model.SheetAxisProperty.SortIndicator">
            <summary>
            Represents the axis model SortIndicator property.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.Model.SheetAxisProperty.Any">
            <summary>
             Represents any of the axis model properties.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SheetAxisProperty.#ctor(System.String)">
            <summary>
            Creates a new axis model property.
            </summary>
            <param name="text">String with name</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SheetAxisProperty.ToString">
            <summary>
            Returns the property name.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.Model.SortIndicator">
            <summary>
            Specifies the display of the sort indicator. 
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.Model.SortIndicator.None">
            <summary>
            Displays no sort indicator
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.Model.SortIndicator.Ascending">
            <summary>
            Displays the ascending sort indicator
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.Model.SortIndicator.Descending">
            <summary>
            Displays the descending sort indicator
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.AxisInfo.#ctor">
            <summary>
            AxisInfo: Internal Use Only.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.Model.GeneralFormatter">
            <summary>
            Represents the formatter object for parsing and formatting values for the general cell type.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.GeneralFormatter.#cctor">
            <summary>
            Creates a new formatter with null FormatString and default NumberFormatInfo  
            and DateTimeFormatInfo (copied from the current culture).
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.GeneralFormatter.#ctor">
            <summary>
            Creates a new formatter with null FormatString and default NumberFormatInfo  
            and DateTimeFormatInfo (copied from the current culture).
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.GeneralFormatter.#ctor(System.String,System.Boolean)">
            <summary>
            Creates a new formatter with the specified format 
            and default formatting information (copied from the current culture).
            </summary>
            <param name="formatString">String with format information</param>
            <param name="isDateFormat">Whether to consider the number as a date and format it as such</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.GeneralFormatter.#ctor(System.String,System.IFormatProvider)">
            <summary>
            Creates a new formatter with the specified format 
            and formatting information (copied from the current culture).
            </summary>
            <param name="formatString">String with format information</param>
            <param name="formatInfo">IFormatProvider interface with number and date-time format information</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.GeneralFormatter.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new formatter from serialization.
            </summary>
            <param name="info">SerializationInfo</param>
            <param name="context">StreamingContext</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.GeneralFormatter.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Saves the formatter to the SerializationInfo object.
            </summary>
            <param name="info">SerializationInfo</param>
            <param name="context">StreamingContext</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.GeneralFormatter.InitDateTimeMembers">
            <summary>
            Builds the list of valid date string values and the list of acceptible date-time formats.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.GeneralFormatter.SetFormatString(System.String,System.Boolean)">
            <summary>
            Sets the format string used to format values.
            </summary>
            <param name="value">Format string</param>
            <param name="isDateFormat">Whether to consider a number as a date and time</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.GeneralFormatter.Format(System.Object)">
            <summary>
            Formats the object to a string.
            </summary>
            <param name="obj">Object to format</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.GeneralFormatter.Parse(System.String)">
            <summary>
            Parses the string to an object and returns the result.
            </summary>
            <param name="s">String to be parsed</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.GeneralFormatter.Parse(System.String,System.IFormatProvider@,System.String@)">
            <summary>
            Parses the string to an object and returns the result.
            </summary>
            <param name="s">String</param>
            <param name="formatInfo">IFormatProvider</param>
            <param name="formatString">String</param>
            <exception cref="T:FarPoint.Win.Spread.Model.ParseException">Not a valid hexidecimal number.</exception>
            <returns>Results of the parsing</returns>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.GeneralFormatter.FormatString">
            <summary>
            Gets or sets the format string used to format the date value.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.GeneralFormatter.IsDateFormat">
            <summary>
            Gets whether the format string being used is a date-time format string.    
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.GeneralFormatter.DateTimeFormat">
            <summary>
            Gets or sets the format for displaying dates and times.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.GeneralFormatter.NumberFormat">
            <summary>
            Gets or sets the format for displaying currency values.
            </summary>    
        </member>
        <member name="T:FarPoint.Win.Spread.Model.DateTimeFormatEditor">
            <summary>
            Editor for the DateTimeFormat property.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DateTimeFormatEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits the cell type value.
            </summary>
            <param name="context">ITypeDescriptorContext</param>
            <param name="provider">IServiceProvider interface</param>
            <param name="value">Object with cell type value</param>
            <returns>Object with cell type value</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DateTimeFormatEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets the style of the type editor (which is drop-down).
            </summary>
            <param name="context">ITypeDescriptorContext</param>
            <returns>UITypeEditorEditStyle</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DateTimeFormatEditor.EqualDateTimeFormats(System.Globalization.DateTimeFormatInfo,System.Globalization.DateTimeFormatInfo)">
            <summary>
            Returns a value indicating whether the specified DateTimeFormatInfo is the same as the current culture's DateTimeFormatInfo.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.Model.NumberFormatEditor">
            <summary>
            Editor for the NumberFormatEditor property.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.NumberFormatEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits the cell type value.
            </summary>
            <param name="context">ITypeDescriptorContext</param>
            <param name="provider">IServiceProvider</param>
            <param name="value">object</param>
            <returns>object</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.NumberFormatEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets the style of the type editor (which is drop-down).
            </summary>
            <param name="context">ITypeDescriptorContext</param>
            <returns>UITypeEditorEditStyle</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.NumberFormatEditor.EqualNumberFormats(System.Globalization.NumberFormatInfo,System.Globalization.NumberFormatInfo)">
            <summary>
            Gets whether the specified NumberFormatInfo is the same as the current culture's NumberFormatInfo.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.BorderCollapse">
            <summary>
            Specifies how the borders of adjacent cells are displayed in the view.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.BorderCollapse.Collapse">
            <summary>
            Displays borders for adjacent cells as collapsed into a single border
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.BorderCollapse.Separate">
            <summary>
            Displays borders for adjacent cells as separate borders detached from each other
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.OperationMode">
            <summary>
            Specifies how the sheet responds to user interaction and what selections are allowed. 
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.OperationMode.Normal">
            <summary>
            Allows default spreadsheet operations
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.OperationMode.ReadOnly">
            <summary>
            Prohibits the user from changing anything on this spreadsheet
            (and sheet has no active cell)
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.OperationMode.RowMode">
            <summary>
            Allows the user to select rows in the spreadsheet, 
            and edit individual cells in rows by double-clicking the cell
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.OperationMode.SingleSelect">
            <summary>
            Allows the user to select single rows in the spreadsheet 
            (as one would in a single-selection list box)
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.OperationMode.MultiSelect">
            <summary>
            Allows the user to select multiple contiguous rows in the spreadsheet 
            (as one would in a multiple-select list box)
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.OperationMode.ExtendedSelect">
            <summary>
            Allows the user to select multiple discontiguous rows in the spreadsheet 
            (as one would in an extended-select list box)
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.SelectionBlockOptions">
            <summary>
            Specifies which part of the sheet can be selected by the user.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SelectionBlockOptions.None">
            <summary>
            [0] Does not allow selections
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SelectionBlockOptions.Cells">
            <summary>
            [1] Allows the user to select a range of cells
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SelectionBlockOptions.Rows">
            <summary>
            [2] Allows the user to select a row or rows of cells
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SelectionBlockOptions.Columns">
            <summary>
            [4] Allows the user to select a column or columns of cells
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SelectionBlockOptions.Sheet">
            <summary>
            [8] Allows the user to select the entire sheet of cells by clicking the sheet corner
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.TextTipPolicy">
            <summary>
            Specifies how the the text tip of a cell in the view is displayed, and also how the cell note is displayed. 
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.TextTipPolicy.Off">
            <summary>
            Does not display it
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.TextTipPolicy.Fixed">
            <summary>
            Aligns it to the top-left corner of the cell for which it appears at any time
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.TextTipPolicy.Floating">
            <summary>
            Aligns it to the pointer location at any time
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.TextTipPolicy.FixedFocusOnly">
            <summary>
            Aligns it to the top-left corner of the cell for which it appears 
            only when the control has the focus
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.TextTipPolicy.FloatingFocusOnly">
            <summary>
            Aligns it to the pointer location only when the control has the focus
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.TabStripButton">
            <summary>
            Specifies the sheet tab buttons.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.TabStripButton.None">
            <summary>
            Indicates the None button
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.TabStripButton.Home">
            <summary>
            Indicates the Home button
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.TabStripButton.Previous">
            <summary>
            Indicates the Previous button
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.TabStripButton.Next">
            <summary>
            Indicates the Next button
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.TabStripButton.End">
            <summary>
            Indicates the End button
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.FillDirection">
            <summary>
            Specifies the direction of the fill in the view.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.FillDirection.Left">
            <summary>
            Fills from the right to the left
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.FillDirection.Right">
            <summary>
            Fills from the left to the right
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.FillDirection.Up">
            <summary>
            Fills from the bottom to the top
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.FillDirection.Down">
            <summary>
            Fills from the top to the bottom
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.VerticalPosition">
            <summary>
            Specifies the vertical position of the object 
            for placement in the displayed portion of the sheet.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.VerticalPosition.Top">
            <summary>
            Positions the cell or row at the top 
            of the displayed portion of the sheet
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.VerticalPosition.Center">
            <summary>
            Positions the cell or row in the center
            of the displayed portion of the sheet
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.VerticalPosition.Bottom">
            <summary>
            Positions the cell or row at the bottom
            of the displayed portion of the sheet
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.VerticalPosition.Nearest">
            <summary>
            Positions the cell or row at the nearest edge
            of the displayed portion of the sheet
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.HorizontalPosition">
            <summary>
            Specifies the horizontal position of the object 
            for placement in the displayed portion of the sheet.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.HorizontalPosition.Left">
            <summary>
            Positions the cell or column at the leftmost position 
            of the displayed portion of the sheet
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.HorizontalPosition.Center">
            <summary>
            Positions the cell or column in the center
            of the displayed portion of the sheet
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.HorizontalPosition.Right">
            <summary>
            Positions the cell or column at the rightmost position 
            of the displayed portion of the sheet
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.HorizontalPosition.Nearest">
            <summary>
            Positions the cell or column to the nearest edge
            of the displayed portion of the sheet
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.CursorType">
            <summary>
            Specifies the area in the view in which to display a different pointer.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CursorType.Normal">
            <summary>
            Displays a pointer in the general area within the control
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CursorType.RowResize">
            <summary>
            Displays a pointer in the row resize area
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CursorType.ColumnResize">
            <summary>
            Displays a pointer in the column resize area
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CursorType.LockedCell">
            <summary>
            Displays a pointer within a locked cell
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CursorType.ColumnHeader">
            <summary>
            Displays a pointer within a column header
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CursorType.RowHeader">
            <summary>
            Displays a pointer within a row header
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CursorType.DragDropArea">
            <summary>
            Displays a pointer on the edge of the selection to drag and drop
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CursorType.Corner">
            <summary>
            Displays a pointer within the sheet corner
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CursorType.TabStrip">
            <summary>
            Displays a pointer in the sheet tabs
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CursorType.DragFill">
            <summary>
            Displays a pointer on the edge of the area to drag and fill
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CursorType.RowColumnSplitBar">
            <summary>
            Displays a pointer over row and column split bars
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CursorType.RowSplitBar">
            <summary>
            Displays a pointer over the row split bar
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CursorType.ColumnSplitBar">
            <summary>
            Displays a pointer over the column split bar
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CursorType.RowSplitBox">
            <summary>
            Displays a pointer over the row split box
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CursorType.ColumnSplitBox">
            <summary>
            Displays a pointer over the column split box
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.CursorType.TabStripSplitBox">
            <summary>
            Displays a pointer over the sheet tabs split box
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.InputMapMode">
            <summary>
            Specifies the condition for which an input map applies.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.InputMapMode.WhenFocused">
            <summary>
            Uses an input map when the control has the focus
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.InputMapMode.WhenAncestorOfFocused">
            <summary>
            Uses an input map when the control or a child of the control has the focus
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.SortState">
            <summary>
            Specifies the state of sorting for the current column 
            so the column renderer knows which sorting image to draw.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SortState.None">
            <summary>
            Sorting is not enabled.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SortState.Unsorted">
            <summary>
            Sorting is available, but not currently in use.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SortState.Ascending">
            <summary>
            Sorted in ascending order.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SortState.Descending">
            <summary>
            Sorted in descending order.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SortState.UnsortedDisabled">
            <summary>
            Sorting is not enabled, and the control is disabled.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SortState.AscendingDisabled">
            <summary>
            Sorted in ascending order, and the control is disabled.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SortState.DescendingDisabled">
            <summary>
            Sorted in descending order, and the control is disabled.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.FilterState">
            <summary>
            Specifies the state of filtering for the current column 
            so the column renderer knows which filtering image to draw.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.FilterState.None">
            <summary>
            Filtering is not available.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.FilterState.FilterActive">
            <summary>
            Filtering is active.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.FilterState.FilterInactive">
            <summary>
            Filtering is available, but not currently in use.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.FilterState.FilterActiveDisabled">
            <summary>
            Filtering is active, and the control is disabled.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.FilterState.FilterInactiveDisabled">
            <summary>
            Filtering is available, but not currently in use, and the control is disabled.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.SpreadActions">
            <summary>
            Represents the actions available for input maps.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.None">
            <summary>
            Does not perform an action.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.CancelEditing">
            <summary>
            Turns off edit mode and removes the changes.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.StartEditing">
            <summary>
            Turns on edit mode.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.StartEditingFormula">
            <summary>
            Allows the user to start entering a formula.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.StopEditing">
            <summary>
            Turns off edit mode.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.MoveToNextRow">
            <summary>
            Moves the active cell down one row.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.MoveToPreviousRow">
            <summary>
            Moves the active cell up one row.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.MoveToNextColumn">
            <summary>
            Moves the active cell to the right one column.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.MoveToPreviousColumn">
            <summary>
            Moves the active cell to the left one column.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.MoveToNextRowWrap">
            <summary>
            Moves the active cell down one row.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.MoveToPreviousRowWrap">
            <summary>
            Moves the active cell up one row.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.MoveToNextColumnWrap">
            <summary>
            Moves the active cell to the right one column.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.MoveToPreviousColumnWrap">
            <summary>
            Moves the active cell to the left one column.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.MoveToNextRowFirstColumn">
            <summary>
            Moves the active cell to the first column of the next row.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.MoveToPreviousRowFirstColumn">
            <summary>
            Moves the active cell to the first column of the previous row.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.MoveToNextColumnFirstRow">
            <summary>
            Moves the active cell to the first row of the next column.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.MoveToPreviousColumnFirstRow">
            <summary>
            Moves the active cell to the first row of the previous column.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.MoveToNextPageOfRows">
            <summary>
            Moves the active cell down one page of rows.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.MoveToPreviousPageOfRows">
            <summary>
            Moves the active cell up one page of rows.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.MoveToNextPageOfColumns">
            <summary>
            Moves the active cell right one page of columns.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.MoveToPreviousPageOfColumns">
            <summary>
            Moves the active cell left one page of columns.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.MoveToFirstRow">
            <summary>
            Moves the active cell to the first row.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.MoveToLastRow">
            <summary>
            Moves the active cell to the last row.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.MoveToLastRowWithData">
            <summary>
            Moves the active cell to the last row that contains data.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.MoveToFirstColumn">
            <summary>
            Moves the active cell to the first column.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.MoveToLastColumn">
            <summary>
            Moves the active cell to the last column.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.MoveToLastColumnWithData">
            <summary>
            Moves the active cell to the last column that contains data.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.MoveToFirstCell">
            <summary>
            Moves the active cell to the first cell in the sheet.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.MoveToLastCell">
            <summary>
            Moves the active cell to the last cell in the sheet.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.MoveToLastCellWithData">
            <summary>
            Moves the active cell to the last cell that contains data.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.MoveToNextSheet">
            <summary>
            Moves the active cell to the next sheet.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.MoveToPreviousSheet">
            <summary>
            Moves the active cell to the next sheet.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.ExtendToNextRow">
            <summary>
            Extends the selection down one row.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.ExtendToPreviousRow">
            <summary>
            Extends the selection up one row.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.ExtendToNextColumn">
            <summary>
            Extends the selection one column to the right.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.ExtendToPreviousColumn">
            <summary>
            Extends the selection one column to the left.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.ExtendToNextPageOfRows">
            <summary>
            Extends the selection to include one page of rows down.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.ExtendToPreviousPageOfRows">
            <summary>
            Extends the selection to include one page of rows up.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.ExtendToNextPageOfColumns">
            <summary>
            Extends the selection to include the columns one page to the right.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.ExtendToPreviousPageOfColumns">
            <summary>
            Extends the selection to include the columns one page to the left.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.ExtendToFirstRow">
            <summary>
            Extends the selection to the first row.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.ExtendToLastRow">
            <summary>
            Extends the selection to the last row.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.ExtendToLastRowWithData">
            <summary>
            Extends the selection to the last row that contains data.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.ExtendToFirstColumn">
            <summary>
            Extends the selection to the first column.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.ExtendToLastColumn">
            <summary>
            Extends the selection to the last column.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.ExtendToLastColumnWithData">
            <summary>
            Extends the selection to the last column that contains data.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.ExtendToFirstCell">
            <summary>
            Extends the selection to include the first cell.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.ExtendToLastCell">
            <summary>
            Extends the selection to include the last cell.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.ExtendToLastCellWithData">
            <summary>
            Extends the selection to include the last cell that contains data.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.ScrollToNextRow">
            <summary>
            Scrolls down one row.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.ScrollToPreviousRow">
            <summary>
            Scrolls up one row.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.ScrollToNextColumn">
            <summary>
            Scrolls right one column.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.ScrollToPreviousColumn">
            <summary>
            Scrolls left one column.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.ScrollToNextPageOfRows">
            <summary>
            Scrolls down one page of rows.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.ScrollToPreviousPageOfRows">
            <summary>
            Scrolls up one page of rows.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.ScrollToNextPageOfColumns">
            <summary>
            Scrolls right one page of columns.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.ScrollToPreviousPageOfColumns">
            <summary>
            Scrolls left one page of columns.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.ScrollToFirstRow">
            <summary>
            Scrolls to display the first row.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.ScrollToLastRow">
            <summary>
            Scrolls to display the last row.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.ScrollToLastRowWithData">
            <summary>
            Scrolls to display the last row with data.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.ScrollToFirstColumn">
            <summary>
            Scrolls to display the first column.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.ScrollToLastColumn">
            <summary>
            Scrolls to display the last column.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.ScrollToLastColumnWithData">
            <summary>
            Scrolls to display the last column with data.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.ScrollToFirstCell">
            <summary>
            Scrolls to display the first cell.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.ScrollToLastCell">
            <summary>
            Scrolls to display the last cell.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.ScrollToLastCellWithData">
            <summary>
            Scrolls to display the last cell with data.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.MoveToPreviousItem">
            <summary>
            Moves up one item.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.MoveToNextItem">
            <summary>
            Moves down one item.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.MoveToNextPageOfItems">
            <summary>
            Moves down one page of items.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.MoveToPreviousPageOfItems">
            <summary>
            Moves up one page of items.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.MoveToFirstItem">
            <summary>
            Moves to the first item.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.MoveToLastItem">
            <summary>
            Moves to the last item.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.MoveToLastItemWithData">
            <summary>
            Moves to the last item with data.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.ExtendToPreviousItem">
            <summary>
            Extends the selection to include the previous item.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.ExtendToNextItem">
            <summary>
            Extends the selection to include the next item.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.ExtendToNextPageOfItems">
            <summary>
            Extends the selection to include the next page of items.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.ExtendToPreviousPageOfItems">
            <summary>
            Extends the selection to include the previous page of items.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.ExtendToFirstItem">
            <summary>
            Extends the selection to include the first item.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.ExtendToLastItem">
            <summary>
            Extends the selection to include the last item.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.ExtendToLastItemWithData">
            <summary>
            Extends the selection to include the last item with data.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.SelectPreviousItem">
            <summary>
            Selects the previous item.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.SelectNextItem">
            <summary>
            Selects the next item.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.SelectNextPageOfItems">
            <summary>
            Selects the next page of items.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.SelectPreviousPageOfItems">
            <summary>
            Selects the previous page of items.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.SelectFirstItem">
            <summary>
            Selects the first item.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.SelectLastItem">
            <summary>
            Selects the last item.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.SelectLastItemWithData">
            <summary>
            Selects the last item with data.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.ToggleItem">
            <summary>
            Toggles the selection for the item.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.SelectRow">
            <summary>
            Selects the row containing the active cell.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.SelectColumn">
            <summary>
            Selects the column containing the active cell.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.SelectSheet">
            <summary>
            Selects the entire sheet.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.ClipboardCopy">
            <summary>
            Copies the selected items to the Clipboard.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.ClipboardCutDataOnly">
            <summary>
            Cuts the data only of selected items to the Clipboard.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.ClipboardCut">
            <summary>
            Cuts the selected items to the Clipboard.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.ClipboardPaste">
            <summary>
            Pastes the data from the Clipboard to the current sheet based on the setting of ClipboardPasteOptions.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.ClipboardPasteAll">
            <summary>
            Pastes everything from the Clipboard (data and formatting) to the current sheet.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.ClipboardPasteValues">
            <summary>
            Pastes only the values from the Clipboard to the current sheet.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.ClipboardPasteFormatting">
            <summary>
            Pastes only the formatting from the Clipboard to the current sheet.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.ClipboardPasteFormulas">
            <summary>
            Pastes only the formulas from the Clipboard to the current sheet.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.ClipboardPasteAsLink">
            <summary>
            Pastes only the link references from the Clipboard to the current sheet.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.ClipboardPasteAsString">
            <summary>
            Pastes only the text from the Clipboard to the current cell.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.ShowSubEditor">
            <summary>
            Shows the cell's subeditor control.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.ClearCell">
            <summary>
            Clears the active cell's contents.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.DateTimeNow">
            <summary>
            Sets the cell's value to the date-time value of Now.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.ComboShowList">
            <summary>
            Displays the combo box cell's list.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.MoveShapeUp">
            <summary>
            Moves the active shape up.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.MoveShapeDown">
            <summary>
            Moves the active shape down.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.MoveShapeLeft">
            <summary>
            Moves the active shape left.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.MoveShapeRight">
            <summary>
            Moves the active shape right.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.ActivateNextShape">
            <summary>
            Activates the next shape in the draw order.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.ActivatePreviousShape">
            <summary>
            Activates the previous shape in the draw order.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.IncreaseShapeWidth">
            <summary>
            Increases the width of the active shape.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.DecreaseShapeWidth">
            <summary>
            Decreases the width of the active shape.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.IncreaseShapeHeight">
            <summary>
            Increases the height of the active shape.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.DecreaseShapeHeight">
            <summary>
            Decreases the height of the active shape.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.RotateShapeClockwise">
            <summary>
            Rotates the active shape one degree clockwise.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.RotateShapeCounterClockwise">
            <summary>
            Rotates the active shape one degree counter-clockwise.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.DeleteShape">
            <summary>
            Deletes the active shape.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.ClipboardCopyShape">
            <summary>
            Copies the active shape to the Clipboard.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.ClipboardCutShape">
            <summary>
            Cuts the active shape to the Clipboard.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.ClipboardPasteShape">
            <summary>
            Pastes the shape from the Clipboard.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.ClearSelectedCells">
            <summary>
            Clears the selected cells' contents.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadActions.DeactivateShape">
            <summary>
            Deactivates the currently selected shape.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.SpreadView">
            <summary>
            Represents a view of the spreadsheet display.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadView.ExpandImage">
            <summary>
            Specifies the index, 0, for the image for the expand icon in a hiearchical display.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadView.ExpandImageDisabled">
            <summary>
            Specifies the index, 1, for the image for the disabled expand icon in a hiearchical display.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadView.CollapseImage">
            <summary>
            Specifies the index, 2, for the image for the collapse icon in a hiearchical display.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadView.CollapseImageDisabled">
            <summary>
            Specifies the index, 3, for the image for the disabled collapse icon in a hiearchical display.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadView.SortAscendingImage">
            <summary>
            Specifies the index, 4, for the image for the ascending sort indicator.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadView.SortAscendingImageDisabled">
            <summary>
            Specifies the index, 5, for the image for the disabled ascending sort indicator.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadView.SortDescendingImage">
            <summary>
            Specifies the index, 6, for the image for the descending sort indicator.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadView.SortDescendingImageDisabled">
            <summary>
            Specifies the index, 7, for the image for the disabled descending sort indicator.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadView.FilterInactive">
            <summary>
            Specifies the index, 8, for the image for the inactive filter indicator.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadView.FilterInactiveDisabled">
            <summary>
            Specifies the index, 9, for the image for the disabled inactive filter indicator.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadView.FilterActive">
            <summary>
            Specifies the index, 10, for the image for the active filter indicator.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadView.FilterActiveDisabled">
            <summary>
            Specifies the index, 11, for the image for the disabled active filter indicator.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadView.SortUnsortedImage">
            <summary>
            Specifies the index, 12, for the image for the unsorted sort indicator.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SpreadView.SortUnsortedImageDisabled">
            <summary>
            Specifies the index, 13, for the image for the disabled unsorted sort indicator.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.#ctor">
            <summary>
            Creates a new view for the spreadsheet display.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.#ctor(FarPoint.Win.Spread.FpSpread)">
            <summary>
            Creates a new view for the spreadsheet display in the specified control.
            </summary>
            <param name="owner">FpSpread control that owns the view</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a view of the spreadsheet display from serialization.
            </summary>
            <param name="info">SerializationInfo</param>
            <param name="context">StreamingContext</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Saves the view to the SerializationInfo object.
            </summary>
            <param name="info">SerializationInfo object</param>
            <param name="context">StreamingContext object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.CreateSharedInputMapWhenFocusedNormal">
            <summary>
            Creates an input map to be shared by all views.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.CreateSharedInputMapWhenAncestorOfFocusedNormal">
            <summary>
            Creates an input map to be shared by all views.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.CreateSharedInputMapWhenFocusedReadOnly">
            <summary>
            Creates an input map to be shared by all views.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.CreateSharedInputMapWhenAncestorOfFocusedReadOnly">
            <summary>
            Creates an input map to be shared by all views.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.CreateSharedInputMapWhenFocusedRowMode">
            <summary>
            Creates an input map to be shared by all views.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.CreateSharedInputMapWhenAncestorOfFocusedRowMode">
            <summary>
            Creates an input map to be shared by all views.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.CreateSharedInputMapWhenFocusedSingleSelect">
            <summary>
            Creates an input map to be shared by all views.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.CreateSharedInputMapWhenAncestorOfFocusedSingleSelect">
            <summary>
            Creates an input map to be shared by all views.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.CreateSharedInputMapWhenFocusedMultiSelect">
            <summary>
            Creates an input map to be shared by all views.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.CreateSharedInputMapWhenAncestorOfFocusedMultiSelect">
            <summary>
            Creates an input map to be shared by all views.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.CreateSharedInputMapWhenFocusedExtendedSelect">
            <summary>
            Creates an input map to be shared by all views.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.CreateSharedInputMapWhenAncestorOfFocusedExtendedSelect">
            <summary>
            Creates an input map to be shared by all views.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.CreateSharedInputMapWhenShapeHasFocus">
            <summary>
            Creates an input map to be shared by all views.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.CreateSharedActionMap">
            <summary>
            Creates an action map to be shared by all views.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.CreateInputMapWhenFocusedNormal">
            <summary>
            Creates an input map to be used by this view.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.CreateInputMapWhenAncestorOfFocusedNormal">
            <summary>
            Creates an input map to be used by this view.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.CreateInputMapWhenFocusedReadOnly">
            <summary>
            Creates an input map to be used by this view.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.CreateInputMapWhenAncestorOfFocusedReadOnly">
            <summary>
            Creates an input map to be used by this view.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.CreateInputMapWhenFocusedRowMode">
            <summary>
            Creates an input map to be used by this view.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.CreateInputMapWhenAncestorOfFocusedRowMode">
            <summary>
            Creates an input map to be used by this view.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.CreateInputMapWhenFocusedSingleSelect">
            <summary>
            Creates an input map to be used by this view.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.CreateInputMapWhenAncestorOfFocusedSingleSelect">
            <summary>
            Creates an input map to be used by this view.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.CreateInputMapWhenFocusedMultiSelect">
            <summary>
            Creates an input map to be used by this view.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.CreateInputMapWhenAncestorOfFocusedMultiSelect">
            <summary>
            Creates an input map to be used by this view.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.CreateInputMapWhenFocusedExtendedSelect">
            <summary>
            Creates an input map to be used by this view.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.CreateInputMapWhenAncestorOfFocusedExtendedSelect">
            <summary>
            Creates an input map to be used by this view.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.CreateInputMapWhenShapeHasFocus">
            <summary>
            Creates an input map to be used by this view.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.CreateActionMap">
            <summary>
            Creates an action map to be used by this view.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.Reset">
            <summary>
            Resets the active view to its default settings.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the location and size of the view.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.GetSheetView">
            <summary>
            Gets the active sheet view.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.GetInputMap(FarPoint.Win.Spread.InputMapMode)">
            <summary>
            Gets the input map defined for the specified focus mode for the view.
            </summary>
            <param name="inputMapMode">Focus mode (control or child of the control)</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.SetInputMap(FarPoint.Win.Spread.InputMapMode,FarPoint.Win.Spread.InputMap)">
            <summary>
            Sets the input map for the view for the specified focus mode.
            </summary>
            <param name="inputMapMode">Focus mode (control or child of the control)</param>
            <param name="value"><see cref="T:FarPoint.Win.Spread.InputMap"/> object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.GetInputMap(FarPoint.Win.Spread.InputMapMode,FarPoint.Win.Spread.OperationMode)">
            <summary>
            Gets the input map defined for the specified focus mode and operation mode for the view.
            </summary>
            <param name="inputMapMode">Focus mode (control or child of the control)</param>
            <param name="operationMode">Operation mode</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.SetInputMap(FarPoint.Win.Spread.InputMapMode,FarPoint.Win.Spread.OperationMode,FarPoint.Win.Spread.InputMap)">
            <summary>
            Sets the input map for the view for the specified focus mode and operation mode.
            </summary>
            <param name="inputMapMode">Focus mode (control or child of the control)</param>
            <param name="operationMode">Operation mode</param>
            <param name="value"><see cref="T:FarPoint.Win.Spread.InputMap"/> object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.GetInputMapWhenShapeHasFocus">
            <summary>
            Gets the input map for the view for when a shape has focus.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.SetInputMapWhenShapeHasFocus(FarPoint.Win.Spread.InputMap)">
            <summary>
            Sets the input map for the view for when a shape has focus.
            </summary>
            <param name="value"><see cref="T:FarPoint.Win.Spread.InputMap"/> object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.GetActionMap">
            <summary>
            Gets the action map.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.SetActionMap(FarPoint.Win.Spread.ActionMap)">
            <summary>
            Sets the action map.
            </summary>
            <param name="value">New action map</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.GetCursor(FarPoint.Win.Spread.CursorType)">
            <summary>
            Gets the pointer displayed over a specific area in the view.
            </summary>
            <param name="index">Index of the pointer type (for which part of the control)</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.SetCursor(FarPoint.Win.Spread.CursorType,System.Windows.Forms.Cursor)">
            <summary>
            Sets the pointer displayed over a specific area at a specific time.
            </summary>
            <param name="index">Index of the pointer type (for which part of the control)</param>
            <param name="cursor">Image (Cursor object) to paint the pointer</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.StartTipTimer">
            <summary>
            Starts the tip timer.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.InstallListeners">
            <summary>
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.UninstallListeners">
            <summary>
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.columnHeaderStyleModel_Changed(System.Object,FarPoint.Win.Spread.Model.SheetStyleModelEventArgs)">
            <summary>
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.Invalidate">
            <summary>
            Invalidates the SpreadView and causes it to repaint.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.InvalidateColumnHeaderCells(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.InvalidateCells(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.InvalidateCells(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.CreateColumnHeaderRowLayoutModel">
            <summary>
            Creates a row layout model.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.CreateViewportRowLayoutModel(System.Int32)">
            <summary>
            Creates a row layout model.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.CreateRowHeaderColumnLayoutModel">
            <summary>
            Creates a column layout model.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.CreateViewportColumnLayoutModel(System.Int32)">
            <summary>
            Creates a column layout model.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.CreateRowHeaderCellLayoutModel(System.Int32)">
            <summary>
            Creates a cell layout model.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.CreateColumnHeaderCellLayoutModel(System.Int32)">
            <summary>
            Creates a cell layout model.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.CreateViewportCellLayoutModel(System.Int32,System.Int32)">
            <summary>
            Creates a cell layout model.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.GetMaximumCellOverflowWidth">
            <summary>
            Gets the maximum cell overflow width in pixels for cells in the view. 
            </summary>
            Default value is 1200px.
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.SetMaximumCellOverflowWidth(System.Int32)">
            <summary>
            Sets the maximum cell overflow width in pixels for cells in the view.
            </summary>
            <param name="width">Width of cell overflow in pixels</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.GetRowMerge(System.Int32)">
            <summary>
            Gets whether or how cells in a row that have the same content are grouped 
            in a single cell spanning multiple columns.
            </summary>
            <param name="row">Row index</param>
            <returns>MergePolicy enumeration setting for the specified row</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.SetRowMerge(System.Int32,FarPoint.Win.Spread.Model.MergePolicy)">
            <summary>
            Sets whether or how cells in a row that have the same content are grouped 
            in a single cell spanning multiple columns.
            </summary>
            <param name="row">Row index</param>
            <param name="value">MergePolicy enumeration setting</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.GetColumnMerge(System.Int32)">
            <summary>
            Gets whether or how cells in a column that have the same content are grouped 
            in a single cell spanning multiple rows.
            </summary>
            <param name="column">Column index</param>
            <returns>MergePolicy enumeration setting for the specified column</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.SetColumnMerge(System.Int32,FarPoint.Win.Spread.Model.MergePolicy)">
            <summary>
            Sets whether or how cells in a column that have the same content are grouped 
            in a single cell spanning multiple rows.
            </summary>
            <param name="column">Column index</param>
            <param name="value">MergePolicy enumeration setting</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.GetColumnHeaderRowLayout(System.Int32)">
            <summary>
            Gets the row layout for the specified row.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.GetColumnHeaderRowLayoutFromY(System.Int32)">
            <summary>
            Gets the row layout that contains the specified point.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.GetColumnHeaderRowLayoutNearY(System.Int32)">
            <summary>
            Gets the row layout that contains or is near the specified point.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.GetViewportRowLayout(System.Int32,System.Int32)">
            <summary>
            Gets the row layout for the specified row.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.GetViewportRowLayoutFromY(System.Int32,System.Int32)">
            <summary>
            Gets the row layout that contains the specified point.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.GetViewportRowLayoutNearY(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Gets the row layout that contains or is near the specified point.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.GetRowHeaderColumnLayout(System.Int32)">
            <summary>
            Gets the column layout for the specified column.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.GetRowHeaderColumnLayoutFromX(System.Int32)">
            <summary>
            Gets the column layout that contains the specified point.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.GetRowHeaderColumnLayoutNearX(System.Int32)">
            <summary>
            Gets the column layout that contains or is near the specified point.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.GetViewportColumnLayout(System.Int32,System.Int32)">
            <summary>
            Gets the column layout for the specified column.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.GetViewportColumnLayoutFromX(System.Int32,System.Int32)">
            <summary>
            Gets the column layout that contains the specified point.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.GetViewportColumnLayoutNearX(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Gets the column layout that contains or is near the specified point.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.GetRowHeaderCellLayout(System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the cell layout for the specified cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.GetRowHeaderCellLayoutFromPoint(System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the cell layout that contains the specified point.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.GetColumnHeaderCellLayout(System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the cell layout for the specified cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.GetColumnHeaderCellLayoutFromPoint(System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the cell layout that contains the specified point.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.GetViewportCellLayout(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the cell layout for the specified cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.GetViewportCellLayoutFromPoint(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the cell layout that contains the specified point.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.GetRowViewportIndexFromY(System.Int32)">
            <summary>
            Gets the index of the viewport row for the specified coordinate for the active sheet.
            </summary>
            <param name="y">Y coordinate</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.GetColumnViewportIndexFromX(System.Int32)">
            <summary>
            Gets the index of the viewport column for the specified coordinate for the active sheet.
            </summary>
            <param name="x">X coordinate</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.GetViewportX(System.Int32)">
            <summary>
            Gets the left coordinate of the specified viewport column for the active sheet.
            </summary>
            <param name="columnViewportIndex">Index of the viewport column</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.GetViewportY(System.Int32)">
            <summary>
            Gets the top coordinate of the specified viewport row for the active sheet.
            </summary>
            <param name="rowViewportIndex">Index of the viewport row</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.GetViewportWidth(System.Int32)">
            <summary>
            Gets the width of the specified viewport column for the active sheet.
            </summary>
            <param name="columnViewportIndex">Index of the viewport column</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.GetViewportWidth(System.Int32,System.Int32)">
            <summary>
            Gets the width of the specified viewport column of the specified sheet.
            </summary>
            <param name="sheetIndex">Index of the sheet</param>
            <param name="columnViewportIndex">Index of the viewport column</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified sheet index is not valid; must be between zero and the number of sheets
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.GetViewportHeight(System.Int32)">
            <summary>
            Gets the height of the specified viewport row for the active sheet.
            </summary>
            <param name="rowViewportIndex">Index of the viewport row</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.GetViewportHeight(System.Int32,System.Int32)">
            <summary>
            Gets the height of the specified viewport row of the specified sheet.
            </summary>
            <param name="sheetIndex">Index of the sheet</param>
            <param name="rowViewportIndex">Index of the viewport row</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified sheet index is not valid; must be between zero and the number of sheets
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.GetRowViewportCount">
            <summary>
             Gets the number of viewport rows in the active sheet.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.GetRowViewportCount(System.Int32)">
            <summary>
             Gets the number of viewport rows in the specified sheet.
            </summary>
            <param name="sheetIndex">Sheet index</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified sheet index is not valid; must be between 0 and total number of sheets
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.GetColumnViewportCount">
            <summary>
            Gets the number of viewport columns in the active sheet.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.GetColumnViewportCount(System.Int32)">
            <summary>
            Gets the number of viewport columns in the specified sheet.
            </summary>
            <param name="sheetIndex">Sheet index</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified sheet index is not valid; must be between 0 and total number of sheets
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.GetActiveRowViewportIndex">
            <summary>
            Gets the index of the active viewport row.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.GetActiveRowViewportIndex(System.Int32)">
            <summary>
            Gets the index of the active viewport row for the specified sheet.
            </summary>
            <param name="sheetIndex">Sheet index</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified sheet index is not valid; must be between 0 and total number of sheets
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.GetActiveColumnViewportIndex">
            <summary>
            Gets the index of the active viewport column.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.GetActiveColumnViewportIndex(System.Int32)">
            <summary>
            Gets the index of the active viewport column for the specified sheet.
            </summary>
            <param name="sheetIndex">Sheet index</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified sheet index is not valid; must be between 0 and total number of sheets
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.SetActiveViewport(System.Int32,System.Int32)">
            <summary>
            Sets the active viewport.
            </summary>
            <param name="rowViewportIndex">Viewport row index</param>
            <param name="columnViewportIndex">Viewport column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.SetActiveViewport(System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the active viewport for the specified sheet.
            </summary>
            <param name="sheetIndex">Sheet index</param>
            <param name="rowViewportIndex">Viewport row index</param>
            <param name="columnViewportIndex">Viewport column index</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified sheet index is not valid; must be between 0 and total number of sheets
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.GetViewportPreferredWidth(System.Int32)">
            <summary>
            Gets the maximum width for the viewport column.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.GetViewportPreferredWidth(System.Int32,System.Int32)">
            <summary>
            Gets the maximum width for the viewport column for the specified sheet.
            </summary>
            <param name="sheetIndex">Sheet index</param>
            <param name="columnViewportIndex">Viewport column index</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified sheet index is not valid; must be between 0 and total number of sheets
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.SetViewportPreferredWidth(System.Int32,System.Int32)">
            <summary>
            Sets the maximum width for the viewport column.
            </summary>
            <param name="columnViewportIndex">Viewport column index</param>
            <param name="value">Width in pixels</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.SetViewportPreferredWidth(System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the maximum width for the viewport column for the specified sheet.
            </summary>
            <param name="sheetIndex">Sheet index</param>
            <param name="columnViewportIndex">Viewport column index</param>
            <param name="value">Width in pixels</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified sheet index is not valid; must be between 0 and total number of sheets
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.GetViewportPreferredHeight(System.Int32)">
            <summary>
            Gets the maximum height for the viewport row.
            </summary>
            <param name="rowViewportIndex">Viewport row index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.GetViewportPreferredHeight(System.Int32,System.Int32)">
            <summary>
            Gets the maximum height for the viewport row for the specifed sheet.
            </summary>
            <param name="sheetIndex">Sheet index</param>
            <param name="rowViewportIndex">Viewport row index</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified sheet index is not valid; must be between 0 and total number of sheets
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.SetViewportPreferredHeight(System.Int32,System.Int32)">
            <summary>
            Sets the maximum height for the viewport row.
            </summary>
            <param name="rowViewportIndex">Viewport row index</param>
            <param name="value">Height in pixels</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.SetViewportPreferredHeight(System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the maximum height for the viewport row for the specified sheet.
            </summary>
            <param name="sheetIndex">Sheet index</param>
            <param name="rowViewportIndex">Viewport row index</param>
            <param name="value">Height in pixels</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified sheet index is not valid; must be between 0 and total number of sheets
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified viewport row index is not valid; must be between 0 and total number of viewport rows
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.GetViewportLeftColumn(System.Int32)">
            <summary>
            Gets the index of the leftmost column of the specified viewport column.
            </summary>
            <param name="columnViewportIndex">Viewport column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.GetViewportLeftColumn(System.Int32,System.Int32)">
            <summary>
            Gets the index of the leftmost column of the specified viewport column.
            </summary>
            <param name="sheetIndex">Sheet index</param>
            <param name="columnViewportIndex">Viewport column index</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified sheet index is not valid; must be between 0 and total number of sheets
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.GetViewportRightColumn(System.Int32)">
            <summary>
            Gets the index of the rightmost column of the specified viewport column.
            </summary>
            <param name="columnViewportIndex">Viewport column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.GetViewportRightColumn(System.Int32,System.Int32)">
            <summary>
            Gets the index of the rightmost column of the specified viewport column.
            </summary>
            <param name="sheetIndex">Sheet index</param>
            <param name="columnViewportIndex">Viewport column index</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified sheet index is not valid; must be between 0 and total number of sheets
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.SetViewportLeftColumn(System.Int32,System.Int32)">
            <summary>
            Sets the index of the leftmost column of the specified viewport column.
            </summary>
            <param name="columnViewportIndex">Viewport column index</param>
            <param name="value">Index of the column to set as the leftmost of that viewport</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.SetViewportLeftColumn(System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the index of the leftmost column of the specified viewport column for the specified sheet.
            </summary>
            <param name="sheetIndex">Sheet index</param>
            <param name="columnViewportIndex">Viewport column index</param>
            <param name="value">Index of the column to set as the leftmost of that viewport</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified sheet index is not valid; must be between zero and the number of sheets
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified viewport column index is not valid; must be between zero and the number of viewport columns
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified value is not valid; must be between zero and the number of columns in the sheet
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.GetViewportTopRow(System.Int32)">
            <summary>
            Gets the index of the top row of the specified viewport row.
            </summary>
            <param name="rowViewportIndex">Viewport row index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.GetViewportTopRow(System.Int32,System.Int32)">
            <summary>
            Gets the index of the top row of the specified viewport row for the specified sheet.
            </summary>
            <param name="sheetIndex">Sheet index</param>
            <param name="rowViewportIndex">Viewport row index</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified sheet index is not valid; must be between zero and the number of sheets
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.GetViewportBottomRow(System.Int32)">
            <summary>
            Gets the index of the bottom row of the specified viewport row.
            </summary>
            <param name="rowViewportIndex">Viewport row index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.GetViewportBottomRow(System.Int32,System.Int32)">
            <summary>
            Gets the index of the bottom row of the specified viewport row.
            </summary>
            <param name="sheetIndex">Sheet index</param>
            <param name="rowViewportIndex">Viewport row index</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified sheet index is not valid; must be between zero and the number of sheets
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.SetViewportTopRow(System.Int32,System.Int32)">
            <summary>
            Sets the index of the top row of the specified viewport row.
            </summary>
            <param name="rowViewportIndex">Viewport row index</param>
            <param name="value">Index of the row to set as the top of that viewport</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.SetViewportTopRow(System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the index of the topmost row of the specified viewport for the specified sheet.
            </summary>
            <param name="sheetIndex">Sheet index</param>
            <param name="rowViewportIndex">Viewport row index</param>
            <param name="value">Index of the column to set as the leftmost of that viewport</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified sheet index is not valid; must be between zero and the number of sheets
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified viewport row index is not valid; must be between zero and the number of viewport rows
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified value is not valid; must be between zero and the number of rows in the sheet
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.AddViewport(System.Int32,System.Int32)">
            <summary>
            Adds a row or column of viewports.
            </summary>
            <param name="rowViewportIndex">Viewport row index</param>
            <param name="columnViewportIndex">Viewport column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.AddViewport(System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds a row or column of viewports.
            </summary>
            <param name="sheetIndex">Index of sheet to which to add viewports</param>
            <param name="rowViewportIndex">Viewport row index</param>
            <param name="columnViewportIndex">Viewport column index</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified sheet index is not valid; must be between zero and the number of sheets
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.RemoveAllViewports">
            <summary>
            Removes all viewport rows and viewport columns.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.RemoveAllViewports(System.Int32)">
            <summary>
            Removes all viewport rows and viewport columns of the specified sheet.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.RemoveViewport(System.Int32,System.Int32)">
            <summary>
            Removes a row or column of viewports.
            </summary>
            <param name="rowViewportIndex">Viewport row index</param>
            <param name="columnViewportIndex">Viewport column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.RemoveViewport(System.Int32,System.Int32,System.Int32)">
            <summary>
            Removes a row or column of viewports.
            </summary>
            <param name="sheetIndex">Sheet index</param>
            <param name="rowViewportIndex">Viewport row index</param>
            <param name="columnViewportIndex">Viewport column index</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified sheet index is not valid; must be between zero and the number of sheets
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.PaintSplitBar(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Paints a split bar.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.PaintSplitBarCrossover(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Paints the area where two split bars cross over each other.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.PaintSplitBox(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Paints a split box.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.PaintGridLines(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.GridLine,FarPoint.Win.Spread.GridLine,System.Drawing.Color)">
            <summary>
            Paints grid lines around a cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.PaintGrayArea(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Paints the empty area beyond the last row or column.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.CreatePrintViewportRowLayoutModel(System.Drawing.Graphics,FarPoint.Win.Spread.SheetView,System.Int32)">
            <summary>
            Creates a row layout model.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.CreatePrintRowHeaderColumnLayoutModel(FarPoint.Win.Spread.SheetView)">
            <summary>
            Creates a column layout model.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.CreatePrintViewportColumnLayoutModel(System.Drawing.Graphics,FarPoint.Win.Spread.SheetView,System.Int32)">
            <summary>
            Creates a column layout model.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.CreatePrintRowHeaderCellLayoutModel(System.Drawing.Graphics,FarPoint.Win.Spread.SheetView,System.Int32)">
            <summary>
            Creates a cell layout model.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.CreatePrintColumnHeaderCellLayoutModel(System.Drawing.Graphics,FarPoint.Win.Spread.SheetView,System.Int32)">
            <summary>
            Creates a cell layout model.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.CreatePrintViewportCellLayoutModel(System.Drawing.Graphics,FarPoint.Win.Spread.SheetView,System.Int32,System.Int32)">
            <summary>
            Creates a cell layout model.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.IsListSelection">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.GetSpreadView(FarPoint.Win.Spread.SheetView,System.Int32,System.Int32)">
            <summary>
            Gets the view at the specified sheet and viewport. 
            </summary>
            <param name="sheetView">Sheet (SheetView object)</param>
            <param name="rowViewportIndex">Viewport row index</param>
            <param name="columnViewportIndex">Viewport column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.DoPaint(System.Drawing.Graphics)">
            <summary>
            Raises the Paint event.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.GetSheetTabRectangle(System.Int32)">
            <summary>
            Gets the rectangle of the tab associated with a sheet for the view.
            </summary>
            <param name="sheetIndex">Sheet index for which to retrieve a tab rectangle</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.StartCellEditing(System.EventArgs,System.Boolean)">
            <summary>
            Starts cell editing in the view.
            </summary>
            <param name="e">Event</param>
            <param name="formula">Whether there is a formula</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.cellEditor_EditingStopped(System.Object,System.EventArgs)">
            <summary>
            Stops or cancels cell editing.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.cellEditor_EditingCanceled(System.Object,System.EventArgs)">
            <summary>
            Stops or cancels cell editing.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.StopCellEditing">
            <summary>
            Stops cell editing in the view.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.CancelCellEditing">
            <summary>
            Cancels cell editing in the view.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ShowActiveCell(FarPoint.Win.Spread.VerticalPosition,FarPoint.Win.Spread.HorizontalPosition)">
            <summary>
            Moves the currently selected cell in the specified viewport to the specified position.
            </summary>
            <param name="verticalPosition">New vertical position of cell</param>
            <param name="horizontalPosition">New horizontal position of cell</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ShowCell(System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.VerticalPosition,FarPoint.Win.Spread.HorizontalPosition)">
            <summary>
            Moves the specified cell in the specified viewport to the specified position.
            </summary>
            <param name="rowViewportIndex">Viewport row index</param>
            <param name="columnViewportIndex">Viewport column index</param>
            <param name="row">Row index in that viewport</param>
            <param name="column">Column index in that viewport</param>
            <param name="verticalPosition">New vertical position of cell</param>
            <param name="horizontalPosition">New horizontal position of cell</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ShowRow(System.Int32,System.Int32,FarPoint.Win.Spread.VerticalPosition)">
            <summary>
            Moves a row in the specified viewport to the specified position.
            </summary>  
            <param name="rowViewportIndex">Viewport row index</param>
            <param name="row">Row index in that viewport</param>
            <param name="verticalPosition">New vertical position of row</param>  
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ShowColumn(System.Int32,System.Int32,FarPoint.Win.Spread.HorizontalPosition)">
            <summary>
            Moves a column in the specified viewport to the specified position.
            </summary>
            <param name="columnViewportIndex">Viewport column index</param>
            <param name="column">Column index in that viewport</param>
            <param name="horizontalPosition">New horizontal position of column</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.MoveToPreviousRow">
            <summary>
            Moves the active cell to the previous row.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.MoveToNextRow">
            <summary>
            Moves the active cell to the next row.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.MoveToPreviousColumn">
            <summary>
            Moves the active cell to the previous column.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.MoveToNextColumn">
            <summary>
            Moves the active cell to the next column.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.MoveToPreviousRowWrap">
            <summary>
            Moves the active cell to the previous row.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.MoveToNextRowWrap">
            <summary>
            Moves the active cell to the next row.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.MoveToPreviousColumnWrap">
            <summary>
            Moves the active cell to the previous cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.MoveToNextColumnWrap">
            <summary>
            Moves the active cell to the next cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.MoveToPreviousRowFirstColumn">
            <summary>
            Moves the active cell to the first column of the previous row.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.MoveToNextRowFirstColumn">
            <summary>
            Moves the active cell to the first column of the next row.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.MoveToPreviousColumnFirstRow">
            <summary>
            Moves the active cell to the first row of the previous column.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.MoveToNextColumnFirstRow">
            <summary>
            Moves the active cell to the first row of the next column.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.MoveToPreviousPageOfRows">
            <summary>
            Moves the active cell to the previous page of rows.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.MoveToNextPageOfRows">
            <summary>
            Moves the active cell to the next page of rows.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.MoveToPreviousPageOfColumns">
            <summary>
            Moves the active cell to the previous page of columns.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.MoveToNextPageOfColumns">
            <summary>
            Moves the active cell to the next page of columns.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.MoveToFirstRow">
            <summary>
            Moves the active cell to the first row.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.MoveToLastRow">
            <summary>
            Moves the active cell to the last row.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.MoveToLastRowWithData">
            <summary>
            Moves the active cell to the last row with data.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.MoveToFirstColumn">
            <summary>
            Moves the active cell to the first column.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.MoveToLastColumn">
            <summary>
            Moves the active cell to the last column.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.MoveToLastColumnWithData">
            <summary>
            Moves the active cell to the last column with data.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.MoveToFirstCell">
            <summary>
            Moves the active cell to the first cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.MoveToLastCell">
            <summary>
            Moves the active cell to the last cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.MoveToLastCellWithData">
            <summary>
            Moves the active cell to the last cell with data.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.CanNavigateToSheet(System.Int32)">
            <summary>
            Determines if user can navigate to the specified sheet.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.MoveToPreviousSheet">
            <summary>
            Moves the active cell to the previous sheet.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.MoveToNextSheet">
            <summary>
            Moves the active cell to the next sheet.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ExtendToPreviousRow">
            <summary>
            Extends the selection to the previous row.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ExtendToNextRow">
            <summary>
            Extends the selection to the next row.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ExtendToPreviousColumn">
            <summary>
            Extends the selection to the previous column.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ExtendToNextColumn">
            <summary>
            Extends the selection to the next column.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ExtendToPreviousPageOfRows">
            <summary>
            Extends the selection to the previous page of rows.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ExtendToNextPageOfRows">
            <summary>
            Extends the selection to the next page of rows.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ExtendToPreviousPageOfColumns">
            <summary>
            Extends the selection to the previous page of columns.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ExtendToNextPageOfColumns">
            <summary>
            Extends the selection to the next page of columns.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ExtendToFirstRow">
            <summary>
            Extends the selection to the first row.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ExtendToLastRow">
            <summary>
            Extends the selection to the last row.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ExtendToLastRowWithData">
            <summary>
            Extends the selection to the last row with data.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ExtendToFirstColumn">
            <summary>
            Extends the selection to the first column.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ExtendToLastColumn">
            <summary>
            Extends the selection to the last column.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ExtendToLastColumnWithData">
            <summary>
            Extends the selection to the last column with data.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ExtendToFirstCell">
            <summary>
            Extends the selection to the first cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ExtendToLastCell">
            <summary>
            Extends the selection to the last cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ExtendToLastCellWithData">
            <summary>
            Extends the selection to the last cell with data.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ScrollTo(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Scrolls the viewport to the specified cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ScrollToPreviousRow">
            <summary>
            Scrolls the viewport to the previous row.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ScrollToNextRow">
            <summary>
            Scrolls the viewport to the next row.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ScrollToPreviousColumn">
            <summary>
            Scrolls the viewport to the previous column.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ScrollToNextColumn">
            <summary>
            Scrolls the viewport to the next column.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ScrollToPreviousPageOfRows">
            <summary>
            Scrolls the viewport to the previous page of rows.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ScrollToNextPageOfRows">
            <summary>
            Scrolls the viewport to the next page of rows.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ScrollToPreviousPageOfColumns">
            <summary>
            Scrolls the viewport to the previous page of columns.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ScrollToNextPageOfColumns">
            <summary>
            Scrolls the viewport to the next page of columns.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ScrollToFirstRow">
            <summary>
            Scrolls the viewport to the first row.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ScrollToLastRow">
            <summary>
            Scrolls the viewport to the last row.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ScrollToLastRowWithData">
            <summary>
            Scrolls the viewport to the last row with data.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ScrollToFirstColumn">
            <summary>
            Scrolls the viewport to the first column.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ScrollToLastColumn">
            <summary>
            Scrolls the viewport to the last column.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ScrollToLastColumnWithData">
            <summary>
            Scrolls the viewport to the last column with data.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ScrollToFirstCell">
            <summary>
            Scrolls the viewport to the first Cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ScrollToLastCell">
            <summary>
            Scrolls the viewport to the last Cell.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ScrollToLastCellWithData">
            <summary>
            Scrolls the viewport to the last cell with data.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ListNavigate(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.MoveToPreviousItem">
            <summary>
            Moves active item to the previous item and leaves selection unchanged.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.MoveToNextItem">
            <summary>
            Moves active item to the next item and leaves selection unchanged.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.MoveToPreviousPageOfItems">
            <summary>
            Moves active item to the previous page of items and leaves selection unchanged.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.MoveToNextPageOfItems">
            <summary>
            Moves active item to the next page of items and leaves selection unchanged.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.MoveToFirstItem">
            <summary>
            Moves active item to the first item and leaves selection unchanged.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.MoveToLastItem">
            <summary>
            Moves active item to the last item and leaves selection unchanged.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.MoveToLastItemWithData">
            <summary>
            Moves active item to the last item with data and leaves selection unchanged.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ExtendToPreviousItem">
            <summary>
            Extends the selection to the previous item.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ExtendToNextItem">
            <summary>
            Extends the selection to the next item.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ExtendToPreviousPageOfItems">
            <summary>
            Extends the selection to the previous page of items.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ExtendToNextPageOfItems">
            <summary>
            Extends the selection to the next page of items.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ExtendToFirstItem">
            <summary>
            Extends the selection to the first item.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ExtendToLastItem">
            <summary>
            Extends the selection to the last item.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ExtendToLastItemWithData">
            <summary>
            Extends the selection to the last item with data.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.SelectPreviousItem">
            <summary>
            Selects the previous item.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.SelectNextItem">
            <summary>
            Selects the next item.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.SelectPreviousPageOfItems">
            <summary>
            Selects the previous page of items.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.SelectNextPageOfItems">
            <summary>
            Selects the next page of items.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.SelectFirstItem">
            <summary>
            Selects the first item.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.SelectLastItem">
            <summary>
            Selects the last item.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.SelectLastItemWithData">
            <summary>
            Selects the last item with data.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ToggleItem">
            <summary>
            Toggles the current item.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.SelectRow">
            <summary>
            Selects the current row.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.SelectColumn">
            <summary>
            Select the current column.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.SelectSheet">
            <summary>
            Select the entire sheet.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ClearCell">
            <summary>
            Clears the cell contents;
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ClearSelectedCells">
            <summary>
            Clears the selected cells' contents;
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.DateTimeNow">
            <summary>
            Sets the value of this cell to the DateTime.Now value if it is a DateTimeCellType.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ComboShowList">
            <summary>
            Shows the combobox cell's list control.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ShowSubEditor">
            <summary>
            Shows the cells sub editor control
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.MoveShapeUp">
            <summary>
            Moves the active shape up.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.MoveShapeDown">
            <summary>
            Moves the active shape down.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.MoveShapeLeft">
            <summary>
            Moves the active shape left.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.MoveShapeRight">
            <summary>
            Moves the active shape right.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ActivateNextShape">
            <summary>
            Activates the next shape in the draw order.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ActivatePreviousShape">
            <summary>
            Activates the previous shape in the draw order.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.DeactivateShape">
            <summary>
            Deactivates the currently selected shape.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.IncreaseShapeWidth">
            <summary>
            Increases the width of the active shape.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.DecreaseShapeWidth">
            <summary>
            Decreases the width of the active shape.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.IncreaseShapeHeight">
            <summary>
            Increases the height of the active shape.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.DecreaseShapeHeight">
            <summary>
            Decreases the height of the active shape.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.RotateShapeClockwise">
            <summary>
            Rotates the active shape one degree clockwise.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.RotateShapeCounterClockwise">
            <summary>
            Rotates the active shape one degree counter-clockwise.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.DeleteShape">
            <summary>
            Deletes the active shape.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.IsMouseMode">
            <summary>
            Determines if a mouse operation (ex. selecting or resizing or dragging) is occuring.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ProcessKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Processes KeyDown events.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ProcessKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Processes KeyPress events.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ProcessKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Processes KeyUp events.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.IsInputChar(System.Char)">
            <summary>
            Gets whether the specified character is a defined input character.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.IsInputKey(System.Windows.Forms.Keys)">
            <summary>
            Gets whether the specified key is a defined input key.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ProcessDialogChar(System.Char)">
            <summary>
            Specifies whether to process input characters from dialogs.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ProcessDialogKey(System.Windows.Forms.Keys)">
            <summary>
            Specifies whether to process input keys from dialogs.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.StartRowResizing(System.Int32,System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.StartColumnResizing(System.Int32,System.Int32)">
            <summary>
            Starts resizing a column.
            </summary>
            <param name="columnPane">Viewport column index</param>
            <param name="column">Column index</param>
            <remarks>
            For columnPane:
            	-2 indicates header viewport,
            	-1 indicates frozen viewport,
            	>= 0 indicates scrollable viewport
            </remarks>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ContinueColumnResizing(System.Int32)">
            <summary>
            Continues resizing the column to the specified x-coordinate.
            </summary>
            <param name="x">X coordinate</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.StopColumnResizing">
            <summary>
            Stops resizing the column.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.AutoSizeColumn(System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.StartColumnSelecting(System.Int32,System.Int32)">
            <summary>
            Starts selecting columns.
            </summary>
            <param name="columnPane">Viewport column index</param>
            <param name="column">Column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ContinueColumnSelecting(System.Int32,System.Int32)">
            <summary>
            Continues selecting columns to the point at the specified coordinates.
            </summary>
            <param name="x">X coordinate</param>
            <param name="y">Y coordinate</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.StopColumnSelecting">
            <summary>
            Stops selecting the column.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.StartCellSelecting(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Starts selecting cells.
            </summary>
            <param name="rowPane">Viewport row index</param>
            <param name="columnPane">Viewport column index</param>
            <param name="row">Row index</param>
            <param name="column">Column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ContinueCellSelecting(System.Int32,System.Int32)">
            <summary>
            Continues selecting cells to the point of the specified coordinates.
            </summary>
            <param name="x">X coordinate</param>
            <param name="y">Y coordinate</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.StopCellSelecting">
            <summary>
            Stops selecting cells.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.StartDragDropping(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Starts dragging and dropping.
            </summary>
            <param name="rowPane">Viewport row index</param>
            <param name="columnPane">Viewport column index</param>
            <param name="row">Row index</param>
            <param name="column">Column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ContinueDragDropping(System.Int32,System.Int32)">
            <summary>
            Continues dragging and dropping to the point of the specified coordinates.
            </summary>
            <param name="x">X coordinate</param>
            <param name="y">Y coordinate</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.StopDragDropping">
            <summary>
            Stops dragging and dropping.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.StartDragFilling(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Starts dragging and filling.
            </summary>
            <param name="rowPane">Viewport row index</param>
            <param name="columnPane">Viewport column index</param>
            <param name="row">Row index</param>
            <param name="column">Column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ContinueDragFilling(System.Int32,System.Int32)">
            <summary>
            Continues dragging and filling to the point of the specified coordinates.
            </summary>
            <param name="x">X coordinate</param>
            <param name="y">Y coordinate</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.StopDragFilling">
            <summary>
            Stops dragging and filling.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.StartScrollTimer">
            <summary>
            Starts the scroll timer.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.StopScrollTimer">
            <summary>
            Stops the scroll timer.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ProcessMouseDownOverCorner(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Processes MouseDown events that occur when the pointer is over the sheet corner.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ProcessMouseDownOverRowHeader(System.Int32,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Processes MouseDown events that occur when the pointer is over the row header.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ToHorizontalAlignment(FarPoint.Win.Spread.CellHorizontalAlignment)">
            <summary>
            Converts a FarPoint.Win.Spread.CellHorizontalAlignment setting 
            to the corresponding FarPoint.Win.HorizontalAlignment setting.
            </summary>
            <param name="alignment">FarPoint.Win.Spread.CellHorizontalAlignment value</param>
            <returns>Corresponding FarPoint.Win.HorizontalAlignment value</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ToVerticalAlignment(FarPoint.Win.Spread.CellVerticalAlignment)">
            <summary>
            Converts a FarPoint.Win.Spread.CellVerticalAlignment setting 
            to the corresponding FarPoint.Win.VerticalAlignment setting.
            </summary>
            <param name="alignment">FarPoint.Win.Spread.CellVerticalAlignment value</param>
            <returns>Corresponding FarPoint.Win.VerticalAlignment value</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.GetRootWorkbook">
            <summary>
            Gets the top view (<see cref="T:FarPoint.Win.Spread.SpreadView"/> object).
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.GetChildWorkbooks">
            <summary>
            Gets all child views (<see cref="T:FarPoint.Win.Spread.SpreadView"/> objects) that have been created.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.GetActiveWorkbook">
            <summary>
            Gets the active view (<see cref="T:FarPoint.Win.Spread.SpreadView"/> object).
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.SetActiveWorkbook(FarPoint.Win.Spread.SpreadView)">
            <summary>
            Sets the active SpreadView to the specified object. If workbook passed in
            is null, sets this object to be the active SpreadView.
            </summary>
            <returns>True if succeed, otherwise, False.</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ProcessMouseDownOverColumnHeader(System.Int32,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Processes MouseDown events that occur when the pointer is over the column header.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.IsMouseInDragDropLocation(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.IsMouseInDragFillLocation(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.IsMouseInReservedLocation(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ProcessMouseDownOverViewport(System.Int32,System.Int32,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Processes MouseDown events that occur when the pointer is over a viewport.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ProcessDoubleClick(System.Drawing.Point)">
            <summary>
            Processes DoubleClick events.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ProcessDoubleClickOverTabStrip(System.Drawing.Point)">
            <summary>
            Processes DoubleClick events that occur when the pointer is over the sheet name tabs.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ProcessMouseDownOverTabStrip(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Processes MouseDown events that occur when the pointer is over the sheet name tabs.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ProcessMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Processes MouseDown events.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ProcessMouseMoveOverCorner(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Processes MouseMove events that occur when the pointer is over the sheet corner.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ProcessMouseMoveOverRowHeader(System.Int32,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Processes MouseMove events that occur when the pointer is over the row header.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ProcessMouseMoveOverColumnHeader(System.Int32,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Processes MouseMove events that occur when the pointer is over the column header.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ProcessMouseMoveOverViewport(System.Int32,System.Int32,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Processes MouseDown events that occur when the pointer is over a viewport.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ProcessMouseMoveOverTabStrip(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Processes MouseMove events that occur when the pointer is over the sheet name tabs.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ProcessMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Processes MouseMove events.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ProcessMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Processes MouseUp events.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.ProcessMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Processes MouseWheel events.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.GetCellFromPixel(System.Int32,System.Int32)">
            <summary>
            Gets the row and column indexes of the cell at the specified pointer location.
            </summary>
            <param name="x">X-coordinate (in pixels) of the pointer location</param>
            <param name="y">Y-coordinate (in pixels) of the pointer location</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.GetCellFromPixel(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the row and column indexes of the cell at the specified pointer location in the view.
            </summary>
            <param name="rowViewportIndex">Row index in the viewport</param>
            <param name="columnViewportIndex">Column index in the viewport</param>
            <param name="x">X-coordinate (in pixels) of the pointer location</param>
            <param name="y">Y-coordinate (in pixels) of the pointer location</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.GetColumnHeaderCellFromPixel(System.Int32,System.Int32)">
            <summary>
            Gets the row and column indexes of the column header cell at the specified pointer location.
            </summary>
            <param name="x">X-coordinate (in pixels) of the pointer location</param>
            <param name="y">Y-coordinate (in pixels) of the pointer location</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.GetColumnHeaderCellFromPixel(System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the row and column indexes of the column header cell at the specified pointer location.
            </summary>
            <param name="columnViewportIndex">Column index in the viewport</param>
            <param name="x">X-coordinate (in pixels) of the pointer location</param>
            <param name="y">Y-coordinate (in pixels) of the pointer location</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.GetRowHeaderCellFromPixel(System.Int32,System.Int32)">
            <summary>
            Gets the row and column indexes of the row header cell at the specified pointer location.
            </summary>
            <param name="x">X-coordinate (in pixels) of the pointer location</param>
            <param name="y">Y-coordinate (in pixels) of the pointer location</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.GetRowHeaderCellFromPixel(System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the row and column indexes of the row header cell at the specified pointer location.
            </summary>
            <param name="rowViewportIndex">Row index in the viewport</param>
            <param name="x">X-coordinate (in pixels) of the pointer location</param>
            <param name="y">Y-coordinate (in pixels) of the pointer location</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.GetCellRectangle(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the rectangle of the cell.
            </summary>
            <param name="rowViewportIndex">Index of the row of the viewport</param>
            <param name="columnViewportIndex">Index of the column of the viewport</param>
            <param name="row">Row index of the cell</param>
            <param name="column">Column index of the cell</param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.SetImage(System.Int32,System.Drawing.Image)">
            <summary>
            Sets the specified graphic for a specified part of the user interface.
            </summary>
            <param name="id">Unique identifier of the part of the user interface</param>
            <param name="url">Image object containing the graphic image</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.GetImage(System.Int32)">
            <summary>
            Gets the graphic image used in the specified part of the user interface.
            </summary>
            <param name="id">Unique identifier that specifies which part of the interface in which the image is used</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadView.Dispose">
            <summary>
            Frees system resources consumed by the SpreadView.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SpreadView.AllowColumnMove">
            <summary>
            Gets or sets whether to allow the user to move columns.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SpreadView.AllowRowMove">
            <summary>
            Gets or sets whether to allow the user to move rows.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SpreadView.Bounds">
            <summary>
            Gets the size and location of the view.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SpreadView.Sheets">
            <summary>
            Gets the sheets in the view.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SpreadView.ActiveSheetIndex">
            <summary>
            Gets or sets the active sheet in the view.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SpreadView.HorizontalScrollBarPolicy">
            <summary>
            Gets or sets when to display the horizontal scroll bars in the view.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SpreadView.VerticalScrollBarPolicy">
            <summary>
            Gets or sets when to display the vertical scroll bars in the view.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SpreadView.ScrollBarTrackPolicy">
            <summary>
            Gets or sets how the control scrolls the sheet when the user moves the scroll box.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SpreadView.ScrollTipPolicy">
            <summary>
            Gets or sets whether scroll tips appear when the user moves the scroll box.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SpreadView.ScrollBarMaxAlign">
            <summary>
            Gets or sets the scroll bar alignment with the last row and column 
            of the spreadsheet in the view.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SpreadView.ScrollBarShowMax">
            <summary>
            Gets or sets whether the user can use the scroll box to scroll through 
            all the columns and rows in the view, or just a limited number of them.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SpreadView.TabStripPlacement">
            <summary>
            Gets or sets the location of the tab strip in the view.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SpreadView.TabStripPolicy">
            <summary>
            Gets or sets the display policy for the tab strip in the view.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SpreadView.TabStripRatio">
            <summary>
            Gets or sets the width of the tab strip in the view expressed as
            a percentage of the overall horizontal width of the control.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SpreadView.ColumnSplitBoxPolicy">
            <summary>
            Gets or sets when to display the column split box in the view.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SpreadView.ColumnSplitBoxAlignment">
            <summary>
            Gets or sets the alignment of the column split box relative
            to the horizontal scroll bar in the view.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SpreadView.RowSplitBoxPolicy">
            <summary>
            Gets or sets when to display the row split box in the view.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SpreadView.RowSplitBoxAlignment">
            <summary>
            Gets or set the alignment of the row split box relative
            to the vertical scroll bar in the view.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SpreadView.AllowCellOverflow">
            <summary>
            Gets or sets whether data can overflow into adjacent empty cells 
            in the view.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SpreadView.AllowEditOverflow">
            <summary>
            Gets or sets whether data can overflow into adjacent empty cells 
            while edit mode is on in a cell in the view. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SpreadView.AllowDragDrop">
            <summary>
            Gets or sets whether to allow the user to drag and drop a range 
            of cells in the view.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SpreadView.AllowDragFill">
            <summary>
            Gets or sets whether to allow the user to drag and fill cells with 
            the contents of a cell or cells in the view.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SpreadView.AllowUserFormulas">
            <summary>
            Gets or sets whether to allow the user to enter formulas in a cell in the view.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SpreadView.AutoClipboard">
            <summary>
            Gets or sets whether to allow shortcut keys for Clipboard actions in the view.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SpreadView.BorderCollapse">
            <summary>
            Gets or sets whether adjacent cell borders are collapsed 
            into a single line in the view.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SpreadView.VisualStyles">
            <summary>
            Gets or sets whether to use visual styles when rendering objects in the control.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SpreadView.ButtonDrawMode">
            <summary>
            Gets or sets whether to display buttons in button and combo box cells in the view.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SpreadView.CellNoteIndicatorVisible">
            <summary>
            Gets or sets whether the cell note indicator appears in cells in the view.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SpreadView.TextTipPolicy">
            <summary>
            Gets or sets whether to display text tips and the location of the tips in the view. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SpreadView.TextTipDelay">
            <summary>
            Gets or sets the time (in milliseconds) the control waits before  
            displaying the text tip for the cell or header under the pointer in the view.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SpreadView.TextTipAppearance">
            <summary>
            Gets or sets the appearance of text tips in the view.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SpreadView.ClipboardOptions">
            <summary>
            Gets or sets whether headers are included with data in Clipboard actions in the view.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SpreadView.EditModePermanent">
            <summary>
            Gets or sets whether edit mode remains on for any cell in the view when that cell becomes active.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SpreadView.EditMode">
            <summary>
            Gets or sets whether the active cell in the view is in edit mode.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SpreadView.EditModeReplace">
            <summary>
            Gets or sets whether the existing text in a cell in the view is selected 
            when the cell enters edit mode.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SpreadView.MoveActiveOnFocus">
            <summary>
            Gets or sets whether the location of the active cell in the view moves 
            when the user moves the focus to the view using the mouse.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SpreadView.OperationMode">
            <summary>
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SpreadView.RetainSelectionBlock">
            <summary>
            Gets or sets whether the selected range of cells in the view 
            remains highlighted when the view loses the focus.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SpreadView.SelectionBlockOptions">
            <summary>
            Gets or sets which types of selections the user can make in the view.
            </summary>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            Specified value is not a valid selection option
            </exception>
        </member>
        <member name="P:FarPoint.Win.Spread.SpreadView.LeftTab">
            <summary>
            Gets or sets the leftmost sheet tab in the tab strip in the view.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SpreadView.ZoomFactor">
            <summary>
            Gets or sets the scaling factor of the display of the active sheet in the view.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SpreadView.EditingControl">
            <summary>
            Gets the Control object editing the active cell, or null if the control is not in edit mode.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SpreadView.Parent">
            <summary>
            Gets the parent (<see cref="T:FarPoint.Win.Spread.SpreadView"/> object) of the view.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SpreadView.SelectionRenderer">
            <summary>
            Gets or sets a renderer for drawing selections in the view.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SpreadView.FocusRenderer">
            <summary>
            Gets or sets a renderer for drawing the focus rectangle in the view.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SpreadView.HorizontalScrollBarHeight">
            <summary>
            Gets or sets the height of horizontal scroll bars in the view.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SpreadView.VerticalScrollBarWidth">
            <summary>
            Gets or sets the width of vertical scroll bars in the view.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SpreadView.AllowUserZoom">
            <summary>
            Gets or sets whether to allow the user to scale the view 
            using the Ctrl key and the mouse wheel.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.SpreadView.FpHScrollBar">
            <summary>
            Represents the horizontal scroll bar for the view.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.SpreadView.FpVScrollBar">
            <summary>
            Represents the vertical scroll bar for the view.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.SpreadViewportInfo">
            <summary>
            Represents the information about a viewport.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.ISelectionRenderer">
            <summary>
            Interface that supports painting the selection.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.ISelectionRenderer.PaintSelection(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Paints the selection. 
            </summary>
            <param name="g">Graphics object used to paint the rectangle</param>
            <param name="x">x-coordinate of the upper-left corner of the rectangle to paint</param>
            <param name="y">y-coordinate of the upper-left corner of the rectangle to paint</param>
            <param name="width">Width of rectangle to paint</param>
            <param name="height">Height of rectangle to paint</param>
        </member>
        <member name="T:FarPoint.Win.Spread.DefaultSelectionRenderer">
            <summary>
            Represents the default selection renderer.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DefaultSelectionRenderer.PaintSelection(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Paints the selection. 
            </summary>
            <param name="g">Graphics object used to paint the rectangle</param>
            <param name="x">x-coordinate of the upper-left corner of the rectangle to paint</param>
            <param name="y">y-coordinate of the upper-left corner of the rectangle to paint</param>
            <param name="width">Width of rectangle to paint</param>
            <param name="height">Height of rectangle to paint</param>
        </member>
        <member name="T:FarPoint.Win.Spread.SpreadLayout">
            <summary>
            Stores the location and size of areas within the spread control.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadLayout.#ctor(System.Int32,System.Int32)">
            <summary>
            Creates a SpreadLayout object for rowPaneCount by
            columnPaneCount scrollable viewports.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadLayout.GetViewportX(System.Int32)">
            <summary>
            Gets the x coordinate of the given column of viewports.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadLayout.SetViewportX(System.Int32,System.Int32)">
            <summary>
            Sets the x coordinate of the given column of viewports.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadLayout.GetViewportY(System.Int32)">
            <summary>
            Gets the y coordinate of the given row of viewports.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadLayout.SetViewportY(System.Int32,System.Int32)">
            <summary>
            Sets the y coordinate of the given row of viewports.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadLayout.GetViewportWidth(System.Int32)">
            <summary>
            Gets the width of the given column of viewports.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadLayout.SetViewportWidth(System.Int32,System.Int32)">
            <summary>
            Sets the width of the given column of viewports.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadLayout.GetViewportHeight(System.Int32)">
            <summary>
            Gets the height of the given row of viewports.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadLayout.SetViewportHeight(System.Int32,System.Int32)">
            <summary>
            Sets the height of the given row of viewports.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadLayout.GetColumnSplitBarX(System.Int32)">
            <summary>
            Gets the x coordinate of the given column split bar.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadLayout.SetColumnSplitBarX(System.Int32,System.Int32)">
            <summary>
            Sets the x coordinate of the given column split bar.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadLayout.GetColumnSplitBarWidth(System.Int32)">
            <summary>
            Gets the width of the given column split bar.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadLayout.SetColumnSplitBarWidth(System.Int32,System.Int32)">
            <summary>
            Sets the width of the given column split bar.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadLayout.GetRowSplitBarY(System.Int32)">
            <summary>
            Gets the y coordinate of the given row split bar.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadLayout.SetRowSplitBarY(System.Int32,System.Int32)">
            <summary>
            Sets the y coordinate of the given row split bar.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadLayout.GetRowSplitBarHeight(System.Int32)">
            <summary>
            Gets the height of the given row split bar.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadLayout.SetRowSplitBarHeight(System.Int32,System.Int32)">
            <summary>
            Sets the height of the given row split bar.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadLayout.GetColumnSplitBoxX(System.Int32)">
            <summary>
            Gets the x coordinate of the given column split box.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadLayout.SetColumnSplitBoxX(System.Int32,System.Int32)">
            <summary>
            Sets the x coordinate of the given column split box.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadLayout.GetColumnSplitBoxWidth(System.Int32)">
            <summary>
            Gets the width of the given column split box.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadLayout.SetColumnSplitBoxWidth(System.Int32,System.Int32)">
            <summary>
            Sets the width of the given column split box.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadLayout.GetRowSplitBoxY(System.Int32)">
            <summary>
            Gets the y coordinate of the given row split box.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadLayout.SetRowSplitBoxY(System.Int32,System.Int32)">
            <summary>
            Sets the y coordinate of the given row split box.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadLayout.GetRowSplitBoxHeight(System.Int32)">
            <summary>
            Gets the height of the given row split box.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadLayout.SetRowSplitBoxHeight(System.Int32,System.Int32)">
            <summary>
            Sets the height of the given row split box.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadLayout.GetHorizontalScrollBarX(System.Int32)">
            <summary>
            Gets the x coordinate of the given horizontal scroll bar.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadLayout.SetHorizontalScrollBarX(System.Int32,System.Int32)">
            <summary>
            Sets the x coordinate of the given horizontal scroll bar.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadLayout.GetHorizontalScrollBarWidth(System.Int32)">
            <summary>
            Gets the width of the given horizontal scroll bar.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadLayout.SetHorizontalScrollBarWidth(System.Int32,System.Int32)">
            <summary>
            Sets the width of the given horizontal scroll bar.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadLayout.GetVerticalScrollBarY(System.Int32)">
            <summary>
            Gets the y coordinate of the given vertical scroll bar.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadLayout.SetVerticalScrollBarY(System.Int32,System.Int32)">
            <summary>
            Sets the y coordinate of the given vertical scroll bar.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadLayout.GetVerticalScrollBarHeight(System.Int32)">
            <summary>
            Gets the height of the given vertical scroll bar.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadLayout.SetVerticalScrollBarHeight(System.Int32,System.Int32)">
            <summary>
            Sets the height of the given vertical scroll bar.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadLayout.CornerFromPoint(System.Int32,System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadLayout.RowHeaderFromPoint(System.Int32,System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadLayout.ColumnHeaderFromPoint(System.Int32,System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadLayout.ViewportRowFromPoint(System.Int32,System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadLayout.ViewportColumnFromPoint(System.Int32,System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadLayout.ColumnSplitBarFromPoint(System.Int32,System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadLayout.RowSplitBarFromPoint(System.Int32,System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadLayout.ColumnSplitBoxFromPoint(System.Int32,System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadLayout.RowSplitBoxFromPoint(System.Int32,System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadLayout.TabStripFromPoint(System.Int32,System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SpreadLayout.TabSplitBoxFromPoint(System.Int32,System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SpreadLayout.NONE">
            <summary>
            Used to indicate not found.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SpreadLayout.ColumnPaneCount">
            <summary>
            Gets the number of columns of viewports.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SpreadLayout.RowPaneCount">
            <summary>
            Gets the number of rows of viewports.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SpreadLayout.X">
            <summary>
            Gets or sets the x coordinate of the entire layout.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SpreadLayout.Y">
            <summary>
            Gets or sets the y coordinate of the entire layout.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SpreadLayout.Width">
            <summary>
            Gets or sets the width of the entire layout.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SpreadLayout.Height">
            <summary>
            Gets or sets the height of the entire layout.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SpreadLayout.HeaderX">
            <summary>
            Gets or sets the x coordinate of the row headers.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SpreadLayout.HeaderY">
            <summary>
            Gets or sets the y coordinate of the column headers.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SpreadLayout.HeaderWidth">
            <summary>
            Gets or sets the width of the row headers.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SpreadLayout.HeaderHeight">
            <summary>
            Gets or sets the height of the column headers.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SpreadLayout.FrozenX">
            <summary>
            Gets or sets the x coordinate of the leading frozen viewports.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SpreadLayout.FrozenY">
            <summary>
            Gets or sets the y coordinate of the leading frozen viewports.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SpreadLayout.FrozenWidth">
            <summary>
            Gets or sets the width of the leading frozen viewports.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SpreadLayout.FrozenHeight">
            <summary>
            Gets or sets the height of the leading frozen viewports.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SpreadLayout.FrozenTrailingX">
            <summary>
            Gets or sets the x coordinate of the trailing frozen viewports.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SpreadLayout.FrozenTrailingY">
            <summary>
            Gets or sets the y coordinate of the trailing frozen viewports.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SpreadLayout.FrozenTrailingWidth">
            <summary>
            Gets or sets the width of the trailing frozen viewports.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SpreadLayout.FrozenTrailingHeight">
            <summary>
            Gets or sets the height of the trailing frozen viewports.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SpreadLayout.OrnamentX">
            <summary>
            Gets or sets the x coordinate of the row ornaments (scroll bars, split boxs).
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SpreadLayout.OrnamentY">
            <summary>
            Gets or sets the y coordinate of the column ornaments (scroll bars, split boxs).
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SpreadLayout.OrnamentWidth">
            <summary>
            Gets or sets the width of the row ornaments (scroll bars, split boxs).
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SpreadLayout.OrnamentHeight">
            <summary>
            Gets or sets the height of the column ornaments (scroll bars, split boxs).
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SpreadLayout.TabStripX">
            <summary>
            Gets or sets the x coordinate of the tab strip.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SpreadLayout.TabStripY">
            <summary>
            Gets or sets the y coordinate of the tab strip.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SpreadLayout.TabStripWidth">
            <summary>
            Gets or sets the width of the tab strip.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SpreadLayout.TabStripHeight">
            <summary>
            Gets or sets the height of the tab strip.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SpreadLayout.TabSplitBoxX">
            <summary>
            Gets or sets the x coordinate of the tab split box.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SpreadLayout.TabSplitBoxWidth">
            <summary>
            Gets or sets the width of the tab split box.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.GridLineConverter">
            <summary>
            Converts GridLine objects from one data type to another.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.GridLineConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>
            Creates an object of this type by using a specified set of
            property values for the object.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.GridLineConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Determines whether changing a value on this object should
            require a call to the CreateInstance method to create a new
            value.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.GridLineConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            Retrieves the set of properties for this type.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.GridLineConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Determines whether this object supports properties.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.GridLineConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts a string to a GridLine object
            </summary>
            <param name="context">ITypeDescriptorContext</param>
            <param name="culture">CultureInfo</param>
            <param name="value">object</param>
            <returns>GridLine object</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.GridLineConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns a value indicating whether a grid line object can be converted to the specified type.
            </summary>
            <param name="context">ITypeDescriptorContext</param>
            <param name="destinationType">Type</param>
            <returns>True if a grid line object can be converted to the specified type, and false otherwise.</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.GridLineConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the GridLine object to a string.
            </summary>
            <param name="context">ITypeDescriptorContext</param>
            <param name="culture">CultureInfo</param>
            <param name="value">object</param>
            <param name="destinationType">Type</param>
            <returns>String representation of a GridLine object.</returns>
        </member>
        <member name="T:FarPoint.Win.Spread.SearchDialog">
            <summary>
            Represents a search dialog.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.SearchDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SearchDialog.#ctor">
            <summary>
            Creates a new empty search dialog form.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SearchDialog.#ctor(FarPoint.Win.Spread.FpSpread,System.String)">
            <summary>
            Creates a new search dialog form with the specified spreadsheet 
            and the specified string for which to search preset in the form.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SearchDialog.#ctor(FarPoint.Win.Spread.FpSpread,System.Int32,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Creates a search dialog form with the specified sheet, search string,  
            and other settings preset in the form.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SearchDialog.#ctor(FarPoint.Win.Spread.FpSpread,System.Int32,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Creates a search dialog form with the specified search string,  
            and other settings preset in the form, with a starting sheet for cross-sheet searching.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SearchDialog.#ctor(FarPoint.Win.Spread.FpSpread,System.String,System.Boolean)">
            <summary>
            Creates a search dialog form with the specified search string,  
            and other settings preset in the form with cross-sheet searching.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SearchDialog.OnStringNotFound(System.ComponentModel.CancelEventArgs)">
            <summary>
            Occurs when the search does not find the string.
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SearchDialog.SetCustomTextToDefaults">
            <summary>
            Sets the custom text in the form to default values.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SearchDialog.SetCustomText(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Sets the custom text in the form to specified values.
            </summary>
            <param name="findTextLabel">Text string to match</param>
            <param name="matchCaseLabel">Case to match string</param>
            <param name="exactMatchLabel">Exact match string</param>
            <param name="alternateSearchLabel">Alternate search string</param>
            <param name="useWildcardsLabel">Wildcard usage string</param>
            <param name="findText">Find text string</param>
            <param name="findNextText">Find next text string</param>
            <param name="closeText">Close text string</param>
            <param name="notFoundText">Text not found string</param>
            <param name="repeatSearchText">Prompt to repeat search from beginning string</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SearchDialog.SetCustomText(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Sets the custom text in the form to specified values.
            </summary>
            <param name="findTextLabel">Text string to match</param>
            <param name="matchCaseLabel">Case to match string</param>
            <param name="exactMatchLabel">Exact match string</param>
            <param name="alternateSearchLabel">Alternate search string</param>
            <param name="useWildcardsLabel">Wildcard usage string</param>
            <param name="findText">Find text string</param>
            <param name="findNextText">Find next text string</param>
            <param name="closeText">Close text string</param>
            <param name="notFoundText">Text not found string</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SearchDialog.OnClosing(System.ComponentModel.CancelEventArgs)">
            <summary>
            Occurs on closing.
            </summary>
            <param name="e">Close event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.SearchDialog.Dispose(System.Boolean)">
            <summary>
            Cleans up any resources being used.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SearchDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.SearchDialog.DoSearch(System.Int32,System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Internal use only.
            </summary>
            <param name="sheetIndex"></param>
            <param name="startRowIndex"></param>
            <param name="startColumnIndex"></param>
            <param name="foundRowIndex"></param>
            <param name="foundColumnIndex"></param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Spread.SearchDialog.PaintSeparator(System.Windows.Forms.Label,System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints a highlighted line from the end of a label control text to the width of the control to make
             the label look more like a separator.
            </summary>
            <param name="sender">Label</param>
            <param name="e">Paint event arguments</param>
        </member>
        <member name="E:FarPoint.Win.Spread.SearchDialog.StringNotFound">
            <summary>
            Occurs when the search is cancelled with the string not found. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SearchDialog.SheetIndex">
            <summary>
            Gets or sets the index of the sheet to search.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SearchDialog.SearchStrings">
            <summary>
            Gets the strings that were searched for in the search dialog.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SearchDialog.UseWildcards">
            <summary>
            Gets or sets whether to use wildcard characters in the search.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SearchDialog.CaseSensitive">
            <summary>
            Gets or sets whether to consider upper case and lower case when performing the search.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SearchDialog.ExactMatch">
            <summary>
            Gets or sets whether to consider only strings that match exactly.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SearchDialog.AlternateSearch">
            <summary>
            Gets or sets whether to search down rows first then across columns, 
            which is the alternate way of searching.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SearchDialog.RepeatFromStart">
            <summary>
            Gets or sets whether to repeat the search from the start.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SearchDialog.SearchString">
            <summary>
            Gets or sets the string for which to search.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SearchDialog.FoundString">
            <summary>
            Gets the string that matches the one searched for.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SearchDialog.FoundSheetIndex">
            <summary>
            Gets the sheet index of the matched string.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SearchDialog.FoundRowIndex">
            <summary>
            Gets the row index of the matched string.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SearchDialog.FoundColumnIndex">
            <summary>
            Gets the column index of the matched string.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SearchDialog.StartRowIndex">
            <summary>
            Gets or sets the row at which to start the search.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.SearchDialog.StartColumnIndex">
            <summary>
            Gets or sets the column at which to start the search.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.AdvancedSearchDialog">
            <summary>
            Represents an advanced search dialog.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.AdvancedSearchDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.AdvancedSearchDialog.#ctor">
            <summary>
            Creates a new, empty, advanced search dialog form.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.AdvancedSearchDialog.#ctor(FarPoint.Win.Spread.FpSpread,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Creates an advanced search dialog form with the specified sheet, search string,  
            and other settings preset in the form.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.AdvancedSearchDialog.#ctor(FarPoint.Win.Spread.FpSpread,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Creates an advanced search dialog form with the specified sheet, search string,  
            and other settings preset in the form.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.AdvancedSearchDialog.Dispose(System.Boolean)">
            <summary>
            Cleans up any resources being used.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.AdvancedSearchDialog.DoSearch(System.Int32,System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Internal use only.
            </summary>
            <param name="sheetIndex"></param>
            <param name="startRowIndex"></param>
            <param name="startColumnIndex"></param>
            <param name="foundRowIndex"></param>
            <param name="foundColumnIndex"></param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Spread.AdvancedSearchDialog.SetCustomTextToDefaults">
            <summary>
            Sets the custom text in the form to default values.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.AdvancedSearchDialog.SearchCellText">
            <summary>
            Gets or sets whether to search the text of cells.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.AdvancedSearchDialog.SearchNotes">
            <summary>
            Gets or sets whether to search the text of cell notes.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.AdvancedSearchDialog.SearchTags">
            <summary>
            Gets or sets whether to search cell tags, if the object is representable as a string.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.AdvancedSearchDialog.StartSheetIndex">
            <summary>
            Gets or sets the index of the sheet at which to start the search.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.AdvancedSearchDialog.EndSheetIndex">
            <summary>
            Gets or sets the index of the sheet at which to end the search.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.Model.ColumnCalc">
            <summary>
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.DrawingSpace.ShadowProps">
            <summary>
            Represents the shadow properties for floating objects.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.DrawingSpace.ShadowProps.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.ShadowProps.#ctor">
            <summary>
            Creates a new set of shadow properties.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.ShadowProps.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.ShadowProps.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.ShadowProps.Shape">
            <summary>
            Gets or sets the shape.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.RowLayoutModel">
            <summary>
            Represents a collection of rows along with their locations
            sizes.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.RowLayoutModel.#ctor">
            <summary>
            Creates a new row layout model that is initially empty.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.RowLayoutModel.Add(FarPoint.Win.Spread.RowLayout)">
            <summary>
            Adds a layout to the model.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.RowLayoutModel.FindRow(System.Int32)">
            <summary>
            Finds the layout for the specified row.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.RowLayoutModel.FindY(System.Int32)">
            <summary>
            Finds the layout that contains the specified point.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.RowLayoutModel.FindNearY(System.Int32)">
            <summary>
            Finds the layout that contains or is near the specified point.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.RowLayoutModel.Item(System.Int32)">
            <summary>
            Gets the element at the specified index.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.RowLayoutModel.Count">
            <summary>
            Gets the number of layouts in the model.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.FormulaEditorUI">
            <summary>
            Summary description for FormulaEditorUI.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.FormulaEditorUI.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.FormulaEditorUI.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.FormulaEditor">
            <summary>
            Editor for the Cells, Columns, and Rows properties.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.FormulaEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits the parent style name value.
            </summary>
            <param name="context">ITypeDescriptorContext</param>
            <param name="provider">IServiceProvider</param>
            <param name="value">object</param>
            <returns>object</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.FormulaEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets the style of the type editor (which is drop-down).
            </summary>
            <param name="context">ITypeDescriptorContext</param>
            <returns>UITypeEditorEditStyle</returns>
        </member>
        <member name="T:FarPoint.Win.Spread.Model.SheetStyleModelEventType">
            <summary>
            Specifies the type of Change event that has occurred for an style model for the sheet.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.Model.SheetStyleModelEventType.CellsUpdated">
            <summary>
            Indicates that the style of one or more cells has changed
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.Model.SheetStyleModelEventType.RowsAdded">
            <summary>
            Indicates that the style of one or more rows have been added
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.Model.SheetStyleModelEventType.RowsRemoved">
            <summary>
            Indicates that the style of one or more rows have been removed
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.Model.SheetStyleModelEventType.ColumnsAdded">
            <summary>
            Indicates that the style of one or more columns have been added
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.Model.SheetStyleModelEventType.ColumnsRemoved">
            <summary>
            Indicates that the style of one or more columns have been removed
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.Model.SheetStyleModelEventType.ModelUpdated">
            <summary>
            Indicates that the model has been updated such that all styles may have changed
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.Model.SheetStyleModelEventArgs">
            <summary>
            Represents the event data for the Changed event of the style model for the sheet. 
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SheetStyleModelEventArgs.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.Model.SheetStyleModelEventType)">
            <summary>
            Creates a new Changed event arguments object for the style model for the sheet.
            </summary>
            <param name="row">
            Row index where the event occurred, or -1 if all rows were affected
            </param>
            <param name="column">
            Column index where the event occurred, or -1 if all columns were affected
            </param>
            <param name="rowCount">
            Number of rows, or -1 if all rows were affected
            </param>
            <param name="columnCount">
            Number of columns, or -1 if all columns were affected
            </param>
            <param name="type">
            Type of change that occurred in the style model
            </param>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.SheetStyleModelEventArgs.Row">
            <summary>
            Gets the row index where the event occurred, 
            or -1 if all rows were affected.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.SheetStyleModelEventArgs.Column">
            <summary>
            Gets the column index where the event occurred, 
            or -1 if all columns were affected.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.SheetStyleModelEventArgs.RowCount">
            <summary>
            Gets the number of rows, or -1 if all rows were affected.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.SheetStyleModelEventArgs.ColumnCount">
            <summary>
            Gets the number of columns, or -1 if all columns were affected.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.SheetStyleModelEventArgs.Type">
            <summary>
            Gets the type of event that occurred.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.Model.SheetStyleModelEventHandler">
            <summary>
            Handles the Changed event in the style model of the sheet.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.Model.INamedStyleSupport">
            <summary>
            Interface that supports collections of custom styles in the style model.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.INamedStyleSupport.GetDirectName(System.Int32,System.Int32)">
            <summary>
            Gets the name of the direct style assigned to a cell, column,
            row, or model default.
            </summary>
            <param name="row">
            Row index of the cell in the model, or -1 to specify an entire column or the model default
            </param>
            <param name="column">
            Column index of the cell in the model, or -1 to specify an entire row or the model default
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.INamedStyleSupport.SetDirectName(System.Int32,System.Int32,System.String)">
            <summary>
            Sets the direct style for the specified cell, column, row,
            or model default to the specified style name.
            </summary>
            <param name="row">
            Row index of the cell in the model, or -1 to specify a column or model default
            </param>
            <param name="column">
            Column index of the cell in the model, or -1 to specify a row or model default
            </param>
            <param name="styleName">
            Name of the style to set
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.INamedStyleSupport.GetDirectAltRowName(System.Int32)">
            <summary>
            Gets the style name for an alternating row style.
            </summary>
            <param name="index">
            Index of the alternating row style to set; must be between 0 and AltRowCount-1
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.INamedStyleSupport.SetDirectAltRowName(System.Int32,System.String)">
            <summary>
            Sets the specified alternating row style in the model to the specified named style.
            </summary>
            <param name="index">
            Index of the alternating row style to set; must be between 0 and AltRowCount-1
            </param>
            <param name="styleName">
            Name of the style to set
            </param>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.INamedStyleSupport.NamedStyles">
            <summary>
            Gets or sets the collection of styles used by the style model.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.Model.IParentStyleModelSupport">
            <summary>
            Interface that supports a parent style model for composing styles.  
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.IParentStyleModelSupport.Parent">
            <summary>
            Gets or sets the parent style model.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.Model.DefaultSheetStyleModel">
            <summary>
            Represents the full (concrete) implementation of the ISheetSpanModel interface for a style model for a sheet, 
            which represents cell styles.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.IFilteredRowSupport">
            <summary>
            Interface that supports style filters in the style model for filtering rows on a sheet.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.IFilteredRowSupport.SetFilteredRowFormat(System.Int32,FarPoint.Win.Spread.StyleInfo)">
            <summary>
            Sets the format for the specified row into the style model.
            </summary>
            <param name="rowIndex">Row index</param>
            <param name="style">StyleInfo object containing style</param>
        </member>
        <member name="M:FarPoint.Win.Spread.IFilteredRowSupport.ClearFilterRowFormats">
            <summary>
            Removes all the filtered row formats from the style model.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.#ctor">
            <summary>
            Creates a style model (DefaultSheetStyleModel object) 
            with 0 rows, 0 columns, no parent style model, and 
            a private named styles collection.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.#ctor(System.Int32,System.Int32)">
            <summary>
            Creates a style model (DefaultSheetStyle model object) 
            with the specified number of rows and columns. 
            </summary>
            <param name="rowCount">
            Number of rows in the model
            </param>
            <param name="columnCount">
            Number of columns in the model
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.#ctor(System.Int32,System.Int32,FarPoint.Win.Spread.NamedStyleCollection)">
            <summary>
            Creates a style model (DefaultSheetStyle model object) 
            with the specified number of rows and columns 
            and named styles collection. 
            </summary>
            <param name="rowCount">
            Number of rows in the model
            </param>
            <param name="columnCount">
            Number of columns in the model
            </param>
            <param name="namedStyles">
            NamedStyleCollection collection for the style model
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.#ctor(System.Int32,System.Int32,FarPoint.Win.Spread.Model.ISheetStyleModel)">
            <summary>
            Creates a style model (DefaultSheetStyle model object)  
            with the specified parent style model and number of rows and columns.
            </summary>
            <param name="rowCount">
            Number of rows in the model
            </param>
            <param name="columnCount">
            Number of columns in the model
            </param>
            <param name="parent">
            Parent style model
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.#ctor(System.Int32,System.Int32,FarPoint.Win.Spread.Model.ISheetStyleModel,FarPoint.Win.Spread.NamedStyleCollection)">
            <summary>
            Creates a style model (DefaultSheetStyle model object) 
            with the specified parent style model, named styles collection, 
            and number of rows and columns. 
            </summary>
            <param name="rowCount">
            Number of rows in the model
            </param>
            <param name="columnCount">
            Number of columns in the model
            </param>
            <param name="parent">
            Parent style model
            </param>
            <param name="namedStyles">
            NamedStyleCollection collection for the style model
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new default sheet style model from deserialization.
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contextual information about the source of the deserialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets information about the default sheet style model. 
            </summary>
            <param name="info">Object that holds the serialized object data</param>
            <param name="context">Contextual information about the source or destination of the serialization</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.Serialize(System.Xml.XmlTextWriter)">
            <summary>
            Saves the object to XML.
            </summary>
            <param name="w">
            XmlTextWriter object to which to save the object
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.Deserialize(System.Xml.XmlNodeReader)">
            <summary>
            Loads the object from XML.
            </summary>
            <param name="r">
            XmlNodeReader from which to load the object
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.GetDirectName(System.Int32,System.Int32)">
            <summary>
            Gets the name of the direct style assigned to a cell, column,
            row, or model default.
            </summary>
            <param name="row">
            Model row index of the cell, 
            or -1 to specify a column or model default
            </param>
            <param name="column">
            Model column index of the cell,
            or -1 to specify a row or model default
            </param>
            <exception cref="T:System.IndexOutOfRangeException">
            Specified row index is not valid; must be between -1 and the total number of rows
            </exception>
            <exception cref="T:System.IndexOutOfRangeException">
            Specified column index is not valid; must be between -1 and the total number of columns
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.SetDirectName(System.Int32,System.Int32,System.String)">
            <summary>
            Sets the name of the direct style for the specified cell, column, row,
            or model default to the specified style name.
            </summary>
            <param name="row">
            Model row index of the cell, 
            or -1 to specify a column or model default
            </param>
            <param name="column">
            Model column index of the cell,
            or -1 to specify a row or model default
            </param>
            <param name="styleName">
            Name of the style to set
            </param>
            <exception cref="T:System.IndexOutOfRangeException">
            Specified row index is not valid; must be between -1 and the total number of rows
            </exception>
            <exception cref="T:System.IndexOutOfRangeException">
            Specified column index is not valid; must be between -1 and the total number of columns
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.GetDirectAltRowName(System.Int32)">
            <summary>
            Gets the style name for an alternating row style.
            </summary>
            <param name="index">
            Index of the alternating row style to set
            </param>
            <exception cref="T:System.IndexOutOfRangeException">
            Specified index is not valid; must be between 0 and the total number of styles
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.SetDirectAltRowName(System.Int32,System.String)">
            <summary>
            Sets the name of the specified alternating row style in the model to the 
            specified named style.
            </summary>
            <param name="index">
            Index of the alternating row style to set
            </param>
            <param name="styleName">
            Name of the style to set
            </param>
            <exception cref="T:System.IndexOutOfRangeException">
            Specified index is not valid; must be between 0 and the total number of styles
            </exception>
            <exception cref="T:System.ArgumentNullException">No style is specified or specified style is null</exception>
            <exception cref="T:System.ArgumentException">No style is specified or specified style is empty</exception>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.GetParseFormat(System.Int32,System.Int32,System.String@,System.IFormatProvider@)">
            <summary>
            Gets the parse format for the cell at the specified row and column.
            </summary>
            <param name="row">Row index of the cell</param>
            <param name="column">Column index of the cell</param>
            <param name="formatString">Format string</param>
            <param name="info">IFormatProvider to handle the formatting</param>
            <exception cref="T:System.IndexOutOfRangeException">
            Specified row index is not valid; must be between -1 and the total number of rows
            </exception>
            <exception cref="T:System.IndexOutOfRangeException">
            Specified column index is not valid; must be between -1 and the total number of column
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.SetParseFormat(System.Int32,System.Int32,System.String,System.IFormatProvider)">
            <summary>
            Sets the parse format for the cell at the specified row and column.
            </summary>
            <param name="row">Row index of the cell</param>
            <param name="column">Column index of the cell</param>
            <param name="formatString">Format string</param>
            <param name="info">IFormatProvider to handle the formatting</param>
            <exception cref="T:System.IndexOutOfRangeException">
            Specified row index is not valid; must be between -1 and the total number of rows
            </exception>
            <exception cref="T:System.IndexOutOfRangeException">
            Specified column index is not valid; must be between -1 and the total number of columns
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.IsEmpty">
            <summary>
            Determines whether the model is empty of data. 
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.IsRowUsed(System.Int32)">
            <summary>
            Determines whether the row in the model contains style settings.
            </summary>
            <param name="row">Index of row in the model</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.NextNonEmptyColumnInRow(System.Int32,System.Int32)">
            <summary>
            Gets the index of the next column in a specified row in the model that contains style settings.
            </summary>
            <param name="row">Index of row in the model to search</param>
            <param name="column">Index of column in the model before the column to start searching (-1 to start at column 0)</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.NextNonEmptyRow(System.Int32)">
            <summary>
            Gets the index of the next row that contains a style setting in the model.
            </summary>
            <param name="row">Row index to start searching after (-1 to start at row 0)</param>
            <returns>Row index of next non-empty row</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.GetCompositeInfo(System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.StyleInfo)">
            <summary>
            Gets the composite style for the specified cell, column, row,
            or model default.  
            </summary>
            <param name="row">
            Model row index of the cell,
            or -1 to specify a column or model default
            </param>
            <param name="column">
            Model column index of the cell,
            or -1 to specify a row or model default
            </param>
            <param name="altIndex">
            Alternating row index of the cell,
            or -1 to skip composing any alternating style
            </param>
            <param name="destInfo">
            Specifies a StyleInfo object to use for composing the styles
            </param>
            <exception cref="T:System.IndexOutOfRangeException">
            Specified row index is not valid; must be between -1 and the total number of rows
            </exception>
            <exception cref="T:System.IndexOutOfRangeException">
            Specified column index is not valid; must be between -1 and the total number of columns
            </exception>
            <exception cref="T:System.IndexOutOfRangeException">
            Specified index is not valid; must be between 0 and the total number of styles
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.GetDirectInfo(System.Int32,System.Int32,FarPoint.Win.Spread.StyleInfo)">
            <summary>
            Gets the direct style for the specified cell, column, row,
            or model default.
            </summary>
            <param name="row">
            Model row index of the cell, 
            or -1 to specify a column or model default
            </param>
            <param name="column">
            Model column index of the cell,
            or -1 to specify a row or model default
            </param>
            <param name="destInfo">
            StyleInfo object to use for getting the style
            </param>
            <exception cref="T:System.IndexOutOfRangeException">
            Specified row index is not valid; must be between -1 and the total number of rows
            </exception>
            <exception cref="T:System.IndexOutOfRangeException">
            Specified column index is not valid; must be between -1 and the total number of columns
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.GetDirectAltRowInfo(System.Int32,FarPoint.Win.Spread.StyleInfo)">
            <summary>
            Gets the specified alternating row style in the model.
            </summary>
            <param name="index">
            Index of the alternating row style to get
            </param>
            <param name="destInfo">
            StyleInfo object to use for composing the styles
            </param>
            <exception cref="T:System.IndexOutOfRangeException">
            Specified style index is not valid; must be between 0 and the total number of styles
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.SetDirectInfo(System.Int32,System.Int32,FarPoint.Win.Spread.StyleInfo)">
            <summary>
            Sets the direct style for the specified cell, column, row,
            or model default.  
            </summary>
            <param name="row">
            Model row index of the cell, 
            or -1 to specify a column or model default
            </param>
            <param name="column">
            Model column index of the cell,
            or -1 to specify a row or model default
            </param>
            <param name="info">
            Style object set (StyleInfo or NamedStyle)
            </param>
            <exception cref="T:System.IndexOutOfRangeException">
            Specified row index is not valid; must be between -1 and the total number of rows
            </exception>
            <exception cref="T:System.IndexOutOfRangeException">
            Specified column index is not valid; must be between -1 and the total number of columns
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.SetDirectAltRowInfo(System.Int32,FarPoint.Win.Spread.StyleInfo)">
            <summary>
            Sets the specified alternating row style in the model.
            </summary>
            <param name="index">
            Index of the alternating row style to set 
            </param>
            <param name="info">
            Style object set
            </param>
            <exception cref="T:System.IndexOutOfRangeException">
            Specified style index is not valid; must be between 0 and the total number of styles
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.FarPoint#Win#Spread#Model#IRangeSupport#AddRows(System.Int32,System.Int32)">
            <summary>
            This IRangeSupport method is used internally by Spread to
            keep the row and column counts in sync between the models
            and is not intended to be called directly from your code.
            Use the IRangeSupport methods in the data model, or the
            wrapper methods in the SheetView instead.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.FarPoint#Win#Spread#Model#IRangeSupport#AddColumns(System.Int32,System.Int32)">
            <summary>
            This IRangeSupport method is used internally by Spread to
            keep the row and column counts in sync between the models
            and is not intended to be called directly from your code.
            Use the IRangeSupport methods in the data model, or the
            wrapper methods in the SheetView instead.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.FarPoint#Win#Spread#Model#IRangeSupport#RemoveRows(System.Int32,System.Int32)">
            <summary>
            This IRangeSupport method is used internally by Spread to
            keep the row and column counts in sync between the models
            and is not intended to be called directly from your code.
            Use the IRangeSupport methods in the data model, or the
            wrapper methods in the SheetView instead.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.FarPoint#Win#Spread#Model#IRangeSupport#RemoveColumns(System.Int32,System.Int32)">
            <summary>
            This IRangeSupport method is used internally by Spread to
            keep the row and column counts in sync between the models
            and is not intended to be called directly from your code.
            Use the IRangeSupport methods in the data model, or the
            wrapper methods in the SheetView instead.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.Clear(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Removes all of the direct styles from the specified range.
            </summary>
            <param name="row">
            Starting model row index to clear
            </param>
            <param name="column">
            Starting model column index to clear
            </param>
            <param name="rowCount">
            Number of rows to clear
            </param>
            <param name="columnCount">
            Number of columns to clear
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.Copy(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Copies the direct styles from one specified range of cells to another.
            </summary>
            <param name="fromRow">
            Row index of cell from which to begin copying 
            </param>
            <param name="fromColumn">
            Column index of cell from which to begin copying 
            </param>
            <param name="toRow">
            Row index at which to paste cell style 
            </param>
            <param name="toColumn">
            Column index at which to paste cell style 
            </param>
            <param name="rowCount">
            Number of rows to copy
            </param>
            <param name="columnCount">
            Number of columns to copy
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.Move(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Moves the specified range of direct styles 
            from one location to another.
            </summary>
            <param name="fromRow">
            Row index from which to begin the move 
            </param>
            <param name="fromColumn">
            Column index from which to begin the move 
            </param>
            <param name="toRow">
            Row index at which to paste cell style 
            </param>
            <param name="toColumn">
            Column index at which to paste cell style 
            </param>
            <param name="rowCount">
            Number of rows to move
            </param>
            <param name="columnCount">
            Number of columns to move
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.Swap(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Swaps the direct styles in the specified range with the 
            direct styles from another specified range.
            </summary>
            <param name="fromRow">
            Row index of first cell from which to begin swap 
            </param>
            <param name="fromColumn">
            Column index of first cell from which to begin swap 
            </param>
            <param name="toRow">
            Row index of first cell of destination of the swap
            </param>
            <param name="toColumn">
            Column index of first cell of destination of the swap
            </param>
            <param name="rowCount">
            Number of rows to swap
            </param>
            <param name="columnCount">
            Number of columns to swap
            </param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.SetFormulaConditionalFormat(System.Int32,System.Int32,FarPoint.Win.Spread.NamedStyle,System.String)">
            <summary>
            Sets a formula conditional format for a cell in the model.
            </summary>
            <param name="row">Row index of the cell in the model</param>
            <param name="column">Column index of the cell in the model</param>
            <param name="style">Style to be applied to the cell if the formula evaluates to true</param>
            <param name="formula">Formula to evaluate for the condition</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.SetConditionalFormat(System.Int32,System.Int32,FarPoint.Win.Spread.NamedStyle,FarPoint.Win.Spread.ComparisonOperator,System.String)">
            <summary>
            Sets a conditional format for a cell in the model with the specified value.
            </summary>
            <param name="row">Row index of the cell in the model</param>
            <param name="column">Column index of the cell in the model</param>
            <param name="style">Style to be applied to the cell if the condition is satisfied</param>
            <param name="op">Comparison operator to apply to the cell value and the specified value</param>
            <param name="value">String with the specified value</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.SetConditionalFormat(System.Int32,System.Int32,FarPoint.Win.Spread.NamedStyle,FarPoint.Win.Spread.ComparisonOperator,System.String,System.String)">
            <summary>
            Sets a conditional format for a cell in the model with the specified values.
            </summary>
            <param name="row">Row index of the cell in the model</param>
            <param name="column">Column index of the cell in the model</param>
            <param name="style">Style to be applied to the cell if the condition is satisfied</param>
            <param name="op">Comparison operator to apply to the cell value and the parameter values</param>
            <param name="firstCondition">First specified value</param>
            <param name="lastCondition">Last specified value</param>
            <exception cref="T:System.ArgumentNullException">No condition is specified or specified condition is empty</exception>
            <exception cref="T:System.ArgumentException">Specified condition is not valid; must be a string</exception>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.SetConditionalFormat(System.Int32,System.Int32,FarPoint.Win.Spread.NamedStyle,FarPoint.Win.Spread.ComparisonOperator,FarPoint.CalcEngine.Expression,FarPoint.CalcEngine.Expression)">
            <summary>
            Sets a conditional format for a cell in the model with the specified expressions.
            </summary>
            <param name="row">Row index of the cell in the model</param>
            <param name="column">Column index of the cell in the model</param>
            <param name="style">Style to be applied to the cell if the condition is satisfied</param>
            <param name="op">Comparison operator to apply to the cell value and the specified value</param>
            <param name="firstCondition">First specified expression</param>
            <param name="lastCondition">Last specified expression</param>
            <exception cref="T:System.ArgumentNullException">
            No condition is specified or specified condition is empty
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.GetConditionalFormats(System.Int32,System.Int32)">
            <summary>
            Gets the conditional formats for the cell at the specified row and column in the model.
            </summary>
            <param name="row">Row index of the cell in the model</param>
            <param name="column">Column index of the cell in the model</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.GetConditionalFormats(System.Int32@,System.Int32@,System.Boolean)">
            <summary>
            Gets the conditional formats for the cells starting at the specified row and column in the model.
            </summary>
            <param name="row">Row index of the first cell</param>
            <param name="column">Column index of the first cell</param>
            <param name="findNext">Whether to continue to find cells with conditional formats</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.ClearConditionalFormats(System.Int32,System.Int32)">
            <summary>
            Removes all of the conditional formats from the cell at the specified row and column in the model.
            </summary>
            <param name="row">Row index</param>
            <param name="column">Column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.GetValidConditionalFormat(System.Int32,System.Int32,System.Object,FarPoint.Win.Spread.Model.ISheetDataModel)">
            <summary>
            Returns the style information for the first valid condition for the cell at the specified row and column in the model. 
            </summary>
            <param name="row">Row index of the cell in the model</param>
            <param name="column">Column index of the cell in the model</param>
            <param name="value">Object containing the cell value</param>
            <param name="dm">ISheetDataModel object containing the sheet data model</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.ConditionalFormatIsRowUsed(System.Int32)">
            <summary>
            Gets whether the row in the model contains style settings.
            </summary>
            <param name="row">Row index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.ConditionalFormatNextNonEmptyColumnInRow(System.Int32,System.Int32)">
            <summary>
            Returns the index  of the next non-empty column in a row in the model.
            </summary>
            <param name="row">Row index to search</param>
            <param name="column">Column index before the column to start searching (-1 to start at column 0)</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.SetFilteredRowFormat(System.Int32,FarPoint.Win.Spread.StyleInfo)">
            <summary>
            Sets the format for the filtered row in the model.
            </summary>
            <param name="row">Index of the row in the model</param>
            <param name="style">Style information that defines the format</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.ClearFilterRowFormats">
            <summary>
            Removes all of the formats for the filtered row in the model.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.GetArray(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets an object array from a specified range of cells in the model.
            </summary>
            <param name="row">Index of the starting row in the model</param>
            <param name="column">Index of the starting column in the model</param>
            <param name="rowCount">Number of rows in the model to copy</param>
            <param name="columnCount">Number of columns in the model to copy</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.SetArray(System.Int32,System.Int32,System.Object[0:,0:])">
            <summary>
            Sets an object array into a specified range of cells in the model.
            </summary>
            <param name="row">Row index of the start of the range of cells</param>
            <param name="column">Column index of the start of the range of cells</param>
            <param name="value">Two-dimensional object array[row,column] containing the values</param>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.AddStyle(System.Object,System.Int32,System.Int32)">
            <summary>
            Adds a new style to the model for the specified StyleInfo, 
            or adds a reference to an existing style.
            </summary>
            <param name="o">
            StyleInfo, NamedStyle, or style name to add.
            </param>
            <param name="row">
            Specifies the row reference, or the alternating row 
            style index if column is -2.
            </param>
            <param name="column">
            Specifies the column reference or -2 for an 
            alternating row style.
            </param>
            <returns>
            Returns the NamedStyle object in the array that was referenced.
            </returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.GetStyle(System.Int32,System.Int32)">
            <summary>
            Gets a NamedStyle object from the sparse array/matrix.
            </summary>
            <param name="row">
            Specifies the row index, or -1 for a column or model default,
            or the alternating row index if column is -2.
            </param>
            <param name="column">
            Specifies the column index, or -1 for a row or model default,
            or -2 for an alternating row.
            </param>
            <returns>
            Returns the named style object set for the specified cell,
            column, row, or model default, or null if no style is set.
            </returns>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.SetStyle(System.Int32,System.Int32,System.Object)">
            <summary>
            Sets a NamedStyle into the appropriate SparseArray/SparseMatrix.
            </summary>
            <param name="row">
            Specifies the row index, or -1 for a column or model default,
            or the alternating row index if column is -2.
            </param>
            <param name="column">
            Specifies the column index, or -1 for a row or model default,
            or -2 for an alternating row.
            </param>
            <param name="style">
            Specifies the NamedStyle or style name.
            </param>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.CanSerializeXml">
            <summary>
            Gets whether the object in its entirety can be rendered with XML 
            without losing any information.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.AltRowCount">
            <summary>
            Gets or sets the number of alternating rows in the style model.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.ColumnCount">
            <summary>
            Gets the number of columns in the style model.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.RowCount">
            <summary>
            Gets the number of rows in the style model.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.Parent">
            <summary>
            Gets or sets the parent style model.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.NamedStyles">
            <summary>
            Gets or sets the named styles collection for the model.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.NonEmptyColumnCount">
            <summary>
            Gets the number of columns in the model that contain style settings.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.NonEmptyRowCount">
            <summary>
            Gets the number of rows in the model that contain style settings.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.Model.SheetDataModelEventType">
            <summary>
            Specifies the type of Change event that has occurred for an axis model for the sheet.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.Model.SheetDataModelEventType.CellsUpdated">
            <summary>
            Indicates that cells with cell data have been updated
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.Model.SheetDataModelEventType.RowsAdded">
            <summary>
            Indicates that rows have been added
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.Model.SheetDataModelEventType.RowsRemoved">
            <summary>
            Indicates that rows have been removed
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.Model.SheetDataModelEventType.ColumnsAdded">
            <summary>
            Indicates that columns have been added
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.Model.SheetDataModelEventType.ColumnsRemoved">
            <summary>
            Indicates that columns have been removed
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.Model.SheetDataModelEventType.ModelUpdated">
            <summary>
            Indicates that the sheet data model has been updated
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.Model.SheetDataModelEventArgs">
            <summary>
            Represents the event data for the Changed event of the data model for the sheet.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.Model.SheetDataModelEventArgs.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.Model.SheetDataModelEventType)">
            <summary>
            Creates a new Changed event arguments object for the data model for the sheet.
            </summary>
            <param name="row">Row index</param>
            <param name="column">Column index</param>
            <param name="rowCount">Number of rows</param>
            <param name="columnCount">Number of columns</param>
            <param name="type">Type of change that occurred in the data model</param>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.SheetDataModelEventArgs.Row">
            <summary>
            Gets the row index.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.SheetDataModelEventArgs.Column">
            <summary>
            Gets the column index.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.Model.SheetDataModelEventArgs.RowCount">
            <summary>
            Gets the number of rows.
            </summary> 
        </member>
        <member name="P:FarPoint.Win.Spread.Model.SheetDataModelEventArgs.ColumnCount">
            <summary>
            Gets the number of columns.
            </summary>  
        </member>
        <member name="P:FarPoint.Win.Spread.Model.SheetDataModelEventArgs.Type">
            <summary>
            Gets the event type.
            </summary> 
        </member>
        <member name="T:FarPoint.Win.Spread.Model.SheetDataModelEventHandler">
            <summary>
            Handles the Changed event in the data model of the sheet. 
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.FilterListBehavior">
            <summary>
            Specifies how the row filter behaves.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.FilterListBehavior.SortAlphabetically">
            <summary>
            [0] Sorts the drop-down list alphabetically
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.FilterListBehavior.Blank">
            <summary>
            [1] Displays the "(Blanks)" item in the drop-down list when appropriate
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.FilterListBehavior.NonBlank">
            <summary>
            [2] Displays the "(NonBlanks)" item in the drop-down list when appropriate
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.FilterListBehavior.SortByMostOccurrences">
            <summary>
            [3] Sorts the drop-down list by the number of times an item occurs from most to least
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.FilterListBehavior.SortByLeastOccurrences">
            <summary>
            [4] Sorts the drop-down list by the number of times an item occurs from least to most
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.FilterListBehavior.DefaultFilter">
            <summary>
            [8] Includes in the drop-down list the DefaultFilterItem implementation of IFilterItem
            </summary>
        </member>
        <member name="F:FarPoint.Win.Spread.FilterListBehavior.Default">
            <summary>
            [1024] Uses the default filter behavior, including DefaultFilter, Blank, NonBlank, and SortAlphabetically
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.FilterColumnDefinitionCollection">
            <summary>
            Represents a collection of filter column definitions. 
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.FilterColumnDefinitionCollection.#ctor">
            <summary>
            Creates a new collection of filter column definitions.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.FilterColumnDefinitionCollection.FireChanged(System.ComponentModel.CollectionChangeAction,System.Object)">
            <summary>
            Internal use only.
            </summary>
            <param name="action"></param>
            <param name="element"></param>
        </member>
        <member name="F:FarPoint.Win.Spread.FilterColumnDefinitionCollection.changed">
            <summary>
            Occurs when a filter column definition is added, removed, or changed in the collection.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.FilterColumnDefinitionCollection.RemoveDupeOnAdd(FarPoint.Win.Spread.FilterColumnDefinition)">
            <summary>
            Internal use only.
            </summary>
            <param name="fcd"></param>
        </member>
        <member name="M:FarPoint.Win.Spread.FilterColumnDefinitionCollection.Contains(FarPoint.Win.Spread.FilterColumnDefinition)">
            <summary>
            Specifies whether the collection contains the specified filter column definition.
            </summary>
            <param name="fcd">Filter column definition for which to check the collection</param>
            <returns>true if the sheet is found in the collection; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.FilterColumnDefinitionCollection.IndexOf(FarPoint.Win.Spread.FilterColumnDefinition)">
            <summary>
            Returns the index of the specified filter column definition in the collection. 
            </summary>
            <param name="fcd">Filter column definition for which to return the index</param>
            <returns>Zero-based index of the filter column definition in the collection, or -1 if the filter column definition was not found</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.FilterColumnDefinitionCollection.Insert(System.Int32,FarPoint.Win.Spread.FilterColumnDefinition)">
            <summary>
            Inserts a filter column definition into the collection at the specified index.
            </summary>
            <param name="index">Zero-based index at which to insert the filter column definition</param>
            <param name="fcd">Filter column definition to insert into the collection</param>
            <exception cref="T:System.ArgumentNullException">
            Filter column definition is not specified or is null
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.FilterColumnDefinitionCollection.Remove(FarPoint.Win.Spread.FilterColumnDefinition)">
            <summary>
            Removes the specified filter column definition from the collection.
            </summary>
            <param name="fcd">Filter column definition to remove from the collection</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FilterColumnDefinitionCollection.RemoveAt(System.Int32)">
            <summary>
            Removes a filter column definition from the collection at the specified index. 
            </summary>
            <param name="index">Zero-based index of the filter column definition to remove from the collection</param>
            <exception cref="T:System.IndexOutOfRangeException">
            Filter column definition index out of range; must be between 0 and the total number of filter column definitions in the collection
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.FilterColumnDefinitionCollection.Add(FarPoint.Win.Spread.FilterColumnDefinition)">
            <summary>
            Adds a filter column definition to the collection.
            </summary>
            <param name="fcd">Filter column definition to add to the collection</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FilterColumnDefinitionCollection.Clear">
            <summary>
            Removes all the filter column definitions from the collection.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.FilterColumnDefinitionCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the filter column definition in the collection to an array. 
            </summary>
            <param name="array">Array to which to copy the filter column definitions</param>
            <param name="arrayIndex">Array index at which to start pasting the filter column definitions</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FilterColumnDefinitionCollection.GetColumnDefinitionIndexFromColumnIndex(System.Int32)">
            <summary>
            Gets the index of a filter column definition in the collection based on the specified column index.
            </summary>
            <param name="columnIndex">Column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FilterColumnDefinitionCollection.GetColumnIndexes">
            <summary>
            Gets an array of column indexes where filter column definitions exist.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.FilterColumnDefinitionCollection.Serialize(System.Xml.XmlTextWriter)">
            <summary>
            Saves the object to XML.
            </summary>
            <param name="w">XmlTextWriter object used to save the object</param>
            <returns>true if successful; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.FilterColumnDefinitionCollection.Deserialize(System.Xml.XmlNodeReader,FarPoint.Win.Spread.SheetView)">
            <summary>
            Loads the object from XML.
            </summary>
            <param name="r">XmlNodeReader from which to read the object</param>
            <param name="sheetView">SheetView object containing the sheet</param>
            <returns>true if successful; false otherwise</returns>
        </member>
        <member name="P:FarPoint.Win.Spread.FilterColumnDefinitionCollection.IsFixedSize">
            <summary>
            Gets whether the collection has a fixed size. 
            (This implementation always returns false.)
            </summary>
            <returns>Always returns false</returns>
        </member>
        <member name="P:FarPoint.Win.Spread.FilterColumnDefinitionCollection.IsReadOnly">
            <summary>
            Gets whether the collection is read-only.
            (This implementation always returns false.)
            </summary>
            <returns>Always returns false</returns>
        </member>
        <member name="E:FarPoint.Win.Spread.FilterColumnDefinitionCollection.Changed">
            <summary>
            Occurs when a sheet is added, removed, or changed in the collection.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FilterColumnDefinitionCollection.Count">
            <summary>
            Gets or sets the number of filter column definitions in the collection.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FilterColumnDefinitionCollection.Item(System.Int32)">
            <summary>
            Gets or sets the filter column definition at the specified position in the collection.
            </summary>
            <exception cref="T:System.Exception">
            Specified index is not valid; must be between 0 and total number in the collection
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Index not specified or specified index is null
            </exception>
        </member>
        <member name="T:FarPoint.Win.Spread.FilterItemCollection">
            <summary>
            Represents a collection of custom filters.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.FilterItemCollection.#ctor">
            <summary>
            Creates a custom filter collection.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.FilterItemCollection.Add(FarPoint.Win.Spread.IFilterItem)">
            <summary>
            Adds a filter item to the collection.
            </summary>
            <param name="filterItem">Custom filter item to add</param>
            <exception cref="T:System.ArgumentException">
            No display name or length of the display name of the specified filter is zero
            </exception>
            <exception cref="T:System.ArgumentException">
            No specified custom filter or specified custom filter is null
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.FilterItemCollection.Insert(System.Int32,FarPoint.Win.Spread.IFilterItem)">
            <summary>
            Inserts a filter item into the collection at a specified location.
            </summary>
            <param name="index">Index in the collection at which to add the filter</param>
            <param name="filterItem">Custom filter item to add</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Specified index is out of range; must be between 0 and the total number of filters in the collection
            </exception>
            <exception cref="T:System.ArgumentException">
            No display name or length of the display name of the specified custom filter is zero
            </exception>
            <exception cref="T:System.ArgumentException">
            No specified custom filter or specified custom filter is null
            </exception>
            <exception cref="T:System.ArgumentException">
            Specified custom filter display name already exists in the collection; the name must be unique
            </exception>
        </member>
        <member name="M:FarPoint.Win.Spread.FilterItemCollection.Serialize(System.Xml.XmlTextWriter)">
            <summary>
            Saves the object to XML.
            </summary>
            <param name="w">XmlTextWriter object used to save the object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FilterItemCollection.Deserialize(System.Xml.XmlNodeReader)">
            <summary>
            Internal implementation of ISerializeSupport interface method.  Internal use only.
            </summary>
            <param name="r">XmlNodeReader from which to read the object</param>
            <returns>true if successful; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.FilterItemCollection.Deserialize(System.Xml.XmlNodeReader,FarPoint.Win.Spread.SheetView)">
            <summary>
            Loads the object from XML.
            </summary>
            <param name="r">XmlNodeReader from which to read the object</param>
            <param name="sheetView">SheetView object containing the sheet</param>
        </member>
        <member name="P:FarPoint.Win.Spread.FilterItemCollection.Item(System.Int32)">
            <summary>
            Gets the custom filter items from the collection.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.FilterColumnDefinition">
            <summary>
            Represents a filter column definition.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.FilterColumnDefinition.#ctor">
            <summary>
            Creates a new filter column definition with default settings.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.FilterColumnDefinition.#ctor(System.Int32)">
            <summary>
            Creates a filter column definition.
            </summary>
            <param name="columnIndex">Column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FilterColumnDefinition.#ctor(System.Int32,FarPoint.Win.Spread.FilterListBehavior)">
            <summary>
            Creates a filter column definition with the specified list behavior.
            </summary>
            <param name="columnIndex">Column index</param>
            <param name="listBehavior">List behavior</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FilterColumnDefinition.Serialize(System.Xml.XmlTextWriter)">
            <summary>
            Saves the object to XML.
            </summary>
            <param name="w">XmlTextWriter object used to save the object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FilterColumnDefinition.Deserialize(System.Xml.XmlNodeReader,FarPoint.Win.Spread.SheetView)">
            <summary>
            Loads the object from XML.
            </summary>
            <param name="r">XmlNodeReader from which to read the object</param>
            <param name="sheetView">SheetView object containing the sheet</param>
        </member>
        <member name="P:FarPoint.Win.Spread.FilterColumnDefinition.ColumnIndex">
            <summary>
            Gets the column index.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FilterColumnDefinition.ListBehavior">
            <summary>
            Gets the list behavior.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FilterColumnDefinition.Filters">
            <summary>
            Gets the filter item collection from this filter column definition.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FilterColumnDefinition.CanSerializeXml">
            <summary>
            Gets whether the object in its entirety can be rendered with XML without losing any information. 
            </summary>
            
        </member>
        <member name="T:FarPoint.Win.Spread.IRowFilter">
            <summary>
            Interface for the creation of row filters for filtering rows on a sheet.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.IRowFilter.GetFilteredColumnIndexes">
            <summary>
            Gets an array of column indexes where row filters exist.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.IRowFilter.GetColumnFilterIndexFromColumnIndex(System.Int32)">
            <summary>
            Gets the column filter index for the specified column.
            </summary>
            <param name="columnIndex">Column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.IRowFilter.GetFilterColumnDefinition(System.Int32)">
            <summary>
            Gets the filter column definition for the specified column.
            </summary>
            <param name="columnIndex">Column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.IRowFilter.SetFilteredInRowList(System.Int32,System.Int32[])">
            <summary>
            Sets the list of rows currently filtered in for a specified column containing a filter definition.
            </summary>
            <param name="columnIndex">Column index</param>
            <param name="rowList">Integer array or list of row indexes</param>
        </member>
        <member name="M:FarPoint.Win.Spread.IRowFilter.AddFilteredOutRow(System.Int32)">
            <summary>
            Adds a row to the filtered-out row list, which is the list of rows currently filtered-out
            by the combined settings of the filtered columns.
            </summary>
            <param name="rowIndex">Row index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.IRowFilter.IsRowFilteredOut(System.Int32)">
            <summary>
            Determines whether the specified row is filtered out.
            </summary>
            <param name="rowIndex">Row index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.IRowFilter.ClearFilteredRows">
            <summary>
            Removes all temporary filter settings including the filtered-in list and filtered-out list.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.IRowFilter.ClearFilteredRows(System.Int32)">
            <summary>
            Removes all temporary filter settings for a specified column including the filtered-in list
            and the filtered-out list.
            </summary>
            <param name="columnIndex">Column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.IRowFilter.ResetFilter(System.Int32)">
            <summary>
            Resets the temporary filter settings for the specified column.
            </summary>
            <param name="columnIndex">Column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.IRowFilter.IsFiltered(System.Int32)">
            <summary>
            Determines whether the specified column is filtered.
            </summary>
            <param name="columnIndex">Column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.IRowFilter.SetIsFiltered(System.Int32,System.Boolean)">
            <summary>
            Internal use only.
            Sets the isFiltered flag for the existing column filter
            </summary>
            <param name="columnIndex">Column index</param>
            <param name="isFiltered">Whether the column is filtered</param>
        </member>
        <member name="M:FarPoint.Win.Spread.IRowFilter.GetColumnFilterBy(System.Int32)">
            <summary>
            Gets the string selected in the drop-down list of filters for the specified column.
            </summary>
            <param name="columnIndex">Columnn index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.IRowFilter.SetColumnFilterBy(System.Int32,System.String)">
            <summary>
            Internal use only.
            Sets the string selected in the drop-down list of filters for the specified column.
            </summary>
            <param name="columnIndex">Columnn index</param>
            <param name="filterBy">String containing the filter selection</param>
        </member>
        <member name="M:FarPoint.Win.Spread.IRowFilter.GetFilteredOutRowList">
            <summary>
            Gets the list of rows that are filtered out.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.IRowFilter.GetIntersectedFilteredInRows">
            <summary>
            Gets the intersection of the filtered-in rows for all the filtered columns.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.IRowFilter.GetIntersectedFilteredInRows(System.Int32)">
            <summary>
            Gets the intersection of the filtered-in rows for all the filtered columns except
            the specified column.
            </summary>
            <param name="columnIndex">Column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.IRowFilter.AddColumn(FarPoint.Win.Spread.FilterColumnDefinition)">
            <summary>
            Adds a filter column definition to the row filter.
            </summary>
            <param name="fcd">FilterColumnDefinition object containing the filter column definition</param>
        </member>
        <member name="M:FarPoint.Win.Spread.IRowFilter.RemoveColumn(FarPoint.Win.Spread.FilterColumnDefinition)">
            <summary>
            Removes a filter column definition from the row filter
            </summary>
            <param name="fcd">Filter column definition</param>
        </member>
        <member name="M:FarPoint.Win.Spread.IRowFilter.RemoveColumn(System.Int32)">
            <summary>
            Removes a filter column definition from the row filter
            </summary>
            <param name="columnIndex">Column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.IRowFilter.AddColumn(System.Int32)">
            <summary>
            Adds a filter column definition to the row filter.
            </summary>
            <param name="columnIndex">Column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.IRowFilter.AddColumn(System.Int32,FarPoint.Win.Spread.FilterListBehavior)">
            <summary>
            Adds a filter column definition to the row filter.
            </summary>
            <param name="columnIndex">Column index</param>
            <param name="listBehavior">FilterListBehvior object containing the list behavior</param>
        </member>
        <member name="M:FarPoint.Win.Spread.IRowFilter.MoveFilters(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Moves the filter column(s) to another location.
            </summary>
            <param name="fromRow">Row index from which to move</param>
            <param name="fromColumn">Column index from which to move</param>
            <param name="toRow">Destination row index</param>
            <param name="toColumn">Destination column index</param>
            <param name="rowCount">Number of rows to move</param>
            <param name="columnCount">Number of columns to move</param>
        </member>
        <member name="M:FarPoint.Win.Spread.IRowFilter.MoveFilters(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Moves the filter column(s) to another location.
            Intended for internal use only.
            </summary>
            <param name="fromRow">Row index from which to move</param>
            <param name="fromColumn">Column index from which to move</param>
            <param name="toRow">Destination row index</param>
            <param name="toColumn">Destination column index</param>
            <param name="rowCount">Number of rows to move</param>
            <param name="columnCount">Number of columns to move</param>
            <param name="ignoreUpdate">Whether to ignore resetting the column indexes in the filter column definitions</param>
        </member>
        <member name="M:FarPoint.Win.Spread.IRowFilter.SetupEventHandlers">
            <summary>
            Sets up the event handlers to listen to the SheetView object.
            Intended for internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.IRowFilter.ResetCachedIntersectedFilteredInRowIndexes">
            <summary>
            Reset the cached array of filtered in row indexes.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.IRowFilter.ColumnDefinitions">
            <summary>
            Gets the collection of filter column definitions for the sheet.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.IRowFilter.DropDownBorderStyle">
            <summary>
            Gets the style for the border around the drop-down list of filter items.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.IRowFilter.ShowFilterIndicator">
            <summary>
            Gets or sets whether the filter indicator is displayed.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.IRowFilter.AllString">
            <summary>
            Gets or sets the "(All)" filter item string.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.IRowFilter.BlanksString">
            <summary>
            Gets or sets the "(Blanks)" filter item string.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.IRowFilter.NonBlanksString">
            <summary>
            Gets or sets the "(NonBlanks)" filter item string.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.IRowFilter.SheetView">
            <summary>
            Gets or sets the sheet for this row filter.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.DefaultRowFilter">
            <summary>
            Represents a default row filter that extends to implement the supported row filters.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DefaultRowFilter.#ctor(FarPoint.Win.Spread.SheetView)">
            <summary>
            Creates a new default row filter for the specified sheet.
            </summary>
            <param name="sheetView">SheetView object containing the sheet</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DefaultRowFilter.OnSheetViewPropertyChanged(System.Object,FarPoint.Win.Spread.SheetViewPropertyChangeEventArgs)">
            <summary>
            Occurs when any of the sheet properties have changed.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Spread.DefaultRowFilter.OnDataModelChanged(System.Object,FarPoint.Win.Spread.Model.SheetDataModelEventArgs)">
            <summary>
            Occurs when the data model has changed.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DefaultRowFilter.Init">
            <summary>
            Internal use only. Initializes the default row filter.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DefaultRowFilter.AddColumn(FarPoint.Win.Spread.FilterColumnDefinition)">
            <summary>
            Adds a filter column definition to the row filter.
            </summary>
            <param name="fcd">FilterColumnDefinition object containing the filter column definition</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DefaultRowFilter.RemoveColumn(FarPoint.Win.Spread.FilterColumnDefinition)">
            <summary>
            Removes a filter column definition from the row filter.
            </summary>
            <param name="fcd">FilterColumnDefinition object containing the filter column definition</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DefaultRowFilter.RemoveColumn(System.Int32)">
            <summary>
            Removes a filter column definition from the row filter.
            </summary>
            <param name="columnIndex">Column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DefaultRowFilter.AddColumn(System.Int32)">
            <summary>
            Adds a filter column definition to the row filter.
            </summary>
            <param name="columnIndex">Column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DefaultRowFilter.AddColumn(System.Int32,FarPoint.Win.Spread.FilterListBehavior)">
            <summary>
            Adds a filter column definition to the row filter with the specified list behavior.
            </summary>
            <param name="columnIndex">Column index</param>
            <param name="listBehavior">FilterListBehavior object containing the list behavior</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DefaultRowFilter.OnFilterColumnDefinitionCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)">
            <summary>
            Occurs when the filter column definition collection has changed.
            </summary>
            <param name="o">Object that raises the event</param>
            <param name="e">CollectionChangeEventArgs object that contains the event data</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DefaultRowFilter.GetFilteredColumnIndexes">
            <summary>
            Gets an array of column indexes where row filters exist.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DefaultRowFilter.GetColumnFilterIndexFromColumnIndex(System.Int32)">
            <summary>
            Gets the column filter index from the specified column.
            </summary>
            <param name="columnIndex">Column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DefaultRowFilter.GetFilterColumnDefinition(System.Int32)">
            <summary>
            Gets the filter column definition from the specified column.
            </summary>
            <param name="columnIndex">Column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DefaultRowFilter.SetFilteredInRowList(System.Int32,System.Int32[])">
            <summary>
            Sets the list of rows currently filtered-in for a specified column containing a filter definition.
            </summary>
            <param name="columnIndex">Column index</param>
            <param name="rowList">List of rows</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DefaultRowFilter.AddFilteredOutRow(System.Int32)">
            <summary>
            Adds a row to the list of rows currently filtered-out
            by the combined settings of the filtered columns.
            </summary>
            <param name="rowIndex">Row index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DefaultRowFilter.IsRowFilteredOut(System.Int32)">
            <summary>
            Determines whether the specified row is filtered out.
            </summary>
            <param name="rowIndex">Row index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DefaultRowFilter.ClearFilteredRows">
            <summary>
            Removes all temporary filter settings, including the filtered-in list and filtered-out list.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DefaultRowFilter.ClearFilteredRows(System.Int32)">
            <summary>
            Removes all temporary filter settings for a specified column, 
            including the filtered-in list and the filtered-out list.
            </summary>
            <param name="columnIndex">Column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DefaultRowFilter.ResetFilter">
            <summary>
            Resets the filter settings for the entire row filter.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DefaultRowFilter.ResetFilter(System.Int32)">
            <summary>
            Resets the filter settings for the specified column.
            </summary>
            <param name="columnIndex">Column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DefaultRowFilter.IsFiltered(System.Int32)">
            <summary>
            Internal use only.
            Gets whether the specified column is filtered.
            </summary>
            <param name="columnIndex">Column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DefaultRowFilter.SetIsFiltered(System.Int32,System.Boolean)">
            <summary>
            Internal use only. 
            Sets whether the specified column is filtered.
            </summary>
            <param name="columnIndex">Column index</param>
            <param name="isFiltered">Whether the column is filtered</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DefaultRowFilter.GetColumnFilterBy(System.Int32)">
            <summary>
            Internal use only.
            Gets the string selected in the filter drop-down list for the specified column.
            </summary>
            <param name="columnIndex">Column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DefaultRowFilter.SetColumnFilterBy(System.Int32,System.String)">
            <summary>
            Internal use only.
            Sets the string selected in the filter drop-down list for the specified column.
            </summary>
            <param name="columnIndex">Column index</param>
            <param name="filterBy">Selected filter item</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DefaultRowFilter.GetFilteredOutRowList">
            <summary>
            Internal use only.
            Gets the list of indexes of the filtered-out rows.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DefaultRowFilter.GetIntersectedFilteredInRows">
            <summary>
            Internal use only.
            Gets the intersection of the filtered-in rows for all the filtered columns.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DefaultRowFilter.GetIntersectedFilteredInRows(System.Int32)">
            <summary>
            Internal use only.
            Gets the intersection of the filtered-in rows for all the filtered columns
            except the specified column.
            </summary>
            <param name="columnIndex">Column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DefaultRowFilter.MoveFilters(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Moves the filter column(s) to another location.
            </summary>
            <param name="fromRow">Row index from which to move</param>
            <param name="fromColumn">Column index from which to move</param>
            <param name="toRow">Destination row index</param>
            <param name="toColumn">Destination column index</param>
            <param name="rowCount">Number of rows to move</param>
            <param name="columnCount">Number of columns to move</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DefaultRowFilter.MoveFilters(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Moves the filter column(s) to another location.
            Intended for internal use only.
            </summary>
            <param name="fromRow">Row index from which to move</param>
            <param name="fromColumn">Column index from which to move</param>
            <param name="toRow">Destination row index</param>
            <param name="toColumn">Destination column index</param>
            <param name="rowCount">Number of rows to move</param>
            <param name="columnCount">Number of columns to move</param>
            <param name="ignoreUpdate">Whether to ignore resetting the column indexes in the filter column definitions</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DefaultRowFilter.Serialize(System.Xml.XmlTextWriter)">
            <summary>
            Saves the object to XML.
            </summary>
            <param name="w">XmlTextWriter object used to save the object</param>
            <returns>true if successful; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.DefaultRowFilter.Deserialize(System.Xml.XmlNodeReader)">
            <summary>
            Loads the object from XML.
            </summary>
            <param name="r">XmlNodeReader from which to read the object</param>
            <returns>true if successful; false otherwise</returns>
        </member>
        <member name="P:FarPoint.Win.Spread.DefaultRowFilter.DropDownBorderStyle">
            <summary>
            Gets or sets the style for the drop-down list of filter items.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DefaultRowFilter.ShowFilterIndicator">
            <summary>
            Gets or sets whether the filter indicator should be displayed.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DefaultRowFilter.AllString">
            <summary>
            Gets or sets the all filter items string.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DefaultRowFilter.BlanksString">
            <summary>
            Gets or sets the  blanks (empty cells) string.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DefaultRowFilter.NonBlanksString">
            <summary>
            Gets or sets the non-blanks (non-empty cells) string.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DefaultRowFilter.ColumnDefinitions">
            <summary>
            Gets the collection of filter column definitions.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DefaultRowFilter.SheetView">
            <summary>
            Gets or sets the sheet associated with this row filter.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.HideRowFilter">
            <summary>
            Represents the filter that hides rows based on certain criteria.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.HideRowFilter.#ctor(FarPoint.Win.Spread.SheetView)">
            <summary>
            Creates a new row filter for the specified sheet that hides rows that match the criteria.
            </summary>
            <param name="sheetView">SheetView object containing the sheet</param>
        </member>
        <member name="M:FarPoint.Win.Spread.HideRowFilter.Serialize(System.Xml.XmlTextWriter)">
            <summary>
            Saves the object to XML.
            </summary>
            <param name="w">XmlTextWriter object used to save the object</param>
            <returns>true if successful; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.HideRowFilter.Deserialize(System.Xml.XmlNodeReader)">
            <summary>
            Loads the object from XML.
            </summary>
            <param name="r">XmlNodeReader from which to read the object</param>
            <param name="sheetView">SheetView object containing the sheet</param>
            <returns>true if successful; false otherwise</returns>
        </member>
        <member name="T:FarPoint.Win.Spread.StyleRowFilter">
            <summary>
            Represents the filter that sets the styles of rows based on certain criteria.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleRowFilter.#ctor(FarPoint.Win.Spread.SheetView)">
            <summary>
            Creates a new style row filter for the specified sheet.
            </summary>
            <param name="sheetView">SheetView object containing the sheet</param>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleRowFilter.#ctor(FarPoint.Win.Spread.SheetView,FarPoint.Win.Spread.NamedStyle,FarPoint.Win.Spread.NamedStyle)">
            <summary>
            Creates a new style row filter for the specified sheet with specified styles.
            </summary>
            <param name="sheetView">SheetView object containing the sheet</param>
            <param name="inStyle">Style for items filtered in</param>
            <param name="outStyle">Style for items filtered out</param>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleRowFilter.Init">
            <summary>
            Internal use only. Initializes the style row filter.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleRowFilter.OnNamedStyleChanged(System.Object,System.EventArgs)">
            <summary>
            Occurs when the style has changed.
            </summary>
            <param name="o">Object that raises the event</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleRowFilter.Serialize(System.Xml.XmlTextWriter)">
            <summary>
            Saves the object to XML.
            </summary>
            <param name="w">XmlTextWriter object used to save the object</param>
            <returns>true if successful; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.StyleRowFilter.Deserialize(System.Xml.XmlNodeReader)">
            <summary>
            Loads the object from XML.
            </summary>
            <param name="r">XmlNodeReader from which to read the object</param>
            <returns>true if successful; false otherwise</returns>
        </member>
        <member name="P:FarPoint.Win.Spread.StyleRowFilter.InStyle">
            <summary>
            Gets the style that is applied to rows that satisfy the filter.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.StyleRowFilter.OutStyle">
            <summary>
            Gets the style that is applied to rows that do not satisfy the filter.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.FilterGadget">
            <summary>
            Represents a filter gadget.  Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.FilterGadget.#ctor(FarPoint.Win.Spread.SpreadView)">
            <summary>
            Creates a new filter gadget.
            </summary>
            <param name="spreadView">SpreadView object containing the view</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FilterGadget.RemoveList">
            <summary>
            Removes the drop-down list.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.FilterGadget.ShowList(System.Int32,System.String,System.Drawing.Point,System.Int32,System.Boolean,FarPoint.Win.Spread.FilterListBehavior)">
            <summary>
            Shows or removes the drop-down list.
            </summary>
            <param name="columnIndex">Column index</param>
            <param name="filterByString">Selected filter item in list</param>
            <param name="location">Point where the drop-down list displays</param>
            <param name="columnWidth">Width of column</param>
            <param name="show">Whether to display the drop-down list</param>
            <param name="listBehavior">Behavior of filter list</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FilterGadget.OnFilter_CloseUp(System.Object,FarPoint.Win.Spread.EditModeStartingEventArgs)">
            <summary>
            Handles the filter close up event.
            </summary>
            <param name="o">Object that raises the event</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FilterGadget.OnFilter_CloseUp(System.Object,System.EventArgs)">
            <summary>
            Handles the filter close up event.
            </summary>
            <param name="o">Object that raises the event</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FilterGadget.OnFilter_LostFocus(System.Object,System.EventArgs)">
            <summary>
            Handles the filter lost focus event.
            </summary>
            <param name="o">Object that raises the event</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FilterGadget.OnFilter_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the filter selected index changed event.
            </summary>
            <param name="o">Object that raises the event</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:FarPoint.Win.Spread.FilterGadget.Invalidate(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Boolean,System.Int32)">
            <summary>
            Repositions and repaints the filter gadget button.
            </summary>
            <param name="g">Graphics device interface for painting</param>
            <param name="x">X coordinate of the button</param>
            <param name="y">Y coordinate of the button</param>
            <param name="width">Width of the button</param>
            <param name="height">Height of the button</param>
            <param name="zoomFactor">Numeric value for zoom factor for scaling when painting </param>
            <param name="isSelected">Whether the button is selected </param>
            <param name="column">Column index</param>
        </member>
        <member name="P:FarPoint.Win.Spread.FilterGadget.ButtonWidth">
            <summary>
            Gets the static width of the filter button.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FilterGadget.List">
            <summary>
            Sets the drop-down list string array.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FilterGadget.IsListVisible">
            <summary>
            Gets whether the drop-down list is displayed.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.FilterGadget.GadgetColumn">
            <summary>
            Gets the column for this filter gadget.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.IFilterItem">
            <summary>
            Interface that supports the creation of custom row filters for filtering rows on a sheet.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.IFilterItem.ShowInDropDown(System.Int32,System.Int32[])">
            This method is called prior to displaying the filter drop-down to determine whether this
            filter should be displayed in the filter drop-down based on the currently filtered-in rows.
            <summary>
            Determines whether this filter should be displayed in the filter drop-down list 
            based on the currently filtered-in rows.
            </summary>
            <param name="columnIndex">Column index</param>
            <param name="filteredInRowList">List of rows filtered in</param>
        </member>
        <member name="M:FarPoint.Win.Spread.IFilterItem.Filter(System.Int32)">
            This method is called when the custom filter is invoked by selecting it from the
            filter drop-down list
            <summary>
            Selects a filter from the filter drop-down list.
            </summary>
            <param name="columnIndex">Column index</param>
        </member>
        <member name="P:FarPoint.Win.Spread.IFilterItem.DisplayName">
            <summary>
            Gets the display name.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.IFilterItem.SheetView">
            <summary>
            Sets the sheet to filter.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.IFilterItem.DisplayAtTopOfList">
            <summary>
            Gets whether the display name should be added to the top of the filter drop-down list.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.BaseFilterItem">
            <summary>
            Represents the basis for a custom filter.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.BaseFilterItem.#ctor">
            <summary>
            Creates a new base custom filter.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.BaseFilterItem.ShowInDropDown(System.Int32,System.Int32[])">
            <summary>
            Determines whether the name is displayed in the filter drop-down list.
            </summary>
            <param name="columnIndex">Column index</param>
            <param name="filteredInRowList">List of rows filtered in</param>
        </member>
        <member name="M:FarPoint.Win.Spread.BaseFilterItem.Filter(System.Int32)">
            <summary>
            Filters the specified column of the sheet.
            </summary>
            <param name="columnIndex">Column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.BaseFilterItem.Serialize(System.Xml.XmlTextWriter)">
            <summary>
            Saves the object to XML.
            </summary>
            <param name="w">XmlTextWriter object used to write (save) the object</param>
        </member>
        <member name="M:FarPoint.Win.Spread.BaseFilterItem.Deserialize(System.Xml.XmlNodeReader)">
            <summary>
            Loads the object from XML.
            </summary>
            <param name="r">XmlNodeReader from which to read (load) the object</param>
        </member>
        <member name="P:FarPoint.Win.Spread.BaseFilterItem.DisplayName">
            <summary>
            Gets the display name of the filter.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.BaseFilterItem.SheetView">
            <summary>
            Sets the sheet to filter.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.BaseFilterItem.DisplayAtTopOfList">
            <summary>
            Gets or sets whether the display name is added to the top of the filter drop-down list.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.DefaultFilterItem">
            The DefaultFilter implementation of the ICustomFilterItem interface.  This class performs
            Excel-like filtering by hiding rows that do not meet the filter criteria.  In addition,
            the DefaultFilter can filter by applying a filtered-in style or filtered-out style to each
            row based on whether the row item satisfies the filter criteria.
            <summary>
            Represents the default filtering of rows based on specified criteria.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DefaultFilterItem.#ctor">
            <summary>
            Creates a default filter.
            </summary>
            <param name="sheetView">Sheet</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DefaultFilterItem.#ctor(FarPoint.Win.Spread.SheetView)">
            <summary>
            Creates a default filter for the specified sheet.
            </summary>
            <param name="sheetView">SheetView object containing the sheet</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DefaultFilterItem.IsFilteredIn(System.String)">
            <summary>
            Gets whether the value satisfies the filter criteria.
            </summary>
            <param name="value">String with the value</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DefaultFilterItem.ShowInDropDown(System.Int32,System.Int32[])">
            <summary>
            Determines whether the filter item name should be displayed in the filter drop-down list.
            </summary>
            <param name="columnIndex">Column index</param>
            <param name="filteredInRowList">List</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DefaultFilterItem.Filter(System.Int32)">
            <summary>
            Filters the specified column of the sheet.
            </summary>
            <param name="columnIndex">Column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DefaultFilterItem.BlanksFilterItem(System.Int32)">
            <summary>
            Filter item for the specified column to filter in blanks (empty cells).
            </summary>
            <param name="columnIndex">Column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DefaultFilterItem.NonBlanksFilterItem(System.Int32)">
            <summary>
            Filter item for the specified column to filter in non-blanks (non-empty cells).
            </summary>
            <param name="columnIndex">Column index</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DefaultFilterItem.Deserialize(System.Xml.XmlNodeReader)">
            <summary>
            Internal implementation of ISerializeSupport interface method.  Internal use only.
            </summary>
            <param name="r">XmlNodeReader from which to read the object</param>
            <returns>true if successful; false otherwise</returns>
        </member>
        <member name="P:FarPoint.Win.Spread.DefaultFilterItem.SheetView">
            <summary>
            Sets the sheet to filter. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DefaultFilterItem.DisplayName">
            <summary>
            Gets the display name of the filter.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DefaultFilterItem.DisplayAtTopOfList">
            <summary>
            Gets whether the display name should be added to the top of the filter drop-down list.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DefaultFilterItem.FilterByString">
            <summary>
            Gets or sets the string by which to filter.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.CellType.CellTypeConverter">
            <summary>
            Provides a drop-down list of cell types for a property of type ICellType in the property grid.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.CellTypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            Retrieves the set of properties for this type.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.CellTypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Retrieves the set of standard values for this type.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.CellTypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Determines whether this object supports properties.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.CellTypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Determines whether this object supports standard values.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.CellTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether the specified type can be converted to a cell type object.
            </summary>
            <param name="context">ITypeDescriptorContext</param>
            <param name="sourceType">Type</param>
            <returns>True if sourceType is String, false otherwise.</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.CellTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts a string to a new cell type object.
            </summary>
            <param name="context">ITypeDescriptorContext</param>
            <param name="culture">CultureInfo</param>
            <param name="value">object</param>
            <returns>A new border object.</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.CellTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns a value indicating whether a cell type object can be converted to the specified type.
            </summary>
            <param name="context">ITypeDescriptorContext</param>
            <param name="destinationType">Type</param>
            <returns>True if a border object can be converted to the specified type, and false otherwise.</returns>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.CellTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the cell type object to a string.
            </summary>
            <param name="context">ITypeDescriptorContext</param>
            <param name="culture">CultureInfo</param>
            <param name="value">object</param>
            <param name="destinationType">Type</param>
            <returns>String representation of a border object.</returns>
        </member>
        <member name="T:FarPoint.Win.Spread.CellType.DesignTimeCellTypeConverter">
            <summary>
            Provides a drop-down list of cell types for a property of type ICellType in the property grid.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.DesignTimeCellTypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>
            Creates an object of this type by using a specified set of
            property values for the object.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.CellType.DesignTimeCellTypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Determines whether changing a value on this object should
            require a call to the CreateInstance method to create a new
            value.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Spread.DrawingSpace.DrawingToolbar">
            <summary>
            Represents the tool bar for shapes.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.DrawingToolbar.#ctor">
            <summary>
            Creates a new drawing tool bar.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.DrawingToolbar.#ctor(System.Windows.Forms.Control,FarPoint.Win.Spread.DrawingSpace.PSContainer)">
            <summary>
            Creates a new drawing tool bar for the specified container in the specified control.
            </summary>
            <param name="control">Control</param>
            <param name="container">Container</param>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.DrawingToolbar.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Spread.DrawingSpace.DrawingToolbar.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.DrawingToolbar.ToolbarPanel">
            <summary>
            Gets the tool bar panel.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.DrawingToolbar.ToolbarMain">
            <summary>
            Gets the main tool bar.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.DrawingToolbar.ToolbarSupplement">
            <summary>
            Gets the supplementary tool bar.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.DrawingToolbar.OwningControl">
            <summary>
            Gets or sets the owner control.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.DrawingToolbar.ShapeContainer">
            <summary>
            Gets or sets the shape container.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.DrawingToolbar.ContainerXOffset">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Spread.DrawingSpace.DrawingToolbar.ContainerYOffset">
            <summary>
            Internal use only.
            </summary>
        </member>
    </members>
</doc>
